@using Syncfusion.EJ2
@using Syncfusion.EJ2.Kanban
@using Syncfusion.EJ2.DropDowns

@section ControlsSection {
    <div class="col-lg-8 control-section">
        <div class="content-wrapper overflow">
            @Html.EJS().Kanban("kanban").KeyField("Status").Height("500px").DataSource((IEnumerable<object>)ViewData["data"]).Columns(col =>
            {
           col.HeaderText("To Do").KeyField("Open").Add();
           col.HeaderText("In Progress").KeyField("InProgress").Add();
           col.HeaderText("Done").KeyField("Close").Add();
       }).CardSettings(card =>  {
           card.ContentField("Summary").HeaderField("Id");
       }).SwimlaneSettings(swim => {
           swim.KeyField("Assignee");
       }).Created("onCreate").Render()
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties">
            <tr>
                <td>
                    <div>Sort Direction</div>
                </td>
                <td>
                    <div>
                        @Html.EJS().DropDownList("sort").Width("100%").DataSource(
                    (IEnumerable<object>)ViewData["SortDropDown"]).Change("changeSortOrder").Fields(new DropDownListFieldSettings { Text = "Value", Value = "Value" }).Index(0).Render()
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div>Enable Swimlane Drag And Drop</div>
                </td>
                <td>
                    @Html.EJS().CheckBox("acrossDragAndDrop").Checked(false).Change("onChange").Render()
                </td>
            </tr>
            <tr>
                <td>
                    <div>Show Empty Swimlane Row</div>
                </td>
                <td>
                    @Html.EJS().CheckBox("emptyRow").Checked(false).Change("onChange").Render()
                </td>
            </tr>
            <tr>
                <td>
                    <div>Show Swimlane Item Count</div>
                </td>
                <td>
                    @Html.EJS().CheckBox("itemCount").Checked(true).Change("onChange").Render()
                </td>
            </tr>
            <tr>
                <td>
                    <div>Enable Frozen Rows</div>
                </td>
                <td>
                    @Html.EJS().CheckBox("frozenRow").Change("onChange").Render()
                </td>
            </tr>
        </table>
    </div>
    <script>
        var kanbanObj;
        function onCreate() {
            kanbanObj = this;
        }
        function onChange(args) {
            var value = this.element.id;
            switch (value) {
                case 'acrossDragAndDrop':
                    kanbanObj.swimlaneSettings.allowDragAndDrop = args.checked;
                    break;
                case 'emptyRow':
                    kanbanObj.swimlaneSettings.showEmptyRow = args.checked;
                    break;
                case 'itemCount':
                    kanbanObj.swimlaneSettings.showItemCount = args.checked;
                    break;
                case 'frozenRow':
                    kanbanObj.swimlaneSettings.enableFrozenRows = args.checked;
                    break;
                default:
                    break;
            }
        }
        function changeSortOrder(args) {
            kanbanObj.swimlaneSettings.sortDirection = args.value;
        }
    </script>

    <style>
        .overflow {
                overflow: hidden;
            }
    </style>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates the swimlane functionalities of Kanban control. Provided options in the property panel
            to sort
            the cards, enable drag-and-drop across swimlanes, show or hide the empty row, items count and swimlane frozen rows. Also, you can
            expand/collapse the swimlane row in the Kanban board.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample renders the assignee field as a swimlane header using the <code>SwimlaneSettings</code> property.
            The property provides the following options to change its related settings:
        </p>
        <ul>
            <li>Sorting the swimlane cards using the <code>SwimlaneSettings.SortDirection</code> property</li>
            <li>
                Control the drag-and-drop of the cards across swimlane using the
                <code>SwimlaneSettings.AllowDragAndDrop</code> property.
            </li>
            <li>Show or hide the empty swimlane row using the <code>SwimlaneSettings.ShowEmptyRow</code> property.</li>
            <li>
                Show or hide the items count in the swimlane header using the <code>SwimlaneSettings.ShowItemCount</code>
                property.
            </li>
            <li>Enable or disable the frozen swimlane rows using the <code>SwimlaneSettings.EnableFrozenRows</code> property.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Swimlane in ASP.NET MVC Kanban control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC Kanban Swimlane Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Swimlane in ASP.NET MVC Kanban Control</h1>
                }