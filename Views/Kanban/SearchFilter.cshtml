@using Syncfusion.EJ2
@using Syncfusion.EJ2.Kanban
@using Syncfusion.EJ2.DropDowns

@section ControlsSection {
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().Kanban("kanban").KeyField("Status").DataSource((IEnumerable<object>)ViewData["data"]).Columns(col => {
            col.HeaderText("To Do").KeyField("Open").Add();
            col.HeaderText("In Progress").KeyField("InProgress").Add();
           col.HeaderText("Testing").KeyField("Testing").Add();
            col.HeaderText("Done").KeyField("Close").Add();
            }).CardSettings(card => { card.ContentField("Summary").HeaderField("Id");}).SwimlaneSettings(swim => { swim.KeyField("Assignee"); }).Created("kanbanCreate").Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <div class="property-panel-section">
            <p class="property-panel-header">Filtering</p>
            <div class="property-panel-content">
                <table class="e-filter-table">
                    <tr>
                        <td class="e-filter-label">
                            <div>Priority</div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().DropDownList("priority_filter").DataSource((IEnumerable<object>)ViewData["PriorityData"]).Created("priorityCreate").Select("prioritySelect").Index(0).Placeholder("Select a priority").Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="e-filter-label">
                            <div>Status</div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().DropDownList("status_filter").DataSource((IEnumerable<object>)ViewData["StatusData"]).Created("statusCreate").Select("statusSelect").Fields(new DropDownListFieldSettings { Text = "Id", Value = "Value" }).Index(0).Placeholder("Select a status").Render()
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <p class="property-panel-header">Searching</p>
            <div class="property-panel-content">
                <table class="e-filter-table">
                    <tr>
                        <td>
                            <div>
                                @Html.EJS().TextBox("search_text").Placeholder("Enter search text").ShowClearButton(true).Created("searchCreate").Render();
                            </div>
                        </td>
                    </tr>
                </table>
                <div class='e-reset'>
                    @Html.EJS().Button("reset_filter").Content("Reset").Render()
                </div>
            </div>
        </div>
    </div>
    <script>
        var kanbanObj, priorityObj, statusObj;
        var emptyValue = true;
        function kanbanCreate() {
            kanbanObj = this;
        }

        function priorityCreate() {
            priorityObj = this;
        }

        function statusCreate() {
            statusObj = this;
        }

        function searchCreate() {
            textObj = this;
        }

        function prioritySelect(args) {
            var filterQuery = new ej.data.Query();
            if (args.itemData.value !== 'None') {
                filterQuery = new ej.data.Query().where('Priority', 'equal', args.itemData.value);
            }
            statusObj.value = 'None';
            kanbanObj.query = filterQuery;
        }

        function statusSelect(args) {
            var filterQuery = new ej.data.Query();
            if (args.itemData.Value !== 'None') {
                filterQuery = new ej.data.Query().where('Status', 'equal', args.itemData.Value);
            }
            priorityObj.value = 'None';
            kanbanObj.query = filterQuery;
        }
        document.getElementById('reset_filter').onclick = function () {
            textObj.value = '';
            reset();
        };
        document.getElementById('search_text').onfocus = function (e) {
            if (e.target.value === '') {
                reset();
            }
        };
        function reset() {
            priorityObj.value = 'None';
            statusObj.value = 'None';
            kanbanObj.query = new ej.data.Query();
        }

        document.getElementById('search_text').onkeyup = function (e) {
            if (e.code === 'Tab' || e.code === 'Escape' || e.code === 'ShiftLeft' || (e.code === 'Backspace' && emptyValue)) {
                return;
            }
            var searchValue = e.target.value;
            searchValue.length === 0 ? emptyValue = true : emptyValue = false;
            var searchQuery = new ej.data.Query();
            if (searchValue !== '') {
                searchQuery = new ej.data.Query().search(searchValue, ['Id', 'Summary'], 'contains', true);
            }
            kanbanObj.query = searchQuery;
        };
    </script>
    <style type="text/css">
        .property-panel-content .e-filter-table {
            width: 100%;
        }

        .property-panel-content .e-filter-label {
            width: 30%
        }

        .property-panel-content .e-reset {
            padding-top: 13px;
            text-align: center;
        }

        .property-panel-content td {
            padding-top: 10px;
        }

        .property-panel-header {
            padding-bottom: 0px;
        }
    </style>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the filtering and searching actions of Kanban. In this sample, select the key value
            from drop down list to display the filtered data in Kanban board. Type in search box to be searched in
            header/content and display the search result
            in a board.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Kanban provides an option to filter or search the cards and display them on the Kanban board using the <code>query</code> property.
        </p>
        <ul>
            <li>In query, <code>where</code> used for filtering the Kanban cards.</li>
            <li>In query, <code>search</code> is used for searching the cards.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Search and Filter Cards in ASP.NET MVC Kanban control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC Kanban Search and Filter Cards Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Search and Filter Cards in ASP.NET MVC Kanban Control</h1>
                }