@using Syncfusion.EJ2
@using Syncfusion.EJ2.Kanban
@using Syncfusion.EJ2.DropDowns;

@section ControlsSection {
<div class="col-lg-9 control-section">
    <div class="control_wrapper">
        @Html.EJS().Kanban("kanban").KeyField("Status").DataSource((IEnumerable<object>)ViewData["data"]).Columns(col=> {
       col.HeaderText("To Do").KeyField("Open").AllowToggle(true).ShowItemCount(true).MinCount(6).MaxCount(8).Add();
       col.HeaderText("In Progress").KeyField("InProgress").ShowItemCount(true).AllowToggle(true).MinCount(2).Add();
       col.HeaderText("Done").KeyField("Close").ShowItemCount(true).AllowToggle(true).MaxCount(4).Add();
   }).CardSettings(card =>  {
        card.ContentField("Summary").HeaderField("Id");
        }).SwimlaneSettings(swim => {
        swim.KeyField("Assignee").AllowDragAndDrop(true);
        }).Created("onCreate").Render()
    </div>
    <div>
        @Html.EJS().Dialog("defaultDialog").Header("Validation").IsModal(true).Width("350px").ShowCloseIcon(true).Visible(false).Buttons((List<Syncfusion.EJ2.Popups.DialogDialogButton>)ViewData["DefaultButtons"]).Created("onDialogCreate").Render()
    </div>
</div>
    <div class="col-lg-3 property-section property-customization">
        <div class="property-panel-section">
            <p class="property-panel-header">Constraint</p>
            <div class="property-panel-content">
                <table class="e-constraint-table">
                    <tr>
                        <td class="e-constraint-label">
                            <div>Type</div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().DropDownList("type").Width("100%").Index(0).DataSource((IEnumerable<Object>)ViewData["ColumnDropDowns"]).Fields(new DropDownListFieldSettings { Text = "Value", Value = "Value" }).Change("changeContrainType").Render()
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <p class="property-panel-header">Validate Constraints</p>
            <div class="property-panel-content">
                <form id="column">
                    <table class="e-constraint-table">
                        <tr>
                            <td class="e-constraint-label">
                                <div>Columns</div>
                            </td>
                            <td>
                                @Html.EJS().DropDownList("key").Width("100%").DataSource((IEnumerable<Object>)ViewData["StatusData"]).Fields(new DropDownListFieldSettings { Text = "Value", Value = "ListId" }).Change("columnObj").Created("onDropDownCreate").Placeholder("Header Text").Render()
                            </td>
                        </tr>
                        <tr>
                            <td class="e-constraint-label">
                                <div>MinCount</div>
                            </td>
                            <td>
                                @Html.EJS().NumericTextBox("minIndex").Min(0).Placeholder("Minimum Count").Format("###.##").Created("onMinCreate").Render()
                            </td>
                        </tr>
                        <tr>
                            <td class="e-constraint-label">
                                <div>MaxCount</div>
                            </td>
                            <td>
                                @Html.EJS().NumericTextBox("maxIndex").Min(0).Placeholder("Maximum Count").Created("onMaxCreate").Format("###.##").Render()
                            </td>
                        </tr>
                    </table>
                    <div class="e-validate">
                        <button class="e-btn" id="validate">VALIDATE</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <style>
        .property-panel-content .e-constraint-table {
            width: 100%
        }

        .property-panel-content .e-constraint-label {
            width: 40%
        }

        .property-panel-content .e-validate {
            padding-top: 13px;
            text-align: center;
        }

        .property-panel-content td {
            padding-top: 10px;
        }

        .property-panel-header {
            padding-bottom: 0px;
        }
    </style>
    <script>
        var kanbanObj;
        var minimum;
        var maximum;
        var keyObj;
        var dialogObj;
      
        function onDialogCreate() {
            dialogObj = this;
        }
        function changeContrainType(args) {
            kanbanObj.constraintType = args.value;
        }

        function columnObj(args) {
            var changeIndex = args.value;
            if (changeIndex !== null) {
                minimum.value = kanbanObj.columns[changeIndex].minCount;
                maximum.value = kanbanObj.columns[changeIndex].maxCount;
            }
        }
        var addFormObj = new ej.inputs.FormValidator('#column');
        function onDropDownCreate() {
            keyObj = this;
        }
        function onCreate() {
            kanbanObj = this;
        }
        function onMinCreate() {
            minimum = this;
        }
        function onMaxCreate() {
            maximum = this;
        }
        document.getElementById('validate').onclick = function () {
            var colindex = keyObj.index;
            var colText = (document.getElementById('key')).value;
            var colmin = parseInt((document.getElementById('minIndex')).value, 10);
            var colmax = parseInt((document.getElementById('maxIndex')).value, 10);
            if (colText === '') {
                dialogObj.content = 'Select column Header Text';
                dialogObj.show();
            } else if (colText !== '' && minimum.value === null && maximum.value === null) {
                dialogObj.content = 'Enter column min-count or max-count';
                dialogObj.show();
            } else {
                kanbanObj.columns[colindex].headerText = colText;
                if (minimum.value !== null) {
                    kanbanObj.columns[colindex].minCount = colmin;
                }
                if (minimum.value !== null) {
                    kanbanObj.columns[colindex].maxCount = colmax;
                }
                addFormObj.reset();
            }
        };
        document.getElementById('column').addEventListener('submit', (e) => e.preventDefault());
        function dlgButtonClick() {
            dialogObj.hide();
        }

    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the number of cards validation for each column of the Kanban control. Configured the options in the property panel to change the constraint type and related attributes.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>This sample validates the number of cards in the particular column or swimlane using the <code>ConstraintType</code> property. This property contains two types:</p>
        <ul>
            <li><code>Column</code>: Validates the number of cards based on the particular column. By default, column validation is applied to Kanban board.</li>
            <li><code>Swimlane</code>: Validation applies based on number of cards in a particular column cell and swimlane.</li>
        </ul>
        <p>This sample contains the following properties:</p>
        <ul>
            <li><code>Columns</code>: You can choose a column and set maximum and minimum limit to the selected column.</li>
            <li><code>MinCount</code>: Minimum limit of cards required for each column. If the cards count do not reach the minimum limit, it will indicate the validation failed state.</li>
            <li><code>MaxCount</code>: Maximum limit of cards per column. If the cards count exceeds the maximum limit, it will indicate the validation failed state.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the WIP Validation in ASP.NET MVC Kanban control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC Kanban WIP Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of WIP Validation in ASP.NET MVC Kanban Control</h1>
                }