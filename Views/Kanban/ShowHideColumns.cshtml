@using Syncfusion.EJ2
@using Syncfusion.EJ2.Kanban

@section ControlsSection {
<div class="col-lg-9 control-section">
    <div class="control_wrapper">
        @Html.EJS().Kanban("kanban").KeyField("Status").DataSource((IEnumerable<object>)ViewData["data"]).Columns(col=> {
       col.HeaderText("To Do").KeyField("Open").Add();
       col.HeaderText("In Progress").KeyField("InProgress").Add();
       col.HeaderText("In Review").KeyField("Review").Add();
       col.HeaderText("Done").KeyField("Close").Add();
   }).CardSettings(card =>  {
           card.ContentField("Summary").HeaderField("Id");
       }).Created("onCreate").Render()

    </div>
</div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Show/Hide Columns">
            <tbody>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("Open").Checked(true).Change("onChange").Label("To Do").Render()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("InProgress").Checked(true).Change("onChange").Label("In Progress").Render()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("Review").Checked(true).Change("onChange").Label("In Review").Render()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("Close").Checked(true).Change("onChange").Label("Done").Render()
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script>
        var kanbanObj;
        function onCreate() {
            kanbanObj = this;
        }
        function onChange(args) {
            if (args.checked) {
                kanbanObj.showColumn(this.element.id);
            } else {
                kanbanObj.hideColumn(this.element.id);
            }
        }
    </script>
    <style>
        #property tr {
            height: 50px;
        }
    </style>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how to control the visibility of Kanban columns dynamically. Check or uncheck the
            checkboxes
            from the property panel to show or hide the corresponding column.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Kanban provides an option to show or hide its columns dynamically using the following public methods.
        </p>
        <ul>
            <li><code>ShowColumn:</code> Makes the corresponding column visible based on the specified ID.</li>
            <li><code>HideColumn:</code> Hides the corresponding column based on the specified column ID.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Show Hide Columns in ASP.NET MVC Kanban control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC Kanban Show Hide Columns Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Show Hide Columns in ASP.NET MVC Kanban Control</h1>
                }