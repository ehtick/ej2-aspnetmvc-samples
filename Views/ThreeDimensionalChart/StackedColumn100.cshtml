@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">

        @Html.EJS().Chart3D("container").EnableRotation(true).Rotation(7).WallColor("transparent").Height("400").Tilt(10).Depth(100).Title("Motor Vehicle Production by Manufacturer").PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).LabelPlacement(Syncfusion.EJ2.Charts.LabelPlacement.BetweenTicks)
   ).Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn100).DataSource(ViewData["ChartData"]).XName("X").YName("Y").Name("General Motors").ColumnWidth(0.5).Add();
       series.Type(Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn100).DataSource(ViewData["ChartData"]).XName("X").YName("Y1").Name("Honda").ColumnWidth(0.5).Add();
       series.Type(Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn100).DataSource(ViewData["ChartData"]).XName("X").YName("Y2").Name("Suzuki").ColumnWidth(0.5).Add();
       series.Type(Syncfusion.EJ2.Charts.Chart3DSeriesType.StackingColumn100).DataSource(ViewData["ChartData"]).XName("X").YName("Y3").Name("BMW").ColumnWidth(0.5).Add();
   }).PrimaryYAxis(py => py.RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
        ).Tooltip(tt => tt.Enable(true).Format("${point.x} : <b>${point.y} (${point.percentage}%)</b>")
        ).LegendSettings(leg => leg.EnableHighlight(true)).Load("load").Render()
    </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/three-dimensional-chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            load3DChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? '100%' : '75%';
            args.chart.primaryYAxis.interval = ej.base.Browser.isDevice ? 25 : 20;
        }
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the 100% 3D Column in ASP.NET MVC 3D Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This example of a 100% 3D stacked column chart visualizes motor vehicle production by manufacturer using a stacked column series. The legend in the sample provides information about these series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the 100% 3D stacked column chart. The 100% 3D stacked column chart displays multiple series of data as stacked columns, ensuring that the cumulative proportion of each stacked element always totals 100%.
    </p>
    <p>
        <code>Tooltips</code> are enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
}
@section Title{
    <title>ASP.NET MVC Chart 100% 3D Column Chart Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of 100% 3D Column in ASP.NET MVC 3D Chart Control</h1>
}

