@using Syncfusion.EJ2
@using Syncfusion.EJ2.InteractiveChat
@using Syncfusion.EJ2.Buttons
@using Newtonsoft.Json

@{
    var template = "<div ${if(category!==null)} class = 'clearfix desc e-list-wrapper e-list-multi-line e-list-avatar' ${else} " +
                "class = 'clearfix e-list-wrapper e-list-multi-line e-list-avatar' ${/if}> ${if(imgSrc!=='')}" +
                "<img class='e-avatar' src='./../Content/chatui/images/${imgSrc}.png' alt='image' style='border-radius: 50%;'/> " +
                "${/if} <span class='e-list-item-header'>${title} </span>" +
                "${if(message!=='')} <div class='chat_message' style='font-size: 12px;'>" +
                "${message} </div> ${/if} </div>";
}

@section ControlsSection{
    <div class="control-section chat-integration">
        <div class="integration-chatui">
            @Html.EJS().Splitter("splitter").Height("100%").Width("100%").PaneSettings(paneItem =>
            {
                paneItem.Size("auto").Resizable(false).ContentTemplate(
                    @<div class="chat-leftContent">
                        <div class="chat-options-container">
                            @Html.EJS().Button("activitybtn").CssClass("chat_options e-flat").IconCss("e-icons e-stamp").Content("<span>Activity</span>").IconPosition(IconPosition.Top).Render()
                            @Html.EJS().Button("chatbtn").CssClass("chat_options chat_interactable e-flat").IconCss("e-icons e-comment-show").Content("<span>Chat</span>").IconPosition(IconPosition.Top).Render()
                            @Html.EJS().Button("calendarbtn").CssClass("chat_options e-flat").IconCss("e-icons e-month").Content("<span>Calendar</span>").IconPosition(IconPosition.Top).Render()
                            @Html.EJS().Button("teamsbtn").CssClass("chat_options e-flat").IconCss("e-icons e-people").Content("<span>Teams</span>").IconPosition(IconPosition.Top).Render()
                        </div>
                        <div id="toggle-chat-list" class="toggle-chat-listview e-card">
                            @Html.EJS().ListView("listview_template").Template(template).HeaderTitle("Chats").CssClass("e-list-template").ShowHeader(true).ActionComplete("onActionComplete").Select("onSelect").DataSource(ViewData["IntegrationListTemplateData"]).Render()
                        </div>
                    </div>
                ).Add();
                paneItem.Size("80%").Resizable(false).ContentTemplate(
                    @<div class="chat-rightContent">
                        @Html.EJS().ChatUI("integration-chat").HeaderText("Albert").HeaderIconCss("chat_user1_avatar").MessageSend("onMessageSend").Created("onCreated").User(new ChatUIUser() { Id = "user1", User = "Albert", AvatarUrl = "./../Content/chatui/images/andrew.png" }).HeaderToolbar(new ChatUIToolbarSettings() { Items = ViewData["HeaderToolbar"] }).Render()
                    </div>
                ).Add();
            }).Render()
        </div>
    </div>
    @*custom code start*@
    <style>
        #chatbtn {
            border-left: 2px solid #0f6cbd;
            pointer-events: auto;
        }

        .chat-leftContent {
            display: flex;
        }

        .integration-chatui {
            width: 85%;
            height: 600px;
            margin: 0 auto;
        }

        .integration-chatui .toggle-chat-listview.e-card:hover {
            background: none;
        }

        .integration-chatui .toggle-chat-listview {
            border: none;
            justify-content: flex-start;
            border-radius: unset;
            line-height: 20px;
            box-shadow: none;
        }

        .integration-chatui .chat-options-container {
            display: flex;
            flex-direction: column;
            height: 100%;
            background: whitesmoke;
            overflow: hidden;
        }

        .integration-chatui .chat_options {
            display: flex;
            flex-direction: column;
            align-items: center;
            border: none;
            border-radius: 0;
            pointer-events: none;
        }

        #integration-chat {
            border: none;
        }

        .integration-chatui .chat_options .e-icon-top,
        .integration-chatui .e-headertext {
            font-size: 20px !important;
        }

        .integration-chatui .e-list-header {
            font-size: 25px;
            margin: 8px 0 8px 5px;
            border-bottom: 0;
            background: unset;
        }

        .integration-chatui .e-list-container li {
            border: none;
        }

        .integration-chatui .e-list-container {
            border-top: 1px solid #d0d0d0;
        }

        .integration-chatui .e-splitter .e-split-bar.e-split-bar-horizontal:not(.e-resizable-split-bar),
        .integration-chatui .e-splitter .e-split-bar-horizontal.e-last-bar,
        .integration-chatui .e-list-template li {
            margin: 0;
            border-radius: 0;
        }

        .integration-chatui .chat_message {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .integration-chatui .e-header-icon {
            background-color: unset;
        }

        .integration-chatui .chat_user1_avatar {
            background-image: url('./../Content/chatui/images/andrew.png');
        }

        .integration-chatui .chat_user2_avatar {
            background-image: url('./../Content/chatui/images/charlie.png');
        }

        .integration-chatui .chat_user3_avatar {
            background-image: url('./../Content/chatui/images/laura.png');
        }

        .integration-chatui .chat_user4_avatar {
            background-image: url('./../Content/chatui/images/reena.png');
        }

        .integration-chatui .chat_team_avatar {
            background-image: url('./../Content/chatui/images/calendar.png');
        }

        .integration-chatui .chat_bot_avatar {
            background-image: url('./../Content/chatui/images/bot.png');
        }

        .integration-chatui #listview_template {
            border-right: 0;
            border-bottom: 0;
            border-top: 0;
            border-radius: 0;
            height: 100%;
        }

        @@font-face {
            font-family: 'Chatdemo';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        [class^="sf-icon-"], [class*=" sf-icon-"] {
            font-family: 'Chatdemo' !important;
        }

        .integration-chatui .sf-icon-phone-call:before {
            content: "\e703";
        }

        body[class*="-dark"] .integration-chatui .chat-options-container,
        body[class*="high"] .integration-chatui .chat-options-container {
            background: #000;
        }

        @@media only screen and (max-width: 1200px) {
            .integration-chatui {
                height: 600px;
                width: 100%;
            }
            .integration-chatui .chat_options .e-btn-icon + span {
                display: none;
            }
            .chat-integration.control-section {
                height: 650px;
            }
            .integration-chatui .toggle-chat-listview {
                position: absolute;
                top: 0;
                width: 300px;
                left: 46px;
                height: 100%;
                z-index: 2000;
                border: none;
                border-radius: unset;
                display: none;
            }
            .integration-chatui .chat_options.chat_interactable {
                pointer-events: auto;
            }
            .integration-chatui .toggle-chat-listview.e-card:hover {
                background: #f6f6f6;
            }
        }
    </style>
    @*custom code end*@
}

@section PreScripts {
    <script>
        var chatUIObj;
        var templateObj;
        var chatMessages = {
            user1: @Html.Raw(JsonConvert.SerializeObject(ViewData["IntegrationMessagedata"])),
            admin: @Html.Raw(JsonConvert.SerializeObject(ViewData["BotMessagedata"])),
            user2: @Html.Raw(JsonConvert.SerializeObject(ViewData["WalterMessagedata"])),
            user3: @Html.Raw(JsonConvert.SerializeObject(ViewData["LauraMessagedata"])),
            team: @Html.Raw(JsonConvert.SerializeObject(ViewData["TeamsMessagedata"])),
            user4: @Html.Raw(JsonConvert.SerializeObject(ViewData["SuyamaMessagedata"]))
        };
        function onCreated() {
            chatUIObj = ej.base.getInstance(document.getElementById('integration-chat'), ejs.interactivechat.ChatUI);
            chatUIObj.messages = chatMessages.user1;
        }

        function onMessageSend(args) {
            chatUIObj.suggestions = [];
            setTimeout(() => {
                if (args.message.author.id === 'admin') {
                    var botData = @Html.Raw(JsonConvert.SerializeObject(ViewData["BotData"]));
                    var foundMessage = botData.find((message) => message.text === args.message.text);
                    var defaultResponse = "Use any real-time data streaming service to provide chat updates.";
                    var message = {
                        author: { id: 'bot', user: 'Bot', avatarUrl: './../Content/chatui/images/bot.png' },
                        text: foundMessage?.reply || defaultResponse
                    };
                    chatUIObj.addMessage(message);
                }
                chatUIObj.suggestions = foundMessage?.suggestions || [];
            }, 500);
        }

        function onActionComplete() {
            var templateEle = document.getElementById('listview_template');
            templateObj = ej.base.getInstance(templateEle, ejs.lists.ListView);
            var integrationListTemplateData = @Html.Raw(JsonConvert.SerializeObject(ViewData["IntegrationListTemplateData"]));
            templateObj.selectItem(integrationListTemplateData[0]);
        }

        function onSelect(args) {
            setTimeout(() => {
                chatMessages[chatUIObj.user.id] = chatUIObj.messages;
                chatUIObj.suggestions = [];
                setupChatUser(args.index);
                if (args.index >= 0) toggleListView();
            }, 500);
        }

        function toggleListView() {
            const listPopup = document.getElementById('toggle-chat-list');
            if (window.innerWidth < 1200) listPopup.style.display = listPopup.style.display === 'none' || listPopup.style.display === '' ? 'block' : 'none';
        }
        // Attach event listeners to buttons or other UI elements to trigger toggling
        document.getElementById('chatbtn').addEventListener('click', toggleListView);

        function setupChatUser(index) {
            const userSettings = [
                { headerText: 'Albert', headerIconCss: 'chat_user1_avatar', user: { id: 'user1', user: 'Albert', avatarUrl: './../Content/chatui/images/andrew.png' }, messages: chatMessages.user1 },
                { headerText: 'Decor bot', headerIconCss: 'chat_bot_avatar', user: { id: 'admin', user: 'Admin', avatarUrl: './../Content/chatui/images/bot.png' }, messages: chatMessages.admin, suggestions: @Html.Raw(JsonConvert.SerializeObject(ViewData["ChatIntegrationSuggestions"])) },
                { headerText: 'Charlie', headerIconCss: 'chat_user2_avatar', user: { id: 'user2', user: 'Charlie', avatarUrl: './../Content/chatui/images/charlie.png' }, messages: chatMessages.user2 },
                { headerText: 'Laura Callahan', headerIconCss: 'chat_user3_avatar', user: { id: 'user3', user: 'Laura', avatarUrl: './../Content/chatui/images/laura.png' }, messages: chatMessages.user3 },
                { headerText: 'New Dev Team', headerIconCss: 'chat_team_avatar', user: { id: 'team', user: 'Admin', avatarUrl: './../Content/chatui/images/calendar.png' }, messages: chatMessages.team },
                { headerText: 'Reena', headerIconCss: 'chat_user4_avatar', user: { id: 'user4', user: 'Albert' }, messages: chatMessages.user4 }
            ];
            Object.assign(chatUIObj, userSettings[index]);
            chatUIObj.dataBind();
        }
    </script>
    <script id="emptyChatTemplate" type="text/x-jsrender">
        <div class="emptychat-content">
            <h3><span class="e-icons e-comment-show"></span></h3>
            <div class="emptyChatText" style="font-size: 16px;">No conversations yet</div>
        </div>
    </script>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Use case in ASP.NET MVC Chat UI control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This example demonstrates how to design a chat application using the Chat UI control, with dynamic switching between users' messages. The Chat UI control is customized using various properties and includes a header toolbar for additional functionality.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This example demonstrates how to use the Chat UI control to display chat messages for multiple users. The chat interface allows switching between users' conversations, with bot responses triggered by user input. A header toolbar is included, and a splitter layout displays the chat alongside a list view for easy navigation.
        </p>
        <p>
            The chat UI dynamically updates to reflect the selected user's conversation, providing an interactive experience with seamless switching between different chats. The responsive design ensures that the interface adapts to various screen sizes, making it user-friendly across devices.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC Chat UI Use case Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Use case in ASP.NET MVC Chat UI Control</h1>
}