@using Syncfusion.EJ2
@using Syncfusion.EJ2.Inputs

@section ControlsSection{
    <div class="control-section">
        <div class="rating-control">
            <div class="rating-content">
                <label>Default(Right)</label><br />
                @Html.EJS().Rating("rating").Value(3).ShowLabel(true).Render()
            </div>
            <div class="rating-content">
                <label>Left</label><br />
                @Html.EJS().Rating("rating1").Value(3).ShowLabel(true).LabelPosition(LabelPosition.Left).Render()
            </div>
            <div class="rating-content">
                <label>Label Template</label><br />
                @Html.EJS().Rating("rating2").Value(3).ShowLabel(true).LabelTemplate("<span>${value} Out Of 5</span>").Render()
            </div>
            <div class="rating-content">
                <label>Top</label><br />
                @Html.EJS().Rating("rating3").Value(3).ShowLabel(true).LabelPosition(LabelPosition.Top).Render()
            </div>
            <div class="rating-content">
                <label>Bottom</label><br />
                @Html.EJS().Rating("rating4").Value(3).ShowLabel(true).LabelPosition(LabelPosition.Bottom).Render()
            </div>         
        </div>
    </div>
}

<style>
    .rating-control .rating-content {
        width: 240px;
        margin: 15px 0;
        min-height: 75px;
        padding: 0;
        text-align: center;
    }

    .e-bigger .rating-control .rating-content {
        width: 290px;
        margin: 15px 0;
        min-height: 75px;
        padding: 0;
        text-align: center;
    }

    .rating-control {
        margin: 6% auto;
        max-width: 800px;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (document.getElementById('right-pane')) {
            document.getElementById('right-pane').addEventListener('scroll', hideTooltipOnScroll);
        }

        function hideTooltipOnScroll() {
            var tooltipElement = document.querySelector('.e-rating-tooltip');
            if (tooltipElement && ej.base.Browser.isDevice) {
                tooltipElement.style.display = 'none';
            }
        }
    });
</script>

@section Meta{
    <meta name="description" content="This example demonstrates the Label in ASP.NET MVC Rating Control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates label support, including label positioning and templates, in the ASP.NET MVC Rating control.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            You can show or hide labels by setting the <code>ShowLabel</code> property. The <code>LabelPosition</code> property provides several built-in positions and the appearance of labels can be customized using the <code>LabelTemplate</code> property.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC Rating Label Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Label in ASP.NET MVC Rating Control</h1>
}
