@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div class="row linear-parent">
            <div id="percentage" class="linear-progress">
                @(Html.EJS()
                .ProgressBar("percentage")
                .Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear)
                .Value(40)
                .Minimum(0)
                .Maximum(100)
                .ShowProgressValue(true)
                .Width("100%")
                .Height("30")
                .TrackThickness(24)
                .ProgressThickness(24)
                .LabelStyle(ls => ls.TextAlignment( Syncfusion.EJ2.ProgressBar.TextAlignmentType.Center).Text("40% Complete (Success)").Color("#ffffff"))
                .Role(Syncfusion.EJ2.ProgressBar.ModeType.Success)
                .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                .Load("progressLoad")
                .Render()
                )
            </div>
            <div id="ratio" class="linear-progress">
                @(Html.EJS()
                  .ProgressBar("ratio")
                  .Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear)
                  .Height("30")
                  .Minimum(0)
                  .Maximum(100)
                  .Width("100%")
                  .TrackThickness(24)
                  .ProgressThickness(24)
                  .ShowProgressValue(true)
                  .Value(50)
                  .LabelStyle(ls => ls.TextAlignment(Syncfusion.EJ2.ProgressBar.TextAlignmentType.Center).Text("50% Complete (Info)").Color("#ffffff"))
                  .Role(Syncfusion.EJ2.ProgressBar.ModeType.Info)
                  .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                  .Load("progressLoad")
                  .Render()
                 )

            </div>
            <div id="acutal" class="linear-progress">
                @(Html.EJS()
                  .ProgressBar("acutal")
                  .Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear)
                  .Height("30")
                  .Width("100%")
                  .TrackThickness(24)
                  .ProgressThickness(24)
                  .ShowProgressValue(true)
                  .Value(60)
                  .Minimum(0)
                  .Maximum(100)
                  .LabelStyle(ls => ls.TextAlignment(Syncfusion.EJ2.ProgressBar.TextAlignmentType.Center).Text("60% Complete (Warning)").Color("#ffffff"))
                  .Role(Syncfusion.EJ2.ProgressBar.ModeType.Warning)
                  .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                  .Load("progressLoad")
                  .Render()
                 )
            </div>
            <div id="custom" class="linear-progress">
                @(Html.EJS()
                  .ProgressBar("custom")
                  .Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear)
                  .Height("30")
                  .Width("100%")
                  .TrackThickness(24)
                  .ProgressThickness(24)
                  .ShowProgressValue(true)
                  .Value(70)
                  .Minimum(0)
                  .Maximum(100)
                  .LabelStyle(ls => ls.TextAlignment(Syncfusion.EJ2.ProgressBar.TextAlignmentType.Center).Text("70% Complete (Danger)").Color("#ffffff"))
                  .Role(Syncfusion.EJ2.ProgressBar.ModeType.Danger)
                  .Animation(an => an.Enable(true).Delay(0).Duration(2000))
                  .Load("progressLoad")
                  .Render()
                 )
            </div>
        </div>
        <div class="row linear-button">
            <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary">Reload</button>
        </div>
    </div>

    @*custom code start*@
    <style scoped>
        #control-container {
            padding: 0px !important;
        }

        .linear-parent {
            text-align: center;
            margin-top: 2%;
        }

        .linear-button {
            text-align: center;
        }

        .linear-progress {
            width: 80%;
            margin: auto;
            margin-bottom: 3%;
        }

        #reLoad {
            border-radius: 4px;
            text-transform: capitalize;
        }

        #percentage_Lineartrack {
            opacity: 1 !important;
        }

        #ratio_Lineartrack {
            opacity: 1 !important;
        }

        #acutal_Lineartrack {
            opacity: 1 !important;
        }

        #custom_Lineartrack {
            opacity: 1 !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/Progressbar/theme-color.js"></script>
    <script>
        var progressLoad = function (args) {
            loadProgressBarTheme(args);
            if (args.progressBar.theme === 'Material') {
                args.progressBar.trackColor = '#eee';
            }
            if (args.progressBar.theme === 'HighContrast') {
                args.progressBar.labelStyle.color = '#000000';
                args.progressBar.trackColor = '#969696';
            }
        };

        var replayBtn = document.getElementById('reLoad');
        replayBtn.onclick = function () {
            var PercentProgress = document.getElementById('percentage').ej2_instances[0];
            var RatioProgress = document.getElementById('ratio').ej2_instances[0];
            var ActualProgress = document.getElementById('acutal').ej2_instances[0];
            var customProgress = document.getElementById('custom').ej2_instances[0];
            PercentProgress.refresh();
            ActualProgress.refresh();
            RatioProgress.refresh();
            customProgress.refresh();
        };
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Labels in ASP.NET MVC Progress Bar control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a linear progress bar to demonstrate different types of labels rendering.
    </p>
}
@section Description{
    <p>
        This demo for Essential JS2 Progress Bar control shows the linear progress bar with different labels format with help of <code>LabelStyle</code> and provide different modes using <code>Role</code> property.
    </p>
}
@section Title{
    <title>ASP.NET MVC Progress Bar Labels Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Labels in ASP.NET MVC Progress Bar Control</h1>
}