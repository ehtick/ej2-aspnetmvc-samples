@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section" style="text-align:center">
    <div class="row linear-segment">
        <div class="col-lg-12 col-md-12 col-12 linear-progress">
            <div>
                @(Html.EJS().ProgressBar("sl-container").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear).Value(100)
                                 .Width("500").Height("30px").SegmentCount(4).GapWidth(0.1)
                                 .ProgressColor("#ff8c45").TrackThickness(10).ProgressThickness(10).Minimum(0).Maximum(100)
                                 .Animation(an => an.Enable(true).Delay(0).Duration(2000)).SegmentColor((string[])ViewData["color"])
                                 .Render())
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-12 linear-progress">
            @(Html.EJS().ProgressBar("mcls-container").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Linear).Value(100)
                                  .Width("500").Height("30px").CornerRadius(Syncfusion.EJ2.ProgressBar.CornerType.Round).SegmentCount(5)
                                  .ProgressColor("#4940fa").TrackThickness(10).ProgressThickness(10).Minimum(0).Maximum(100)
                                  .Animation(an => an.Enable(true).Delay(0).Duration(2000)).SegmentColor((string[])ViewData["color1"])
                                  .Render())
        </div>
    </div>
    <div class="row linear-segment">
        <div class="col-lg-6 col-md-6 circular-progress">
            @(Html.EJS().ProgressBar("sc-container").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Circular).Value(100)
                                      .Width("90%").Height("200px").EnableRtl(true).SegmentCount(4).GapWidth(0.1).Minimum(0).Maximum(100)
                                      .ProgressColor("#f429ff").TrackThickness(10).ProgressThickness(10)
                                      .Animation(an => an.Enable(true).Delay(0).Duration(2000)).SegmentColor((string[])ViewData["color"])
                                      .Render())
        </div>
        <div class="col-lg-6 col-md-6 circular-progress">
            @(Html.EJS().ProgressBar("mccs-container").Type(Syncfusion.EJ2.ProgressBar.ProgressType.Circular).Value(100)
                                  .Width("90%").Height("200px").SegmentCount(5).GapWidth(0.1).Minimum(0).Maximum(100)
                                  .ProgressColor("#b52123").TrackThickness(10).ProgressThickness(10).CornerRadius(Syncfusion.EJ2.ProgressBar.CornerType.Round)
                                  .Animation(an => an.Enable(true).Delay(0).Duration(2000)).SegmentColor((string[])ViewData["color1"])
                                  .Render())
        </div>
    </div>
</div>
    @*custom code start*@
    <style>
        .centerAlign {
            text-align: center;
        }

        .circular-progress {
            text-align: center;
            margin: auto;
        }

        .linear-segment {
            width: 100%;
        }

        .linear-progress {
            padding: 2%;
            text-align: center;
        }

    </style>
    @*custom code end*@    
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Segment Settings in ASP.NET MVC Progress Bar control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a circular and linear progress bar to demonstrate rendering with multiple segments.
    </p>
}
@section Description{
    <p>
        This demo for Essential JS2 Progress Bar control shows the progress bar rendering with segments
    </p>
}
@section Title{
    <title>ASP.NET MVC Progress Bar Segment Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example for Segment sample in ASP.NET MVC Progress Bar Control</h1>
}