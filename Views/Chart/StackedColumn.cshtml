@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
      @Html.EJS().Chart("container-vertical").Series(series =>
 {
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn).XName("X").YName("Y").DataSource(ViewData["ChartPoints"]).Border(br => br.Width(1).Color("#ffffff")).Name("India").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).ColumnWidth(0.4).Marker(marker => marker.Visible(false).DataLabel(dl => dl.Visible(true).Font(ft => ft.Size("13px")))).Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn).XName("X").YName("Y").DataSource(ViewData["ChartPoints1"]).Border(br => br.Width(1).Color("#ffffff")).Name("China").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).ColumnWidth(0.4).Marker(marker => marker.Visible(false).DataLabel(dl => dl.Visible(true).Font(ft => ft.Size("13px")))).Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn).XName("X").YName("Y").DataSource(ViewData["ChartPoints2"]).Border(br => br.Width(1).Color("#ffffff")).Name("United States").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).ColumnWidth(0.4).Marker(marker => marker.Visible(false).DataLabel(dl => dl.Visible(true).Font(ft => ft.Size("13px")))).CornerRadius(cr => cr.TopLeft(4).TopRight(4)).Add();
 }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
 .MajorGridLines(mg=>mg.Width(0)).MinorGridLines(mg => mg.Width(0))
 .MajorTickLines(mt => mt.Width(0)).
 MinorTickLines(mt => mt.Width(0)).LineStyle(ls => ls.Width(0)).Interval(1)
 .LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate45)
       ).PrimaryYAxis(py => py.MajorTickLines(mt => mt.Width(0)).
       MinorTickLines(mt => mt.Width(0)).MinorGridLines(mg => mg.Width(1)).LineStyle(ls => ls.Width(0)).Title("Production (60KG Bags)").LabelFormat("{value}M").Interval(20)
       ).Title("Global Cotton Production by Country (2019-2024)").SubTitle("Source: fas.usda.gov").ChartArea(area => area.Border(br => br.Width(0)).Margin(mr => mr.Bottom(12))).Tooltip(tt => tt.Enable(true).EnableHighlight(true).Header("<b>${point.x}</b>").Format("${series.name} : <b>${point.y}</b>")).Load("load").LegendClick("onLegendClick").AxisLabelRender("axisLabelRender").StackLabels(stackLabels => stackLabels.Visible(true).Format("{value}M")).LegendSettings(leg => leg.Visible(true).EnableHighlight(true).ShapeHeight(8).ShapeWidth(8)).Render()
        </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
        var onLegendClick = function (args) {
            if (args.series.index === 0) {
                if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                }
            }
            if (args.series.index === 1) {
                if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                }
            }

            if (args.series.index === 2) {
                if (!args.series.visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                }
            }
        }
        var axisLabelRender = function (args) {
            {
                args.text = args.text.replace("0000000", "0M").replace("000000", "M");
            }
        }
    </script>
}
   @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
    <p>
        This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/charts/chart-types/stacked-column-chart" aria-label="ASP.NET MVC Stacked ColumnChart">ASP.NET MVC Stacked ColumnChart <span class="sr-only">opens in a new tab</span></a> example visualizes global cotton production trends over the years, with data points enhanced by data labels.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the stacked column chart. The stacked column chart stacks points in the series vertically. You can also use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartSeries.html#Syncfusion_EJ2_Charts_ChartSeries_StackingGroup" aria-label="StackingGroup">StackingGroup<span class="sr-only">opens in a new tab</span></a> property to group stacked collections based on category.
        This chart displays data labels for individual points and the total value on top of each stack.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the stacked column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/stacked-column" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Stacked Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }