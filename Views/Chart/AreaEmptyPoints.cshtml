@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
       
@(Html.EJS().Chart("container")
            .Series(sr =>
            {
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("Andrew")
                   .XName("Period")
                   .YName("US_InflationRate")
                   .Width(2)
                   .Border(br => br.Width(2))
                    .Marker(mr=>mr.Visible(true).Width(7).Height(7).IsFilled(true))
                   .DataSource(ViewData["ChartPoints"])
                    .Opacity(0.5).Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("Thomas")
                   .XName("Period")
                   .YName("IN_InflationRate")
                   .Width(2)
                   .Border(br => br.Width(2))
                    .Marker(mr=>mr.Visible(true).Width(7).Height(7).Shape(Syncfusion.EJ2.Charts.ChartShape.Diamond).IsFilled(true))
                   .DataSource(ViewData["ChartPoints"])
                    .Opacity(0.5).Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.MajorGridLines(mg=>mg.Width(0))
                       .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
                       .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
                       .Minimum(new DateTime(2021, 11, 15))
                       .Maximum(new DateTime(2021, 11, 24))
                       .LabelFormat("dd MMM")
                       .LabelStyle(ls=>ls.FontStyle("bold"))
              )
              .PrimaryYAxis(yaxis =>
                  yaxis.LabelFormat("{value}MB")
                        .MajorTickLines(mt=>mt.Width(0))
                        .LineStyle(ls=>ls.Width(0))
                        .Minimum(0)
                        .Maximum(5)
                        .Interval(1)
              )
          .Title("Data Consumption").Tooltip(tt => tt.Enable(true).ShowNearestTooltip(true).EnableHighlight(true).Format("${point.x} : <b>${point.y}</b>"))
          .ChartArea(area => area.Border(br => br.Width(0))).LegendSettings(leg => leg.EnableHighlight(true)).Load("load").Render()
)        
        </div>
    
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Area EmptyPoints in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates an area series with empty points. Data points with null points are shown here.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render an area series with empty points. Also, a legend is enabled in the shape of the series.
    </p>
    <p>
        More information on the area series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/working-with-data#empty-points" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Area EmptyPoints Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }