@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
    <div class="col-lg-7 control-section">
        <div class="content-wrapper">
            <div>
         @Html.EJS().Chart("container").Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Country").YName("User").Opacity(1).Width(2)
               .Marker(mr=>mr.DataLabel(dl=>dl.Name("DataLabelMappingName").Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
               .DataSource(ViewData["ChartPoints"]).Name("Users").Add();
           }).PrimaryXAxis(px => px.LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Hide).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside)
                   .Interval(1).ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).MaximumLabelWidth(34).EnableTrim(false).MajorTickLines(mt=>mt.Width(0))
        ).PrimaryYAxis(py => py.MajorGridLines(mg=>mg.Width(0)).MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).LabelStyle(ls=>ls.Size("0px"))
        ).Title("Internet Users in Millions").ChartArea(area => area.Border(br => br.Width(0))).Tooltip(tt => tt.Enable(true).Header("").Format("<b>${point.x}</b> <br> Internet Users : <b>${point.y}M</b>")).LegendSettings(lg => lg.Visible(false)).Load("load").PointRender("labelRender").Render()

        </div>
    </div>
        </div>
    <div class="col-lg-5 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>Intersect Action:</div>
                    </td>
                    <td style="width: 60%;">
                        <div>
                            @Html.EJS().DropDownList("selmode").Index(0).DataSource(ViewData["data"]).Value("Hide").Change("valueChange").Width("200").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Edge Label Placement:</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            @Html.EJS().DropDownList("edgemode").Index(0).DataSource(ViewData["data1"]).Value("None").Change("edgeModeChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Label Position:</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            @Html.EJS().DropDownList("position").Index(0).DataSource(ViewData["data2"]).Value("Outside").Change("positionChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Enable Trim:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            <input type="checkbox" id="Trim" unchecked="">
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 60%">
                        <div>Maximum Label Width:</div>
                    </td>
                    <td style="width: 40%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("labelWidth").Change("widthChange").Value(34).Min(1).Max(120).Width("200").Step(1).Render()

                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
         @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
    #Trim:hover {
        cursor: pointer !important;
    }
</style>
         @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var labelRender = function (args) {
            pointRender(args);
        };
                
        var load = function (args) {
            loadChartTheme(args);
            args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice?'true':'false';
            args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice?'-90':'0';
        };
                 
        var valueChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var selmode = document.getElementById('selmode').ej2_instances[0];
            chart.primaryXAxis.labelIntersectAction = selmode.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
        var edgeModeChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var edgemode = document.getElementById('edgemode').ej2_instances[0];
            chart.primaryXAxis.edgeLabelPlacement = edgemode.value;
			chart.series[0].animation.enable = false;
            chart.dataBind();
        }
        var positionChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var position = document.getElementById('position').ej2_instances[0];
            chart.primaryXAxis.labelPosition = position.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
        document.getElementById('Trim').onchange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('Trim'));
            chart.primaryXAxis.enableTrim = element.checked;
            chart.refresh();
        };
        var widthChange= function () {
            var chart = document.getElementById("container").ej2_instances[0];
            var width = document.getElementById("labelWidth").ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.primaryXAxis.maximumLabelWidth = width.value;
			chart.series[0].animation.enable = false;
            chart.refresh();
        }
    </script>
}
         @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Smart Axis Labels in ASP.NET MVC Chart control. Explore here for more details."/>
                }
         @*custom code end*@
@section ActionDescription{
    <p>
        This example shows the smart label placement for the chart axis labels.
    </p>
}
@section Description{
    <p>
        In this example, you can see how the axis labels are smartly arranged when they overlap with each other using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_LabelIntersectAction" aria-label="LabelIntersectAction">LabelIntersectAction<span class="sr-only">opens in a new tab</span></a> property in the axis.
    </p>
    <p>
        The following are the <code>LabelIntersectAction</code> property values and their behaviors:
    </p>
    <ul>
        <li><b>Hide</b> - Hide the label when it intersects.</li>
        <li><b>Trim</b> - Trim the label when it intersects.</li>
        <li><b>Wrap</b> - Wrap the label when it intersects.</li>
        <li><b>MultipleRows</b> - Arrange the label in multiple row when it intersect.</li>
        <li><b>Rotate45</b> - Rotate the label to 45 degree when it intersects.</li>
        <li><b>Rotate90</b> - Rotate the label to 90 degree when it intersects.</li>
        <li><b>None</b> - Shows all the labels.</li>
    </ul>
    <p>
        Chart handles edge labels placement using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_EdgeLabelPlacement" aria-label="EdgeLabelPlacement">EdgeLabelPlacement<span class="sr-only">opens in a new tab</span></a> property. Its values and their behaviors are:
    </p>
    <ul>
        <li><code>None</code> - No action is performed.</li>
        <li><code>Hide</code> - Edge label is hidden.</li>
        <li><code>Shift</code> - Shifts the edge labels.</li>
    </ul>
    <p>
        More information on the smart axis labels can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/axis-labels#smart-axis-labels" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Smart Axis Labels Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Smart Axis Labels in ASP.NET MVC Chart Control</h1>
                }