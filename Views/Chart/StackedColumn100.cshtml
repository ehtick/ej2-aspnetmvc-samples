@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
            @Html.EJS().Chart("container-vertical").Series(series =>
            {
                series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn100).XName("X").YName("Y1").Border(br => br.Width(1).Color("#ffffff")).Name("India").ColumnWidth(0.4).LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).DataSource(ViewData["ChartPoints"]).Add();
                series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn100).XName("X").YName("Y2").Border(br => br.Width(1).Color("#ffffff")).Name("China").ColumnWidth(0.4).LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).DataSource(ViewData["ChartPoints"]).Add();
                series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn100).XName("X").YName("Y3").Border(br => br.Width(1).Color("#ffffff")).Name("United States").ColumnWidth(0.4).LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).DataSource(ViewData["ChartPoints"]).Add();
                series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingColumn100).XName("X").YName("Y4").Border(br => br.Width(1).Color("#ffffff")).Name("Brazil").ColumnWidth(0.4).LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle).CornerRadius(cr => cr.TopLeft(4).TopRight(4)).DataSource(ViewData["ChartPoints"]).Add();
            }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).MinorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0)).Interval(1).
                MinorTickLines(mt => mt.Width(0)).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate45)
                ).PrimaryYAxis(py => py.Interval(20).MajorGridLines(mg=>mg.Width(1)).MajorTickLines(mt => mt.Width(0)).MinorGridLines(mg => mg.Width(0)).
                    MinorTickLines(mt => mt.Width(0)).LineStyle(ls => ls.Width(0))
                ).SubTitle("Source: fas.usda.gov").ChartArea(area => area.Border(br => br.Width(0)).Margin(margin => margin.Bottom(12))).Tooltip(tt => tt.Enable(true).EnableHighlight(true).Header("<b>${point.x}</b>")).LegendSettings(leg => leg.Visible(true).EnableHighlight(true).ShapeHeight(9).ShapeWidth(9)).LegendClick("legendClick").TooltipRender("tooltipRender").Load("load").Render()
 
        </div>

    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.title = ej.base.Browser.isDevice ? "Global Cotton Production by Country (2021-2024)" : "Global Cotton Production by Country (2019-2024)" ;
        }

        var legendClick = function (args) {
            if (args.series.index === 0) {
                if (args.chart.series[3].visible) {
                    args.chart.series[3].cornerRadius.topLeft = 4;
                    args.chart.series[3].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                }
            }

            if (args.series.index === 1) {
                if (args.chart.series[3].visible) {
                    args.chart.series[3].cornerRadius.topLeft = 4;
                    args.chart.series[3].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                }
            }

            if (args.series.index === 2) {
                if (args.chart.series[3].visible) {
                    args.chart.series[3].cornerRadius.topLeft = 4;
                    args.chart.series[3].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                } else if (!args.series.visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                }
            }

            if (args.series.index === 3) {
                if (!args.series.visible) {
                    args.chart.series[3].cornerRadius.topLeft = 4;
                    args.chart.series[3].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.topLeft = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                    args.chart.series[1].cornerRadius.topLeft = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                    args.chart.series[0].cornerRadius.topLeft = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.topLeft = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[3].cornerRadius.topLeft = 0;
                    args.chart.series[3].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.topLeft = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[3].cornerRadius.topLeft = 0;
                    args.chart.series[3].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.topLeft = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[3].cornerRadius.topLeft = 0;
                    args.chart.series[3].cornerRadius.topRight = 0;
                }
            }
        }

        var tooltipRender = function (args) {
            if (args.text) {
                var value = args.point.y.toLocaleString('en-US');
                args.text = args.series.name + ': <b>' + value + 'M (' + args.point.percentage + '%)</b>';
            }
        }
    </script>
}
   @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the 100% Stacked Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
    <p>
        This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/charts/chart-types/100-stacked-column-chart" aria-label="ASP.NET MVC 100% Stacked Column Chart">ASP.NET MVC 100% Stacked Column Chart<span class="sr-only">opens in a new tab</span></a> example visualizes motor vehicle production by manufacturer with a default stacked column series. The legend in the sample shows the information about those series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the 100% stacked column chart. The 100% stacked column chart displays multiple series of data as stacked columns, ensuring that the cumulative proportion of each stacked element always totals 100%.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the 100% stacked column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/stack-column100" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart 100% Stacked Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }