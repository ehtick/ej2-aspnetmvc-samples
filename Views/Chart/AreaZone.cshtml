@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">

        @Html.EJS().Chart("container").Series(series =>
       {

           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.MultiColoredArea).SegmentAxis(Syncfusion.EJ2.Charts.Segment.X)
               .Segments(segment=>
               {
                   segment.Value(new DateTime(2016, 4, 1)).Color("url(#winter)").Add();
                   segment.Value(new DateTime(2016, 8, 1)).Color("url(#summer)").Add();
                   segment.Color("url(#spring)").Add();

               }).XName("Month").YName("US_OrganicRevenue").DataSource("dataValues").Add();
       }).PrimaryXAxis(px => px.LabelFormat("MMM").IntervalType(Syncfusion.EJ2.Charts.IntervalType.Months).Interval(1)
       .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).MajorGridLines(mg=>mg.Width(0)).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorTickLines(mg => mg.Width(0))
       ).PrimaryYAxis(px => px.Minimum(0).Maximum(200).Interval(50).LabelFormat("${value}K")
       .MajorTickLines(mg => mg.Width(0)).LineStyle(ls=>ls.Width(0)).RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
       ).Title("US Season Retail Sales Growth").ChartArea(area => area.Border(br => br.Width(0))
       ).Load("load").LegendSettings(ls => ls.Visible(false)).Tooltip(tt => tt.Enable(true).Header("<b>Revenue</b>").ShowNearestTooltip(true).Format("${point.x} : <b>${point.y}</b>").EnableMarker(false)
                ).Annotations(an => { an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("18%").Y("43%")
                    .Content("<div style='color:#4ca1af; font-size: 14px; font-weight:bold'>Winter</div>").Add();
                                        an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("46%").Y("43%")
                                            .Content("<div style='color:#ffa751; font-size: 14px; font-weight:bold'>Summer</div>").Add();
                                        an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("90%").Y("18%")
                                            .Content("<div style='color:#93f9b9; font-size: 14px; font-weight:bold'>Spring</div>").Add();}).Render()

        </div>
    
@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }

    #control-container {
        padding: 0px !important;
    }

    #winter stop {
        stop-color: #4ca1af;
    }

    #winter stop[offset="0"] {
        stop-color: #c4e0e5;
    }

    #winter stop[offset="1"] {
        stop-color: #4ca1af;
    }

    #summer stop {
        stop-color: #ffa751;
    }

    #summer stop[offset="0"] {
        stop-color: #ffe259;
    }

    #summer stop[offset="1"] {
        stop-color: #ffa751;
    }

    #spring stop {
        stop-color: #1d976c;
    }

    #spring stop[offset="0"] {
        stop-color: #93f9b9;
    }

    #spring stop[offset="1"] {
        stop-color: #1d976c;
    }   
</style>
@*custom code end*@
<svg style="height: 0">
    <defs>
        <linearGradient id="winter" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="summer" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="spring" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var dataValues = [];
        [150, 71.5, 106.4, 100.25, 70.0, 106.0, 85.6, 78.5, 76.4, 86.1, 155.6, 160.4].map(function (value, index) {
            dataValues.push({ Month: new Date(2016, index, 1), US_OrganicRevenue: value });
        });
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Area Zone in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the data on US season retail sales growth using a multi-colored area series in the chart. Data points are enhanced with segments and tooltips.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure points in a particular range by using <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/area#multicolored-area" aria-label="MultiColoredArea">MultiColoredArea<span class="sr-only">opens in a new tab</span></a> series. Points within the range can be configured with the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartSegment.html#Syncfusion_EJ2_Charts_ChartSegment_Color" aria-label="Color">Color<span class="sr-only">opens in a new tab</span></a> property in <code>ChartSegment</code>.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over or tap on the chart.
    </p>
    <p>
        More information on the multi-colored area series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/area#multicolored-area" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Area Zone Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }