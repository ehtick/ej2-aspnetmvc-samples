@using Syncfusion.EJ2;
@section ControlsSection{
    <div>
        <div class="col-lg-9 control-section">
@(Html.EJS().Chart("print-container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .XName("Manager")
            .YName("SalesInfo")
            .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Name("DataLabelMappingName").Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
            .DataSource(ViewData["ChartPoints"]).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
              .Interval(1)
              .MajorGridLines(mg=>mg.Width(0))
              .MajorTickLines(mt => mt.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.LabelFormat("${value}k")
                .Minimum(0)
                .Maximum(20)
                .Interval(4)
                .MajorGridLines(mg=>mg.Width(2))
                .MajorTickLines(mt => mt.Width(0))
                .LineStyle(ls => ls.Width(0))
      ).LegendSettings(legend => legend.Visible(false))
      .Title("Sales Comparision").ChartArea(area => area.Border(br => br.Width(0))).Load("load").ChartMouseClick("chartMouseClick").PointRender("labelRender").Render()
)
               </div>
        <div class="col-lg-3 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <tr id="button-control" style="height: 50px">
                    <td align='center'>
                        <div>
                            <p><b>Print the chart</b></p><br>
                           @Html.EJS().Button("togglebtn").IsPrimary(true).Content("Print").CssClass("e-flat").IconCss("e-icons e-print-icon").Render()
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        </div>

        <style>
         @*custom code start*@
            #control-container {
                padding: 0px !important;
            }
         @*custom code end*@
            #button-control {
                width: 100%;
                text-align: center;
            }
            .e-print-icon::before {
                content: '\e34b';
            }

            .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {
                content: '\e7df';
            }

            .e-view.bootstrap .e-print-icon::before {
                content: '\ebd2';
            }

            .e-view.bootstrap4 .e-print-icon::before {
                content: '\e743';
            }

            .e-view.tailwind .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {
                content: '\e76c';
            }

            .e-view.highcontrast .e-print-icon::before {
                content: '\ebf9';
            }

            .e-view.bootstrap5\.3 .e-print-icon::before, .e-view.bootstrap5\.3-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {
                content: '\e75d';
            }

            .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {
                content: '\e75d';
            }
        </style>
        <script src="~/Scripts/chart/theme-color.js"></script>
        <script>
            var load = function (args) {
                loadChartTheme(args);
            };
            var chartMouseClick = function (args) {
                var chart = document.getElementById('print-container').ej2_instances[0];
                if (args.target.indexOf('print') > -1) {
                    chart.print();
                }
            };
            var labelRender = function (args) {
                pointRender(args);
            };
            document.getElementById('togglebtn').onclick = function () {
                var chart = document.getElementById('print-container').ej2_instances[0];
                chart.print();
            };
        </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Print in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates the print option in the charts.
    </p>
}
@section Description{
    <p>
        By clicking the <b>Print</b> button, you can print a chart directly from the browser using the print method.
    </p>
    <p>
        More information about the print can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-print?cs-save-lang=1&cs-lang=razor#print" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Print Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Print in ASP.NET MVC Chart Control</h1>
                }