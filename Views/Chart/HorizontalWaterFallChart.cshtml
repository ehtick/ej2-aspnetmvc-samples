@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container").Series(series =>
            {
                series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Waterfall).Width(2).XName("X").YName("Y").Name("Increases").ColumnWidth(0.5).Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Middle))).Border(br => br.Width(0.2).Color("black")
                ).CornerRadius(cr => cr.TopLeft(3).BottomLeft(3).BottomRight(3).TopRight(3)).SumIndexes((int[])ViewData["sumIndexes"]).Connector(ViewData["connector"]).NegativeFillColor("#e56590")
                .DataSource(ViewData["ChartPoints"]).Add();
            }
            ).PrimaryXAxis(py => py.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(1)).MajorTickLines(mt => mt.Width(0)).IsInversed(true).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
            ).PrimaryYAxis(py => py.Minimum(0).Maximum(150).Interval(25).MajorGridLines(mg => mg.Width(1)).LabelFormat("{value}K").EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
            ).IsTransposed(true).Title("Revenue Variation").LegendSettings(lg => lg.Mode(Syncfusion.EJ2.Charts.LegendMode.Point).ToggleVisibility(false)
            ).Tooltip(tl => tl.Enable(true).Header("").Format("<b>${point.x}</b> <br> Product Revenue : <b>${point.y}</b>")
            ).Load("load").LegendRender("legendRender").Render()
        </div>
    </div>

    <style>
 @*custom code start*@
    #control-container {
        padding: 0px !important;
    }
 @*custom code end*@
    </style>
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "70%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice ? 'None' : 'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice ? -45 : 0;
        };

        function legendRender (args) {
            if (args.text === 'JAN') {
                args.text = 'Increase';
            }
            else if (args.text === 'OCT') {
                args.text = 'Decrease';
                args.fill = '#e56590';
            }
            else if (args.text === '2023') {
                args.text = 'Total';
                args.fill = '#4E81BC';
            }
            else {
                args.cancel = true;
            }
        };
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Horizontal Waterfall in ASP.NET MVC Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes a company's revenue and profits using the waterfall series chart.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a horizontal waterfall chart. The waterfall chart illustrates the gradual change in an entity's quantitative value due to increments or decrements.
    </p>
    <p>
        <code>Tooltips</code> are enabled in this example, to see them in action, hover over a point or tap on a point on touch-enabled devices.
    </p>
    <p>
        More information on the waterfall series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/waterfall" aria-label="Navigate to the documentation for Horizontal Waterfall Chart in ASP.NET MVC Chart control">documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
    <title>ASP.NET MVC Chart Horizontal Waterfall Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Horizontal Waterfall in ASP.NET MVC Chart Control</h1>
}