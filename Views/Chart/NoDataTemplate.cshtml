@using Syncfusion.EJ2;
@section ControlsSection {
    <div class="control-section" style="text-align:center">

        @Html.EJS().Chart("container").Series(series =>
        {
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Width(2).Marker(mk => mk.Visible(true).Width(7).Height(7)).Animation(an => an.Enable(true)).Add();
        }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0))
        ).PrimaryYAxis(py => py.Title("Production (in million pounds)").TitleStyle(ts => ts.FontWeight("600")).LineStyle(ls => ls.Width(0)).MajorTickLines(mt => mt.Width(0))
        ).ChartArea(ca => ca.Border(br => br.Width(0))).Title("Milk Production in US - 2025").SubTitle("Source: nass.usda.gov").Tooltip(tl =>
        tl.Enable(true).Header("Milk Production").Format("${point.x} : <b>${point.y}M</b>")
        ).NoDataTemplate("#No-Data-Template").LegendSettings(lg =>
        lg.Visible(false)).Load("load").Width("100%").Loaded("loaded").Render()
</div>

    @*custom code start*@
    <style>
        #noDataTemplateContainer {
            height: inherit;
            width: inherit;
        }

        .load-data-btn {
            border-radius: 4px;
            margin-top: 75px;
            display: inline-flex;
            align-items: center;
        }

        .dark-bg {
            background-color: #000000;
            color: #ffffff;
        }

        .material-dark .dark-bg { 
            background-color: #262626; 
        }

        .material3-dark .dark-bg, .fluent2-dark .dark-bg, .fluent2-highcontrast .dark-bg { 
            background-color: #1C1B1F; 
        }

        .fabric-dark .dark-bg { 
            background-color: #201F1F; 
        }

        .fluent-dark .dark-bg { 
            background-color: #1B1A19; 
        }

        .bootstrap-dark .dark-bg { 
            background-color: #1A1A1A; 
        }

        .bootstrap5-dark .dark-bg, .bootstrap5\.3-dark .dark-bg { 
            background-color: #212529; 
        }

        .tailwind-dark .dark-bg { 
            background-color: #1E242F; 
        }

        .tailwind3-dark .dark-bg { 
            background-color: #111827; 
        }

        .light-bg {
            background-color: #fafafa;
            color: #000000;
        }

        .template-align img {
            max-width: 150px;
            /* Adjust size as needed */
            max-height: 150px;
            margin-top: 55px;
        }

        .template-align {
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        #control-container {
            padding: 0px !important;
        }

        #noDataButtonOverlay {
            position: absolute;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000;
        }

        .control-section {
            position: relative;
        }
    </style>
    @*custom code end*@
    <div id="noDataButtonOverlay" style="display: none;">
        @Html.EJS().Button("loadDataButton").Content("Load data").IconCss("e-icons e-refresh").CssClass("load-data-btn e-outline").IsPrimary(false).HtmlAttributes(new Dictionary<string, object> { { "onclick", "loadChartData()" } }).Render()
    </div>

    <script id='No-Data-Template' type="text/x-template">
                <div id='noDataTemplateContainer' class="light-bg">
                    <div class="template-align">
                        <img src="@Url.Content("~/Content/chart/no-data.png")" alt="No Data" />
                    </div>
                    <div class="template-align">
                        <p style="font-size: 15px; margin: 10px 0 0;"><strong>No data available to display.</strong></p>
                    </div>
                </div>
            </script>
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var chartData = [
            { x: 'January', y: 19173 },
            { x: 'February', y: 17726 },
            { x: 'March', y: 19874 },
            { x: 'April', y: 19391 },
            { x: 'May', y: 20072 },
            { x: 'June', y: 19233 }
        ];
        var dataLoaded = false;
        
        var load = function (args) {
            loadChartTheme(args);
            args.chart.series[0].dataSource = (dataLoaded ? chartData : []);
        };
        
        var loaded = function (args) {
            var selectedTheme = loadChartTheme(args);
            var noDataDiv = document.getElementById("noDataTemplateContainer");
            var buttonOverlay = document.getElementById("noDataButtonOverlay");
            
            if (noDataDiv) {
                noDataDiv.className = selectedTheme.indexOf("dark") > -1 || selectedTheme.indexOf("highcontrast") > -1 ? 'dark-bg' : 'light-bg';
            }
            
            if (buttonOverlay) {
                buttonOverlay.style.display = !dataLoaded ? 'block' : 'none';
            }
            
        };
        
        var loadChartData = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].dataSource = chartData;
            var values = chartData.map(d => d.y);
            var min = Math.min(...values);
            var max = Math.max(...values);
            var range = max - min;
            chart.primaryYAxis.minimum = Math.floor(min - range * 0.1);
            chart.primaryYAxis.maximum = Math.ceil(max + range * 0.1);
            chart.primaryYAxis.interval = Math.ceil(range / 5);
            chart.series[0].animation.enable = true;
            dataLoaded = true;
            
            // Hide the button overlay when data is loaded
            var buttonOverlay = document.getElementById("noDataButtonOverlay");
            if (buttonOverlay) {
                buttonOverlay.style.display = 'none';
            }
            
            chart.refresh();
        };
    </script>
}
@*custom code start*@
@section Meta {
    <meta name="description"
        content="This example demonstrates the No Data Template in ASP.NET MVC Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription {
    <p>
        This sample illustrates handling the empty data chart using no data template. This template is used to display a
        custom message or image when the data is not available in the chart.
    </p>
}
@section Description {
    <p>
        In this example, the <code>noDataTemplate</code> property is assigned with an HTML template that includes an image, 
        a message indicating data unavailability, and a button to load new data into the chart. Once data is provided, 
        a line chart is displayed.
    </p>
    <p>
        <b>Tooltip</b> is enabled in the chart. To view a tooltip, hover over a data point or tap on it if you're 
        using a touch-enabled device.
    </p>
}
@section Title {
    <title>ASP.NET MVC Chart No Data Template Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of No Data Template in ASP.NET MVC Chart Control</h1>
}