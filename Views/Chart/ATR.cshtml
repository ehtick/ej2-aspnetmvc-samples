@using Syncfusion.EJ2;
<script src="~/Scripts/stock-chart-data.js"></script>
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">

            @Html.EJS().Chart("container-vertical").Rows(rows =>
       {
           rows.Height("40%").Add();
           rows.Height("60%").Add();
       }).Axes(ax =>
       {
           ax.Name("secondary").LineStyle(ls=>ls.Width(0)).StripLines(sl=> { sl.Start("0").End("14").Text("").Color("#6063ff").Visible(true).Opacity(0.1).ZIndex(Syncfusion.EJ2.Charts.ZIndex.Behind).Add(); }).Title("ATR").MajorTickLines(mg=>mg.Width(0)).MajorGridLines(mg=>mg.Width(0)).OpposedPosition(true).RowIndex(0).Add();
       }
           ).Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle).XName("x").YName("y").High("high").Low("low").Open("open").Close("close").Volume("volume").BearFillColor("#2ecd71").BullFillColor("#e74c3d").DataSource("ChartPoints").Name("Apple Inc").Width(2).Add();
           }).Indicators(id =>
           {
               id.Fill("blue").YAxisName("secondary").Period(3).Type(Syncfusion.EJ2.Charts.TechnicalIndicators.Atr).Field(Syncfusion.EJ2.Charts.FinancialDataFields.Close).SeriesName("Apple Inc").Add();
           }).ZoomSettings(zn => zn.EnableSelectionZooming(true).EnablePan(true).Mode(Syncfusion.EJ2.Charts.ZoomMode.X).EnablePinchZooming(true)).Crosshair(cr => cr.LineType(Syncfusion.EJ2.Charts.LineType.Vertical).Enable(true)
           ).PrimaryXAxis(px => px.ZoomFactor(0.2).ZoomPosition(0.6).MajorGridLines(mg=>mg.Width(0)).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct => ct.Enable(true))
             ).PrimaryYAxis(py => py.LineStyle(ls=>ls.Width(0)).RowIndex(1).OpposedPosition(true).Title("Price").Minimum(50).Maximum(170).Interval(30).LabelFormat("${value}").PlotOffset(25).MajorTickLines(mt=>mt.Width(0))
             ).Title("AAPL Stock Price 2012-2017").ChartArea(area => area.Border(br => br.Width(0))).Tooltip(tl => tl.Enable(true).Shared(true)).LegendSettings(lg => lg.Visible(false)).Load("load").Render()


          
        </div>
    </div>

@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var ChartPoints = hiloData;
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the ATR in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
   <p>
        This sample illustrates a chart with candle series and an average true range indicator. The trackball shows information about the stock rates and signal values of a day.
   </p>
}
@section Description{
   <p>
       In this example, you can see how to render and configure an average true range indicator. This indicator measures the volatility of the stock by comparing the current value with the previous value.
   </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information about the average true range indicator can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/technical-indicators#average-true-range-atr" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart ATR Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of ATR in ASP.NET MVC Chart Control</h1>
                }