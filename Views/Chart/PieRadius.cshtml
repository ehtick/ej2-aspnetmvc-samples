@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        @(Html.EJS().AccumulationChart("container").Load("load")
                .Series(sr =>
                {
                    sr
    .XName("Country")
    .YName("Population")
    .DataLabel(dl => dl.Visible(true).Name("text").TextWrap(Syncfusion.EJ2.Charts.TextWrap.Normal).MaxWidth(double.NaN).Font(ft => ft.FontWeight("600")).ConnectorStyle(cs => cs.Length("20px").Type(Syncfusion.EJ2.Charts.ConnectorType.Curve)))
    .InnerRadius("20%").BorderRadius(3).Border(border => border.Width(1).Color("#FFFFFF"))
    .Radius("Radius").TooltipMappingName("Radius").DataSource(ViewData["ChartPoints"])
    .Add();
                })
                .EnableSmartLabels(true)
                .EnableAnimation(true)
                .EnableBorderOnMouseMove(false)
                .Title("Global Distribution of Population and Land Area by Country - 2025").SubTitle("Source: wikipedia.org")
                .Tooltip(tp => tp.Enable(true).EnableHighlight(true).Header("").Format("<b>${point.x}</b><br>Area in square km: <b>${point.y}</b><br>Population density per square km: <b>${point.tooltip}</b>"))
                .LegendSettings(leg => leg.Visible(false)).TooltipRender("TooltipRender").Render()
        )
    </div>
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadAccumulationChartTheme(args);
            args.accumulation.series[0].dataLabel.position = ej.base.Browser.isDevice ? "Inside" : "Outside";
            args.accumulation.series[0].dataLabel.font.size = ej.base.Browser.isDevice ? "7px" : "12px";
            args.accumulation.series[0].dataLabel.name = ej.base.Browser.isDevice ? "text" : "Country";
            args.accumulation.series[0].dataLabel.connectorStyle.length = ej.base.Browser.isDevice ? '10px' : '20px';
            args.accumulation.series[0].dataLabel.textWrap = ej.base.Browser.isDevice ? 'Wrap' : 'Normal';
            args.accumulation.series[0].dataSource[0].Radius = ej.base.Browser.isDevice ? "110" : "100";
            args.accumulation.series[0].dataSource[1].Radius = ej.base.Browser.isDevice ? "120" : "118.7";
        }
        var TooltipRender = function (args)
        {
            args.text = args.text.replace(args.data.pointY.toString(), args.data.pointY.toLocaleString());
        }     
    </script>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Pie with Various Radius in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@section ActionDescription{
    <p>
        This sample compares countries by population density and total area using various radius in a pie series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render a donut chart with different radius. You can use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.AccumulationSeries.html#Syncfusion_EJ2_Charts_AccumulationSeries_Radius" aria-label="Radius">Radius<span class="sr-only">opens in a new tab</span></a> mapping property to achieve this feature.
        <code>DataLabel</code>  are used to represent individual data and its values.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information about the pie series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/accumulation-chart/pie-dough-nut#various-radius-pie-chart" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Pie with Various Radius Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }