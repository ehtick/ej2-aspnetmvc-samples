@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
    <div class="control-section" align="center">
        
                @Html.EJS().Chart("container").PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(0)).MajorTickLines(mt => mt.Width(0)).Interval(1)
                ).PrimaryYAxis(py => py.LineStyle(ls => ls.Width(0)).MajorTickLines(mt => mt.Width(0)).Title("Number of Medals Won")
                ).ChartArea(area => area.Border(br => br.Width(0)).Margin(margin => margin.Bottom(12))).Series(series =>
                {
                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("USA_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("USA Total Medals").GroupName("USA").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("USA_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("USA Gold Medals").GroupName("USA").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("UK_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("UK Total Medals").GroupName("UK").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("UK_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("UK Gold Medals").GroupName("UK").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("China_Total")
                    .ColumnWidth(0.7).ColumnSpacing(0.1).Name("China Total Medals").GroupName("China").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();

                    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("China_Gold")
                    .ColumnWidth(0.5).ColumnSpacing(0.1).Name("China Gold Medals").GroupName("China").LegendShape(Syncfusion.EJ2.Charts.LegendShape.Rectangle)
                    .Marker(marker => marker.DataLabel(label => label.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)
                    .Font(font => font.FontWeight("600").Color("#ffffff")))).DataSource(ViewData["ChartPoints"]).Add();
                }).Title("Olympic Medal Trends by Country and Year").SubTitle("A Historical Overview of Medal Counts Across Nations").LegendSettings(leg => leg.Visible(true).ShapeHeight(9).ShapeWidth(9)).Load("load").TooltipRender("tooltipRender").Tooltip(tooltip => tooltip.Enable(true).EnableHighlight(true).Header("<b>${point.x}</b>").Format("${series.groupName} : <b>${point.y} Gold</b>")).Render()
            </div>
        
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };

        var tooltipRender = function (args) {
            var seriesName = args.series.name;
            var groupName = (args.series && args.series.groupName) ? args.series.groupName : '';
            var value = args.point.y;
            args.text = seriesName.includes('Gold') ? groupName + ': <b>' + value + ' Gold</b>' : groupName + ': <b>' + value + ' Total</b>';
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Grouped Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the Olympics medal count using a grouped column series. Data labels are used to display the values of data points.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the column type charts. Column type charts are used for comparing the frequency, count, total or average of data in different categories. You can group the column series by using <code>groupName</code> property.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the column series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/column" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Grouped Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Charts</h1>
                }