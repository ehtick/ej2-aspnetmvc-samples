@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/trackball-data.js"></script>
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container-vertical").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true).Width(7).Height(7).IsFilled(true))
.DataSource("john").Name("John").Width(2).Opacity(1).Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true).Width(7).Height(7).IsFilled(true))
.DataSource("andrew").Name("Andrew").Width(2).Opacity(1).Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true).Width(7).Height(7).IsFilled(true))
.DataSource("thomas").Name("Thomas").Width(2).Opacity(1).Add();
       }).PrimaryXAxis(px => px.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorGridLines(mg=>mg.Width(0)).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years).LabelFormat("yyyy")
             ).PrimaryYAxis(py => py.Title("Revenue (in Million)").MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).Minimum(10).Maximum(80).LabelFormat("{value}M").RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
             ).ChartArea(area => area.Border(br => br.Width(0))).Tooltip(tl =>tl.Enable(true).Shared(true)).Crosshair(cr => cr.Enable(true).LineType(Syncfusion.EJ2.Charts.LineType.Vertical)).Title("Average Sales per Person").LegendSettings(lg => lg.EnableHighlight(true)).Load("load").Render()
        </div>
    </div>
  @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
  @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var john = john;
        var andrew = andrew;
        var thomas = thomas;
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };
    </script>
}
  @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Trackball in ASP.NET MVC Chart control. Explore here for more details."/>
                }
  @*custom code end*@
@section ActionDescription{
    <p>
        This sample depicts the trackball behavior in the chart. To view the trackball and its tooltip, hover over the chart or tap on it in touch-enabled devices.
    </p>
}
@section Description{
    <p>
        The trackball is used to track a data point close to the mouse or touch position. The trackball can be enabled by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartCrosshairSettings.html#Syncfusion_EJ2_Charts_ChartCrosshairSettings_Enable" aria-label="Enable">Enable<span class="sr-only">opens in a new tab</span></a> property of the crosshair to <b>true</b> and the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartTooltipSettings.html#Syncfusion_EJ2_Charts_ChartTooltipSettings_Shared" aria-label="Shared">Shared<span class="sr-only">opens in a new tab</span></a> property of the tooltip to <b>true</b> in the chart.
    </p>
    <p>
        More information about the trackball can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/cross-hair-and-track-ball#trackball" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Trackball Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Trackball in ASP.NET MVC Chart Control</h1>
                }