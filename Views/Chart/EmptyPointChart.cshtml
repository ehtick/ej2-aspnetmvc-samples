@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Charts
@section ControlsSection{
    <div class="col-lg-8 control-section">
        @(Html.EJS().Chart("container").ChartArea(ca => ca.Border(br => br.Width(0)))
            .Series(sr =>
            {
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
                    .XName("Product")
                    .YName("Profit")
                    .Marker(mr => mr.Visible(false).Width(7).Height(7))
                    .Width(2)
                    .EmptyPointSettings(es => es.Fill("#e6e6e6").Mode(Syncfusion.EJ2.Charts.EmptyPointMode.Gap))
                    .Add();
            })
            .PrimaryXAxis(xaxis =>
                xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
                    .Interval(1)
                    .MajorGridLines(mg => mg.Width(0))
                    .MajorTickLines(mt => mt.Width(0))
            )
            .PrimaryYAxis(yaxis =>
                yaxis.LineStyle(ls => ls.Width(0))
                    .Minimum(0)
                    .Maximum(100)
                    .Interval(20)
                    .LabelFormat("{value}%")
                    .MajorTickLines(mt => mt.Width(0))
            )
            .Title("Annual Product-Wise Profit Analysis")
            .ChartArea(area => area.Border(br => br.Width(0)))
            .Tooltip(tp => tp.Enable(true).EnableMarker(false))
            .Load("load").Render()
            )

    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <div>
                        @Html.EJS().DropDownList("seriestype").Index(0).DataSource(ViewData["data"]).Value("Column").Change("seriesChange").Render()
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Empty Point Mode:
                    </div>
                </td>
                <td style="width: 50%;">
                    <div>
                        @Html.EJS().DropDownList("emptymode").Index(0).DataSource(ViewData["data1"]).Value("Gap").Change("modeChange").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            args.chart.dataSource = [{ Product: "Rice", Profit: 80 },{ Product: "Wheat", Profit: null },{ Product: "Oil", Profit: 70 },{ Product: "Corn", Profit: 60 },{ Product: "Gram", Profit: null },{ Product: "Milk", Profit: 70 },{ Product: "Peas", Profit: 80 },{ Product: "Fruit", Profit: 60 },{ Product: "Butter", Profit: null }];
            loadChartTheme(args);
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice ? -45 : 0;
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice ? 'None' : 'Rotate45';
        };
        var seriesChange = function () {
             var seriestype = document.getElementById('seriestype').ej2_instances[0];
             var chart = document.getElementById('container').ej2_instances[0];
             chart.series[0].type = seriestype.value;
             if (seriestype.value === "Spline") {
                 chart.series[0].marker.visible = true;
                 chart.series[0].animation.enable = true;
             }
             else {
                 chart.series[0].marker.visible = false;
                 chart.series[0].animation.enable = true;
             }
             chart.refresh();
         }       
        var modeChange = function () {
            var emptymode = document.getElementById('emptymode').ej2_instances[0];
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].emptyPointSettings.mode = emptymode.value;
            chart.series[0].animation.enable = true;
            chart.refresh();
        }       
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Empty Point in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates the annual profit by product analysis of an organization with empty point functionality.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure empty points for a chart. Users can customize the empty points using <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartEmptyPointSettingsBuilder.html" aria-label="ChartEmptyPointSettings">ChartEmptyPointSettings<span class="sr-only">opens in a new tab</span></a> in series. Default empty point
        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartEmptyPointSettings.html#Syncfusion_EJ2_Charts_ChartEmptyPointSettings_Mode" aria-label="Mode">Mode<span class="sr-only">opens in a new tab</span></a> is <b>Gap</b>.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the empty points can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/working-with-data#empty-points" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Empty Point Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Empty Point in ASP.NET MVC Chart Control</h1>
                }