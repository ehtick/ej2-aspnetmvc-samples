@using Syncfusion.EJ2;
@section ControlsSection{
<div>
    <div class="col-lg-10 control-section">
        <div>
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .Name("2015")
            .XName("Country")
            .YName("GDPGrowthRate")
            .Width(2)
            .Opacity(1)
            .Marker(mr=>mr.Visible(false).Width(10).Height(10).DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)))
            .DataSource(ViewData["GDP_2015"]).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .Name("2016")
            .XName("Country")
            .YName("GDPGrowthRate")
            .Width(2)
            .Opacity(1)
            .Marker(mr => mr.Visible(false).Width(10).Height(10).DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top)))
            .DataSource(ViewData["GDP_2016"]).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
                .Interval(1)
                .IsIndexed(true)
                .CrosshairTooltip(ct=>ct.Enable(true))
                .MajorTickLines(mt => mt.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.MajorTickLines(mt => mt.Width(0))
                .LabelFormat("{value}%")
      )
      .Title("GDP by Countries")
      .LegendSettings(lg => lg.Visible(true))
      .ChartArea(area => area.Border(br => br.Width(0)))
      .Load("load").Render()
)
        </div>
    </div>
    <div class="col-lg-2 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Indexed:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            <input type="checkbox" id="isIndexed" checked="">
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
    #isIndexed:hover {
        cursor: pointer !important;
    }
    path[id^=container_Series_0_Point_] {
        cursor: pointer !important;
    }
</style>
 @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice ? 'None' : 'Rotate45';
            args.chart.series[0].marker.dataLabel.font.size = ej.base.Browser.isDevice ? '8px' : '11px';
            args.chart.series[1].marker.dataLabel.font.size = ej.base.Browser.isDevice ? '8px' : '11px';
        }
        document.getElementById('isIndexed').onchange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('isIndexed'));
            chart.primaryXAxis.isIndexed = element.checked;
            if (chart.primaryXAxis.isIndexed) {
                chart.series[0].type = 'Column';
                chart.series[1].type = 'Column';
                chart.series[0].marker.visible = false;
                chart.series[1].marker.visible = false;
                chart.primaryXAxis.labelRotation = 0;
            }
            else {
                chart.series[0].type = 'Line';
                chart.series[1].type = 'Line';
                chart.series[0].marker.visible = true;
                chart.series[1].marker.visible = true;
                chart.series[0].marker.dataLabel.visible = true;
                chart.series[0].marker.dataLabel.position = 'Top';
                chart.series[1].marker.dataLabel.visible = true;
                chart.series[1].marker.dataLabel.position = 'Top';
                chart.primaryXAxis.labelRotation = 90;
            }
            chart.refresh();
        };
    </script>
}
     @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Indexed Category Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample shows an indexed category axis in a chart with details about GDP growth across different countries.
    </p>
}
@section Description{
    <p>
        The category axis is also rendered on the basis of the index values in the data source. To render the indexed category axis, set <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_ValueType" aria-label="ValueType">ValueType<span class="sr-only">opens in a new tab</span></a> to <b>Category</b> and <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_IsIndexed" aria-label="IsIndexed">IsIndexed<span class="sr-only">opens in a new tab</span></a> property to <b>true</b>.
    </p>
    <p>
        More information about the indexed category axis can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/category-axis#indexed-category-axis" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Indexed Category Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Indexed Category Axis in ASP.NET MVC Chart Control</h1>
                }