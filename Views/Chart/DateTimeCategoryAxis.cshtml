@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section" style="text-align:center">
    <div>
        @Html.EJS().Chart("container").Series(
       series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).
           Name("Product").
           XName("Period").
           YName("Sales").Opacity(1).Width(2).
               Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Name("DataLabelMappingName"))).
           DataSource(ViewData["ChartPoints"]).Add();
       }).PrimaryXAxis(
       xAxis =>
       {
           xAxis.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTimeCategory).
           IntervalType(Syncfusion.EJ2.Charts.IntervalType.Days).
               Skeleton("Ed").
               Title("Business Days").
           MajorGridLines(mg=>mg.Width(0));
       }).PrimaryYAxis(
       yAxis =>
       {
           yAxis.RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).
            Minimum(0).
            Maximum(100).
            Interval(20).
               LabelFormat("{value}M").
            LineStyle(ls=>ls.Width(0)).
            MajorTickLines(mt=>mt.Width(0)).
            MinorTickLines(mt=>mt.Width(0));
       }).ChartArea(area => area.Border(br => br.Width(0))).Title("Sales comparison of a Product").LegendSettings(
       legend => { legend.Visible(false); }).Load("load").Render()       
    </div>
</div>

 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
 @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var data = [
            { x: new Date(2017, 11, 20), y: 21 },
            { x: new Date(2017, 11, 21), y: 24 },
            { x: new Date(2017, 11, 22), y: 24 },
            { x: new Date(2017, 11, 26), y: 70 },
            { x: new Date(2017, 11, 27), y: 75 },
            { x: new Date(2018, 0, 2), y: 82 },
            { x: new Date(2018, 0, 3), y: 53 },
            { x: new Date(2018, 0, 4), y: 54 },
            { x: new Date(2018, 0, 5), y: 53 },
            { x: new Date(2018, 0, 8), y: 45 }
        ];
        var striplines = [
            { visible: true, start: new Date(2017, 11, 20), end: new Date(2017, 11, 27), color: 'skyblue', opacity: 0.5, },
            { visible: true, start: new Date(2018, 0, 2), end: new Date(2018, 0, 8), color: 'pink', opacity: 0.5 },
        ];
        var load = function (args) {
            args.chart.series[0].dataSource = data;
            args.chart.series[0].xName = "x";
            args.chart.series[0].yName = "y";
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
            args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice?'true':'false';
            args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice?'-90':'0';
            args.chart.primaryXAxis.stripLines = [
                { visible: true, start: new Date(2017, 11, 20), end: new Date(2017, 11, 27), color: 'skyblue', opacity: 0.5, },
                { visible: true, start: new Date(2018, 0, 2), end: new Date(2018, 0, 8), color: 'pink', opacity: 0.5 },
            ];
            args.chart.annotations = [
                {
                    x: new Date(2017, 11, 22), y: 90, coordinateUnits: 'Point',
                    content: '<div style="color:#0000ff;font-family: bold; font-weight: 600">Christmas Offer<br> Dec 2017</div>',
                },
                {
                    x: new Date(2018, 0, 4), y: 90, coordinateUnits: 'Point',
                    content: '<div style="color:#0000ff;font-family: bold; font-weight: 800">New Year Offer<br> Jan 2018</div>',
                }
            ];
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the DateTime Category Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample shows the date-time category axis with sample data about the sales of a product on different business days.
    </p>
}
@section Description{
    <p>
        The date-time category axis is used to display date-time values with nonlinear intervals. For example, business days alone can be depicted here in a week. To use a date-time category axis, set the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_ValueType" aria-label="ValueType">ValueType<span class="sr-only">opens in a new tab</span></a> in axis to <b>DateTimeCategory</b>.
    </p>
    <p>
        More information about the DateTime Category Axis can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/date-time-axis#datetimecategory-axis" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart DateTime Category Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of DateTime Category Axis in ASP.NET MVC Chart Control</h1>
                }