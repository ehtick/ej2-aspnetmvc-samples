@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Charts
@section ControlsSection{
    <div class="control-section" align="center">
        @Html.EJS().Chart("container-verticals").Series(series =>
        {
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Year").YName("column").Name("Sales").Width(2).DataSource(ViewData["chartPoints"]).Add();
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("Year").YName("series").YAxisName("yAxis2").Name("Profit Margin").Marker(mr => mr.Visible(true).Width(7).Height(7).IsFilled(true)).Width(2).DataSource(ViewData["chartPoints"]).Add();
        }).Axes(ax => {
                          ax.LineStyle(ls => ls.Width(0))
                              .OpposedPosition(true)
                              .Minimum(0)
                              .Maximum(4)
                              .Name("yAxis2")
                              .LabelFormat("{value}%")
                              .Interval(0.5)
                              .Title("Profit(In Percentage)").EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
                              .MajorGridLines(mg=>mg.Width(0))
                              .MajorTickLines(mt => mt.Width(0))
                              .Add();
        }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorTickLines(mt => mt.Width(0)).MajorGridLines(mg=>mg.Width(0))
            ).PrimaryYAxis(py => py.Title("Sales in Billion").MajorGridLines(mg=>mg.Width(0)).MajorTickLines(mt => mt.Width(0)).LineStyle(ls => ls.Width(0)).Minimum(11000).Maximum(15000).Interval(1000).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
            ).Title("Sales Vs Profit Margin").ChartArea(area => area.Border(br => br.Width(0))).IsTransposed(true).Tooltip(tr => tr.Enable(true).EnableHighlight(true)).LegendSettings(legend => legend.Visible(false).Position(Syncfusion.EJ2.Charts.LegendPosition.Right)).Load("load").Render()
    </div>
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
     @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>     
        var load = function (args) {
            chart = args.chart;
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };       
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Vertical Chart in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a sales versus profit margin analysis using a vertical chart by changing the orientation of the x-axis to vertical and the y-axis to horizontal.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a vertical chart. Use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.Chart.html#Syncfusion_EJ2_Charts_Chart_IsTransposed" aria-label="IsTransposed">IsTransposed<span class="sr-only">opens in a new tab</span></a> property to render the chart vertically.
    </p>
    <p>
        More information about the vertical chart can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/vertical-chart" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Vertical Chart Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Vertical Chart in ASP.NET MVC Chart Control</h1>
                }