@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/theme-color.js"></script>
    <div class="col-md-8 control-section">
      @Html.EJS().Chart("container").Series(series =>
 {
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Scatter).XName("Period").YName("ProductA_Sales").Opacity(1)
     .Marker(mr=>mr.Width(7).Height(7).Shape(Syncfusion.EJ2.Charts.ChartShape.Triangle))
     .DataSource(ViewData["ChartPoints"]).Name("Product A").Add();
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Scatter).XName("Period").Opacity(1)
     .Marker(mr => mr.Width(7).Height(7).Shape(Syncfusion.EJ2.Charts.ChartShape.Pentagon))
     .YName("ProductB_Sales").DataSource(ViewData["ChartPoints"]).Name("Product B").Add();

 }).PrimaryXAxis(px => px.Minimum(1970).Maximum(2016).MajorGridLines(mg=>mg.Width(0))
       ).PrimaryYAxis(py => py.LabelFormat("{value}%").Title("Sales").Interval(25).Maximum(100).Minimum(0).MajorGridLines(mg=>mg.Width(1)).LineStyle(ls => ls.Width(0)).MajorTickLines(mt => mt.Width(0))
       ).Title("Profit Comparison of A and B").ChartArea(area => area.Border(br => br.Width(0))).Load("load").SelectionMode(Syncfusion.EJ2.Charts.SelectionMode.DragXY).AllowMultiSelection(false).LegendSettings(legend => legend.Visible(true).ToggleVisibility(false)).Render()
        </div>
<div class="col-md-4 property-section">
    <table id="property" title="Properties" style="width: 100%">
        <tr style="height: 50px">
            <td style="width: 60%">
                <div>Selection Mode:</div>
            </td>
            <td style="width: 40%;">
                <div style="margin-left: -70px">
                    @Html.EJS().DropDownList("selmode").Index(0).DataSource(ViewData["data"]).Value("DragXY").Change("selectionMode").Render()
                </div>
            </td>
        </tr>
        <tr id='' style="height: 50px">
            <td style="width: 80%">
                <div> Enable Multi Selection:</div>
            </td>
            <td>
                <input type="checkbox" id="select" style="margin-top: 15px; margin-left: -60px">
            </td>
        </tr>
    </table>
</div>
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #select:hover {
            cursor: pointer !important;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            loadChartTheme(args);

        };
        document.getElementById('select').onchange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('select'));
            chart.allowMultiSelection = element.checked;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        };
        var selectionMode = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var mode = document.getElementById('selmode').ej2_instances[0];
            chart.selectionMode = mode.value;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        }
    </script>
}
         @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Range Selection in ASP.NET MVC Chart control. Explore here for more details."/>
                }
         @*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates the range selection behavior and its mode in the charts.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to select points in a specific region. You can change the <b>Selection Mode</b> in the properties panel. You can also enable multiple selection.
    </p>
    <p>
        Click and drag to enable a rectangular selection and it will display the collection of points that are selected under the region.
    </p>
    <p>
        Rectangular selection can be set using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.SelectionMode.html" aria-label="SelectionMode">SelectionMode<span class="sr-only">opens in a new tab</span></a> property and it supports the following modes.
    </p>
    <ul>
        <li><code>DragXY</code> - Rectangular selection with respect to both axes.</li>
        <li><code>DragX</code> - Rectangular selection with respect to horizontal axis.</li>
        <li><code>DragY</code> - Rectangular selection with respect to vertical axis.</li>
    </ul>
    <p>
        More information about the rectangular selection can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/selection#rectangular-selection" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Range Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Range Selection in ASP.NET MVC Chart Control</h1>
                }