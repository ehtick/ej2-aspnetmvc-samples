@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/theme-color.js"></script>
    <div>
        <div class="col-lg-12 control-section" align="center">
            <div class="content-wrapper">
                <div align="center">
                    @(Html.EJS().Chart("container").HighlightColor("")
                        .Series(sr =>
                        {
                            sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
                                .XName("Items")
                                .YName("Quality")
                                .ErrorBar(eb => eb.VerticalError("error").Visible(true))
                                .Marker(mr => mr.Width(7).Height(7))
                                .DataSource(ViewData["ChartPoints"]).Add();
                        })
                        .PrimaryXAxis(xaxis =>
                            xaxis.MajorGridLines(mg => mg.Width(0))
                                .Interval(1)
                                .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
                                .MajorTickLines(mg => mg.Width(0))
                        )
                        .PrimaryYAxis(yaxis =>
                            yaxis.MajorTickLines(mg => mg.Width(0))
                                .LineStyle(ls => ls.Width(0))
                                .Minimum(0)
                                .Maximum(1250)
                                .Interval(250)
                                .Title("Quantity")
                        )
                        .Title("Quantity vs Items")
                        .Tooltip(tp => tp.Enable(true).EnableMarker(false))
                        .LegendSettings(lg => lg.Visible(false)).TooltipRender("tooltipRender")
                        .Load("load").ChartArea(area => area.Border(br => br.Width(0))).Render()
                        )
                </div>
            </div>
        </div>
    </div>

@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var load = function (args) {
            var selectedTheme = loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
            if ((selectedTheme.replace(/5.3/i, '5')) === 'bootstrap5' || selectedTheme === 'fluent') {
                args.chart.series[0].fill = '#81CCBB';
                args.chart.highlightColor = '#C7E9B6';
            }
        };
        var tooltipRender = function (args) {
            args.text =  '<b>'+args.data.pointX + ' Count'  + ': ' + args.data.pointY  + '</b> (error range: ' + (args.data.pointY - args.series.visiblePoints[args.data.pointIndex].verticalError / 2 ) + '-' + (args.data.pointY + args.series.visiblePoints[args.data.pointIndex].verticalError / 2 ) + ')';
        }
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Error Bar in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample shows the errors in the quantity of different items with an error bar chart.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the error bar chart. An error bar chart is used to indicate the error or uncertainty in the reported measurement.
    </p>
    <p>
        Charts supports the following error bar types.
    </p>
    <ul>
            <li><code>Fixed</code>: Renders a fixed type error bar.</li>
            <li><code>Percentage</code>: Renders a percentage type error bar.</li>
            <li><code>StandardDeviation</code>: Renders a standard deviation type error bar.</li>
            <li><code>StandardError</code>: Renders a standard error type error bar.</li>
        <li><code>Custom</code>: Renders a custom type error bar.</li>
    </ul>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on it in touch-enabled devices.
    </p>
    <p>
        More information on the error bar can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/error-bar" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Error Bar Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Error Bar in ASP.NET MVC Chart Control</h1>
                }