@using Syncfusion.EJ2;
<script src="~/Scripts/stock-chart-data.js"></script>
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
     @(Html.EJS().Chart("container-vertical").Series(series =>
 {
     series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle)
     .XName("x").High("high")
     .Low("low")
     .Open("open")
     .Close("close")
     .Volume("volume")
     .BearFillColor("#2ecd71")
     .BullFillColor("#e74c3d")
     .DataSource("ChartPoints")
     .Name("Apple Inc")
     .Width(2).Animation(an => an.Enable(false)).Add();

 }).Indicators(id =>
 {
     id.Fill("blue")
     .Period(14)
     .Type(Syncfusion.EJ2.Charts.TechnicalIndicators.Ema)
     .Field(Syncfusion.EJ2.Charts.FinancialDataFields.Close)
     .SeriesName("Apple Inc").Animation(animation=>animation.Enable(true)).Add();
 })
        .ZoomSettings(zn => zn.EnableSelectionZooming(true)
            .Mode(Syncfusion.EJ2.Charts.ZoomMode.X).EnablePan(true))
        .Crosshair(cr => cr.LineType(Syncfusion.EJ2.Charts.LineType.Vertical).Enable(true))
        .PrimaryXAxis(px => px.ZoomFactor(0.2).ZoomPosition(0.6).MajorGridLines(mg=>mg.Width(0)).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct => ct.Enable(true)))
        .PrimaryYAxis(py => py.Title("Price (in Million)").Minimum(50).LineStyle(ls=>ls.Width(0)).Maximum(170).Interval(30).LabelFormat("${value}M").MajorTickLines(mt=>mt.Width(0)))
        .Title("AAPL Stock Price 2012-2017")
        .Tooltip(tl => tl.Enable(true).Shared(true))
        .LegendSettings(lg => lg.Visible(false))
         .ChartArea(area => area.Border(br => br.Width(0))).Load("load").Render()
   )
        </div>
    </div>
 @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }   
    </style>
@*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var ChartPoints = hiloData;
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the EMA in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a chart with candle series and an exponential moving average indicator. The trackball shows information about each dayâ€™s stock rates and signal values.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure an exponential moving average indicator. This indicator tracks the price of an investment over time and is used to define the direction of the trend.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information about the exponential moving average indicator can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/technical-indicators#exponential-moving-average-ema" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart EMA Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of EMA in ASP.NET MVC Chart Control</h1>
                }