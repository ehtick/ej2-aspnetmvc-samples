@using System.Drawing
@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
<div>
    <div class="control-section">
        <div class="content-wrapper">
            <div style="text-align:center">

   @Html.EJS().Chart("container").Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("Fruits").YName("Sales")
       .Marker(mr=>mr.DataLabel(dl=>dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Outer))).DataSource(ViewData["ChartPoints"]).Add();
   }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).MinorGridLines(mg=>mg.Width(0)).IsIndexed(true).Interval(1).LabelRotation(90).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.None)
       ).PrimaryYAxis(py => py.Maximum(120).Minimum(0).Interval(30).MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).LabelStyle(ls => ls.Color("transparent"))
       ).Title("Fruits and Vegetables - Season").ChartArea(area => area.Border(br => br.Width(0))).LegendSettings(lg=>lg.Visible(false)).Load("load").PointRender("labelRender").Render()

            </div>
        </div>
    </div>
</div>
@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
    <script src="~/Scripts/chart/theme-color.js"></script>
    <script>
        var labelRender = function (args) {
            pointRender(args);
        };
        var load = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.border = { type: "Rectangle", width: 1 };
            args.chart.primaryXAxis.multiLevelLabels = (ej.base.Browser.isDevice ? ([
                {
                    border: { type: 'Rectangle' },
                    categories: [
                        { start: -0.5, end: 2.5, text: 'In Season', },
                        { start: 2.5, end: 5.5, text: 'Out of Season', },
                        { start: 5.5, end: 7.5, text: 'In Season', },
                        { start: 7.5, end: 9.5, text: 'Out of Season', },
                    ]
                }, {
                    border: { type: 'Rectangle' },
                    textStyle: { fontWeight: 'Bold' },
                    categories: [
                        { start: -0.5, end: 5.5, text: 'Fruits', },
                        { start: 5.5, end: 9.5, text: 'Vegetables', },
                    ]
                }]) : [
                    {
                        border: { type: 'Rectangle' },
                        categories: [
                            { start: -0.5, end: 0.5, text: 'Seedless', },
                            { start: 0.5, end: 2.5, text: 'Seeded', },
                            { start: 2.5, end: 3.5, text: 'Seedless', },
                            { start: 3.5, end: 5.5, text: 'Seeded', },
                            { start: 5.5, end: 6.5, text: 'Seedless', },
                            { start: 6.5, end: 7.5, text: 'Seeded', },
                            { start: 7.5, end: 8.5, text: 'Seedless', },
                            { start: 8.5, end: 9.5, text: 'Seeded', }
                        ]
                    }, {
                        border: { type: 'Rectangle' },
                        categories: [
                            { start: -0.5, end: 2.5, text: 'In Season', },
                            { start: 2.5, end: 5.5, text: 'Out of Season', },
                            { start: 5.5, end: 7.5, text: 'In Season', },
                            { start: 7.5, end: 9.5, text: 'Out of Season', },
                        ]
                    }, {
                        border: { type: 'Rectangle' },
                        textStyle: { fontWeight: 'Bold' },
                        categories: [
                            { start: -0.5, end: 5.5, text: 'Fruits', },
                            { start: 5.5, end: 9.5, text: 'Vegetables', },
                        ]
                    }])
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the MultiLevel Labels in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This example shows multilevel labels in the chart axis. We can add layers of labels to the axis using start and end range values.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to group axis labels based on ranges by using <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartMultiLevelLabels.html" aria-label="ChartMultiLevelLabels">ChartMultiLevelLabels<span class="sr-only">opens in a new tab</span></a>. You can customize the text in each level by using <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartMultiLevelLabel.html#Syncfusion_EJ2_Charts_ChartMultiLevelLabel_Border" aria-label="ChartAxisMultiLevelLabelBorder">ChartAxisMultiLevelLabelBorder<span class="sr-only">opens in a new tab</span></a> and <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartMultiLevelLabel.html#Syncfusion_EJ2_Charts_ChartMultiLevelLabel_TextStyle" aria-label="ChartAxisMultiLevelLabelTextStyle">ChartAxisMultiLevelLabelTextStyle<span class="sr-only">opens in a new tab</span></a>.
    </p>
    <p>
        Axis labels in each level can be arranged smartly using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.ChartMultiLevelLabel.html#Syncfusion_EJ2_Charts_ChartMultiLevelLabel_Overflow" aria-label="Overflow">Overflow<span class="sr-only">opens in a new tab</span></a> property. Its values and their behaviors are:
    </p>
    <ul>
        <li><b><a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.LabelIntersectAction.html#fields" aria-label="Trim">Trim<span class="sr-only">opens in a new tab</span></a></b> - Trim the label when it intersect.</li>
        <li><b><a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.LabelIntersectAction.html#fields" aria-label="Wrap">Wrap<span class="sr-only">opens in a new tab</span></a></b> - Wrap the label when it intersect.</li>
        <li><b><a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Charts.LabelIntersectAction.html#fields" aria-label="None">None<span class="sr-only">opens in a new tab</span></a></b> - Shows all the labels.</li>
    </ul>
    <p>
        More information about the multiple level labels can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/axis-labels#multilevel-labels" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart MultiLevel Labels Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of MultiLevel Labels in ASP.NET MVC Chart Control</h1>
                }