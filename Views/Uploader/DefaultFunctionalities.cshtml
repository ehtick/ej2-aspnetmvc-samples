@using Syncfusion.EJ2

@section ControlsSection {
    <div class="col-lg-8 control-section">
        <div class="control_wrapper">
            @Html.EJS().Uploader("UploadFiles").DropArea(".control-fluid").Removing("onFileRemove").AsyncSettings(new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Save"), RemoveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Remove") }).Render()
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div class="property-section">
            <div id="property" title="Properties">
                <div style="margin-left: 50px; padding-top:25px;">
                    @Html.EJS().CheckBox("checkAutoUpload").Change("valueChange").Checked(true).Label("Auto Upload").Render()
                </div>
                <div style="margin-left: 50px; padding-top:25px;">
                    @Html.EJS().CheckBox("sequentialUpload").Change("onValueChange").Checked(false).Label("Sequential Upload").Render()
                </div>
            </div>
        </div>
    </div>
}

<style>
    .control_wrapper {
        max-width: 400px;
        margin: 0 auto;
    }

    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
    }

    .control_wrapper .e-upload .e-upload-drag-hover {
        margin: 0;
    }
</style>

<script>
    function valueChange(args) {
        var uploadObj = document.getElementById('UploadFiles').ej2_instances[0];
        uploadObj.autoUpload = args.checked;        
        uploadObj.clearAll();
    }
    function onFileRemove(args) {
        args.postRawFile = false;
    }
    function onValueChange(args) {
        var uploadObj = document.getElementById('UploadFiles').ej2_instances[0];
        uploadObj.sequentialUpload = args.checked;
        uploadObj.clearAll();
    }
</script>

@section ActionDescription{
    <div id="action-description">
        <p>
            This <a href="https://www.syncfusion.com/aspnet-mvc-ui-controls/file-upload"
        target="_blank" aria-label="ASP.NET MVC File Upload">ASP.NET MVC File Upload<span class="sr-only">opens in a new tab</span></a> example demonstrates the default functionalities of the file upload control with auto upload and sequential upload options.
            Browse or drag-and-drop the files which you want to upload to the server and upload it..</p>

    </div>
}

@section Description{
    <div id="description">
        <p>
            The Uploader control is useful to upload images, documents, and other files. By default, the control allows to upload multiple files to browse and upload it to server.
            The selected files append to the file list that contains file details such as name, type, and size.
        </p>
        <p>
            You can manage the files in server after received the uploaded files. When the files are successfully uploaded to server, the remove button will be change to bin button.
            The uploaded files can be removed by click on the bin button.
        </p>
        <p>
            The progress bar displays for each file upload to denote its upload progress.
            Once the file upload gets success, the progress bar disappear and corresponding upload status message will be displayed in same place.
        </p>
        <p>More information on the Uploader instantiation can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/uploader/getting-started/"> documentation section<span class="sr-only">opens in a new tab</span></a>.</p>

    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC File Upload control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC File Upload Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC File Upload Control</h1>
                }