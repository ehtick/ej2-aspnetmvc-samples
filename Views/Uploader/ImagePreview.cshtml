@using Syncfusion.EJ2

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control_wrapper">
            <div id='dropArea' style='height: auto; overflow: auto'>
                <span id='drop'> Drop image (JPG, PNG) files here or <a href='' id='browse'><u>Browse</u></a> </span>
                @Html.EJS().Uploader("UploadFiles").DropArea(".control-fluid").AllowedExtensions(".jpg,.png,.jpeg").Selected("onSelect").Success("onUploadSuccess").Progress("onFileUpload").Removing("onFileRemove").Failure("onUploadFailed").AsyncSettings(new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Save"), RemoveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Remove") }).Render()
               </div>  
            </div>
        </div>
    <div class="col-lg-4 property-section">
        <div id="property" title="Properties">
            <div style='margin-left: 50px; padding-top:25px;'>
                @Html.EJS().Button("clearbtn").CssClass("e-btn e-css").Content("Clear All").Render()
            </div>
            <div style='margin-left: 50px; padding-top:25px;'>
                @Html.EJS().Button("uploadbtn").CssClass("e-btn e-css").Content("Upload All").Render()
            </div>
        </div>
    </div>
}

<style>
    .control_wrapper {
        max-width: 505px;
        margin: auto;
    }

    #uploadicon {
        cursor: pointer;
        top: 5px;
        left: 20px;
        position: relative;
    }

    .e-file-select-wrap {
        display: none;
    }

    .e-upload {
        border: none;
        margin-top: 10px;
        width: 100%;
    }

    #drop {
        font-size: 14px;
    }

    .e-bigger #drop {
        font-size: 15px;
    }

    #dropArea {
        border: 1px dashed #c3c3cc;
        position: relative;
        text-align: center;
        padding: 20px 0 10px;
    }

        #dropArea .e-upload .e-upload-files {
            text-align: initial;
            border-top: none;
        }

        #dropArea .e-upload-files .e-file-delete-btn.e-icons, #dropArea .e-upload-files .e-file-remove-btn.e-icons {
            top: 120px;
            background-color: white;
            border-radius: 50%;
            font-size: 12px;
            left: 80px;
        }

        #dropArea .e-upload-files li .e-file-remove-btn.e-icons.e-upload-icon {
            font-size: 14px;
            left: 20px;
        }

        #dropArea .e-upload-files li:hover .e-icons {
            visibility: visible;
        }

        #dropArea .e-upload-files li .e-icons {
            visibility: hidden;
        }
        @@font-face {
            font-family: 'Uploader_Icon';
            src:
            url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmoZcPvgAAAcgAAABAaGVhZBLQTSUAAADQAAAANmhoZWEINQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAgAAAAAAHAAAAABm1heHABDgAdAAABCAAAACBuYW1lQySinQAAAggAAAIxcG9zdLfl0usAAAQ8AAAAMgABAAAEAAAAAFwEAAAAAAAD2AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAA2vKJUF8PPPUACwQAAAAAANftBBgAAAAA1+0EGAAAAAAD2AP4AAAACAACAAAAAAAAAAEAAAACABEAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAIAAAAAIAAAAAA9gD+AAHABAAADchESMVITUjEzM3ETMRFzMBKAOwPvzMPp1mtUC1Zv7FCAF6vb0BO7X+EAHwtQE7AAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBVcGxvYWRlclJlZ3VsYXJVcGxvYWRlclVwbG9hZGVyVmVyc2lvbiAxLjBVcGxvYWRlckZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAVQBwAGwAbwBhAGQAZQByAFIAZQBnAHUAbABhAHIAVQBwAGwAbwBhAGQAZQByAFUAcABsAG8AYQBkAGUAcgBWAGUAcgBzAGkAbwBuACAAMQAuADAAVQBwAGwAbwBhAGQAZQByAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAAhVcGxvYWRlcgAAAAA=) format('truetype');
            font-weight: normal;
            font-style: normal;
        }
        #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon {
            font-family: 'Uploader_Icon';
            speak: none;
            font-size: 16px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon::before {
            content: '\e700';
        }
        #dropArea .e-upload .e-upload-files .e-icons:not(.e-uploaded):hover {
            background-color: #e6e6e6;
            border-color: #adadad;
            color: #333;
        }
        .material-dark #dropArea .e-upload .e-upload-files .e-icons,
        .material3-dark #dropArea .e-upload .e-upload-files .e-icons,
        .fabric-dark #dropArea .e-upload .e-upload-files .e-icons,
        .bootstrap-dark #dropArea .e-upload .e-upload-files .e-icons, 
        .bootstrap5-dark #dropArea .e-upload .e-upload-files .e-icons,
        .tailwind-dark #dropArea .e-upload .e-upload-files .e-icons,
        .tailwind3-dark #dropArea .e-upload .e-upload-files .e-icons {
            color: #333;
        }

    .highcontrast #dropArea .e-upload-files .e-file-remove-btn.e-icons, .highcontrast #dropArea .e-upload-files .e-file-delete-btn.e-icons {
        background-color: #ffd939;
    }

    .highcontrast #dropArea .e-upload .e-upload-files .e-file-delete-btn.e-icons::before, .highcontrast #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons::before {
        color: black;
    }

    #dropArea .e-upload .e-upload-files .e-upload-file-list {
        border: 0;
        display: inline-block;
        width: 165px;
    }

    .upload-image {
        width: 150px;
        height: 150px;
        display: inline-flex;
        background-size: contain;
        margin: 7px;
        text-align: center;
        line-height: 10;
        border-radius: 5px;
    }

        .upload-image:after {
            content: "";
            position: absolute;
            top: 6px;
            left: 6px;
            width: inherit;
            height: inherit;
            background: lightgray url('http://via.placeholder.com/300?text=Loading...') no-repeat center;
            color: transparent;
            border-radius: 5px;
        }

    .highcontrast div.file-name,
    .material-dark div.file-name,
    .material3-dark div.file-name,
    .fabric-dark div.file-name,
    .bootstrap-dark div.file-name,
    .bootstrap5-dark div.file-name,
    .tailwind-dark div.file-name,
    .tailwind3-dark div.file-name,
    .fluent-dark div.file-name,
    .fluent2-dark div.file-name,
    .fluent2-highcontrast div.file-name {
        color: white;
    }

    div.file-name {
        color: rgba(0, 0, 0, 0.87);
        font-size: 14px;
        padding: 3px 10px;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 90%;
        white-space: nowrap;
    }

    .highcontrast div.file-size {
        color: white;
    }

    div.file-size {
        font-size: 13px;
        padding: 3px 10px;
        overflow: hidden;
    }

    .progressbar {
        background: #ff4081;
        border: none;
        border-radius: 10px;
        height: 4px;
        margin-left: 7px;
        width: 90%;
        top: -60px;
        position: relative;
    }

    .bootstrap5 .progressbar,
    .bootstrap5-dark .progressbar,
    .tailwind .progressbar,
    .tailwind3 .progressbar,
    .tailwind-dark .progressbar,
    .tailwind3-dark .progressbar,
    .fluent-dark .progressbar {
        top: -70px;
    }

    #dropArea progress {
        border: none;
        background: #fff;
    }

    .highcontrast #dropArea progress,
    .material-dark #dropArea progress,
    .material3-dark #dropArea progress,
    .fabric-dark #dropArea progress,
    .bootstrap-dark #dropArea progress,
    .bootstrap5-dark #dropArea progress,
    .tailwind-dark #dropArea progress,
    .tailwind3-dark #dropArea progress {
        border: none;
        background: black;
    }

    progress::-webkit-progress-bar {
        border: none;
        background-color: #ffffff;
    }

    .highcontrast progress::-webkit-progress-bar {
        border: none;
        background-color: #000000;
    }

    .material progress::-webkit-progress-value {
        border-radius: 2px;
        background-color: #ff4081;
    }

    .bootstrap progress::-webkit-progress-value {
        border-radius: 2px;
        background-color: #1f496e;
    }

    .fabric progress::-webkit-progress-value {
        background-color: #1763ff;
        border-radius: 2px;
        top: -66px;
    }

    .highcontrast progress::-webkit-progress-value {
        background-color: #ffd939;
        border-radius: 2px;
    }

    .material progress::-moz-progress-bar {
        border-radius: 2px;
        background-color: #ff4081;
    }

    .bootstrap progress::-moz-progress-bar {
        border-radius: 2px;
        background-color: #1f496e;
    }

    .fabric progress::-moz-progress-bar {
        background-color: #1763ff;
        border-radius: 2px;
        top: -66px;
    }

    .highcontrast progress::-moz-progress-bar {
        background-color: #ffd939;
        border-radius: 2px;
    }

    .material #dropArea span a {
        color: #ff4081;
    }

    .fabric #dropArea span a {
        color: #1763ff;
    }

    .bootstrap #dropArea span a {
        color: #1f496e;
    }

    .highcontrast #dropArea span a {
        color: #ffd939;
    }

    .material3-dark #dropArea span a,
    .material-dark #dropArea span a {
        color:#56a4fd;
    }
    .fabric-dark #dropArea span a {
        color:#0074cc;
    }
    .bootstrap-dark #dropArea span a {
        color:#0070f0;
    }
    .bootstrap5-dark #dropArea span a {
        color:#0d6efd;
    }
    .tailwind-dark #dropArea span a,
    .tailwind3-dark #dropArea span a {
        color:#22d3ee;
    }
</style>

@section PreScripts {
    <script>
        document.getElementById('browse').onclick = function () {
            document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();
            return false;
        };
        document.getElementById('clearbtn').onclick = function () {
            if (!ej.base.isNullOrUndefined(document.getElementById('dropArea').querySelector('ul'))) {
                var uploadObj = document.getElementById("UploadFiles").ej2_instances[0]
                ej.base.detach(document.getElementById('dropArea').querySelector('ul'));
                uploadObj.filesData = [];
                uploadObj.fileList = [];
                filesName = [];
                uploadObj.element.value = '';
            }
        };
        document.getElementById('uploadbtn').onclick = function () {
            var uploadObj = document.getElementById("UploadFiles").ej2_instances[0]
            if (document.getElementById('dropArea').querySelector('ul') && uploadObj.getFilesData().length > 0) {
                uploadObj.upload(uploadObj.getFilesData());
            }
        };
        var parentElement;
        var filesName = [];
        var progressbarContainer;
        if (ej.base.Browser.isDevice) {
            document.getElementById('drop').style.padding = '0px 10%';
        }
        function onSelect(args) {
            if (!document.getElementById('dropArea').querySelector('li')) {
                this.filesData = [];
            }
            if (ej.base.isNullOrUndefined(document.getElementById('dropArea').querySelector('.e-upload-files'))) {
                parentElement = ej.base.createElement('ul', { className: 'e-upload-files' });
                document.getElementsByClassName('e-upload')[0].appendChild(parentElement);
            }
            var validFiles = validateFiles(args, this.filesData);
            if (validFiles.length === 0) {
                args.cancel = true;
                return;
            }
            for (var i = 0; i < validFiles.length; i++) {
                formSelectedData(validFiles[i], this);
            }
            this.filesData = this.filesData.concat(validFiles);
            args.cancel = true;
        }
        function validateFiles(args, viewedFiles) {
            var modifiedFiles = [];
            var validFiles = [];
            var isModified = false;
            if (args.event.type === 'drop') {
                isModified = true;
                var allImages = ['png', 'jpg', 'jpeg'];
                var chooseFiles = args.filesData;
                for (var i = 0; i < chooseFiles.length; i++) {
                    var selectFile = chooseFiles[i];
                    if (allImages.indexOf(selectFile.type) !== -1) {
                        modifiedFiles.push(selectFile);
                    }
                }
            }
            var files = modifiedFiles.length > 0 || isModified ? modifiedFiles : args.filesData;
            if (filesName.length > 0) {
                for (var j = 0; j < files.length; j++) {
                    var file = files[j];
                    if (filesName.indexOf(file.name) === -1) {
                        filesName.push(file.name);
                        validFiles.push(file);
                    }
                }
            } else {
                for (var k = 0; k < files.length; k++) {
                    var validFile = files[k];
                    filesName.push(validFile.name);
                    validFiles.push(validFile);
                }
            }
            return validFiles;
        }

        function formSelectedData(file, proxy) {
            var liEle = ej.base.createElement('li', { className: 'e-upload-file-list', attrs: { 'data-file-name': file.name } });
            var imageTag = ej.base.createElement('IMG', { className: 'upload-image', attrs: { 'alt': 'Image' } });
            var wrapper = ej.base.createElement('span', { className: 'wrapper' });
            wrapper.appendChild(imageTag);
            liEle.appendChild(wrapper);
            liEle.appendChild(ej.base.createElement('div', { className: 'name file-name', innerHTML: file.name, attrs: { 'title': file.name } }));
            liEle.appendChild(ej.base.createElement('div', { className: 'file-size', innerHTML: proxy.bytesToSize(file.size) }));
            var clearbtn;
            var uploadbtn;
            clearbtn = ej.base.createElement('span', { id: 'removeIcon', className: 'e-icons e-file-remove-btn', attrs: { 'title': 'Remove' } });
            ej.base.EventHandler.add(clearbtn, 'click', removeFiles, proxy);
            uploadbtn = ej.base.createElement('span', { className: 'e-upload-icon e-icons e-file-remove-btn', attrs: { 'title': 'Upload' } });
            uploadbtn.setAttribute('id', 'iconUpload');
            ej.base.EventHandler.add(uploadbtn, 'click', uploadFile, proxy);
            progressbarContainer = ej.base.createElement('progress', { className: 'progressbar', id: 'progressBar', attrs: { value: '0', max: '100' } });
            liEle.appendChild(clearbtn);
            liEle.appendChild(uploadbtn);
            liEle.appendChild(progressbarContainer);
            readURL(liEle, file);
            document.querySelector('.e-upload-files').appendChild(liEle);
            proxy.fileList.push(liEle);
        }
        function uploadFile(args) {
            var uploadObj = document.getElementById("UploadFiles").ej2_instances[0]
            uploadObj.upload([this.filesData[this.fileList.indexOf(args.currentTarget.parentElement)]]);
        }
        function removeFiles(args) {
            var uploadObj = document.getElementById("UploadFiles").ej2_instances[0]
            var removeFile = this.filesData[this.fileList.indexOf(args.currentTarget.parentElement)];
            var statusCode = removeFile.statusCode;
            if (statusCode === '2') {
                this.remove(removeFile, true);
            } else {
                var li = args.currentTarget.parentElement;
                ej.base.detach(li);
            }
            filesName.splice(filesName.indexOf(removeFile.name), 1);
            this.filesData.splice(this.fileList.indexOf(args.currentTarget.parentElement), 1);
            this.fileList.splice(this.fileList.indexOf(args.currentTarget.parentElement), 1);
            uploadObj.element.value = '';
        }
        function onFileUpload(args) {
            var li = document.getElementById('dropArea').querySelector('[data-file-name="' + args.file.name + '"]');
            var iconEle = li.querySelector('#iconUpload');
            iconEle.style.cursor = 'not-allowed';
            iconEle.classList.add('e-uploaded');
            ej.base.EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);
            var progressValue = Math.round((args.e.loaded / args.e.total) * 100);
            if (!isNaN(progressValue) && li.querySelector('.progressbar')) {
                li.getElementsByTagName('progress')[0].value = progressValue;
            }
        }
        function onUploadSuccess(args) {
            var _this = this;
            var spinnerElement = document.getElementById('dropArea');
            var li = document.getElementById('dropArea').querySelector('[data-file-name="' + args.file.name + '"]');
            if (li && !ej.base.isNullOrUndefined(li.querySelector('.progressbar'))) {
                li.querySelector('.progressbar').style.visibility = 'hidden';
            }
            if (args.operation === 'upload') {
                ej.base.EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);
                li.querySelector('.file-name').style.color = 'green';
                li.querySelector('.e-icons').onclick = function () { generateSpinner(_this.uploadWrapper); };
            }
            if (args.operation === 'remove') {
                if (li) {
                    ej.base.detach(li);
                }
                ej.popups.hideSpinner(spinnerElement);
                ej.base.detach(spinnerElement.querySelector('.e-spinner-pane'));
            }
        }
        function generateSpinner(targetElement) {
            ej.popups.createSpinner({ target: targetElement, width: '25px' });
            ej.popups.showSpinner(targetElement);
        }
        function onUploadFailed(args) {
            var li = document.getElementById('dropArea').querySelector('[data-file-name="' + args.file.name + '"]');
            li.querySelector('.file-name').style.color = 'red';
            if (args.operation === 'upload') {
                ej.base.EventHandler.remove(li.querySelector('#iconUpload'), 'click', uploadFile);
                li.querySelector('.progressbar').style.visibility = 'hidden';
            }
        }
        function onFileRemove(args) {
            args.postRawFile = false;
        }
        function readURL(li, args) {
            var preview = li.querySelector('.upload-image');
            var file = args.rawFile;
            var reader = new FileReader();
            reader.addEventListener('load', function () { preview.src = reader.result; }, false);
            if (file) {
                reader.readAsDataURL(file);
            }
        }
    </script>
}


@section ActionDescription{
    <div id="action-description">
        <p>This <a href="https://www.syncfusion.com/aspnet-mvc-ui-controls/file-upload"
        target="_blank" aria-label="ASP.NET MVC File Upload">ASP.NET MVC File Upload</a> example demonstrates how to add an image preview of the uploaded files. Browse or drag-and-drop image files (PNG, JPG) to display preview for the selected files. </p>

    </div>
}
@section Description{
    <div id="description">
        <p>The Uploader control allows to create preview images after uploaded it. The preview images created by reading the file using success event.  Also, the user can create preview images before uploading to server using select event.</p>

        <p>For more information, you can refer to the Image Preview section from the documentation.</p>

    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Image Preview in ASP.NET MVC File Upload control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET MVC File Upload Image Preview Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Image Preview in ASP.NET MVC File Upload Control</h1>
                }