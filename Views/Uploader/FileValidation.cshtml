@using Syncfusion.EJ2


@section ControlsSection{
<div class="col-lg-12 control-section">
    <div class="control_wrapper">
        @Html.EJS().Uploader("UploadFiles").DropArea(".control-fluid").AutoUpload(false).AllowedExtensions(".doc, .docx, .xls, .xlsx").MinFileSize(10000).Removing("onFileRemove").AsyncSettings(new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Save"), RemoveUrl = @Url.Content("https://ej2services.syncfusion.com/production/web-services/api/FileUploader/Remove") }).Selected("onFileSelected").Render()
    </div>
</div>
}
<style>
    .control_wrapper {
        max-width: 500px;
        margin: auto;
    }

    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
    }
</style>

<script>
    function onFileSelected(args) {
        // Filter the 5 files only to showcase
        var uploadObj = document.getElementById("UploadFiles")
        args.filesData.splice(5);
        var filesData = uploadObj.ej2_instances[0].getFilesData();
        var allFiles = filesData.concat(args.filesData);
        if (allFiles.length > 5) {
            for (var i = 0; i < allFiles.length; i++) {
                if (allFiles.length > 5) {
                    allFiles.shift();
                }
            }
            args.filesData = allFiles;
            // set the modified custom data
            args.modifiedFilesData = args.filesData;
        }
        args.isModified = true;
    }
    function onFileRemove(args) {
        args.postRawFile = false;
    }
</script>

@section ActionDescription{
    <div id="action-description">
        <p>
            This <a href="https://www.syncfusion.com/aspnet-mvc-ui-controls/file-upload"
        target="_blank" aria-label="ASP.NET MVC File Upload">ASP.NET MVC File Upload<span class="sr-only">opens in a new tab</span></a> example demonstrates how to validate the files before uploading it to server. Only document files (DOC, DOCX, XLS, XLSX),
            and the files should contain minimum 10 KB and maximum 4 MB sizes to upload it into server.This sample limits maximum files count as 5 to upload.
        </p>

    </div>
}
@section Description{
    <div id="description">
        <p>
            The Uploader control allows to validate the file’s type, and limit the file size using allowedExtensions, minFileSize, and maxFileSize properties.
            You can also achieve limit the files count before uploading it using select event.
        </p>

        <p>For more information, you can refer to the Validation section from this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/uploader/validation/"> documentation section<span class="sr-only">opens in a new tab</span></a>.</p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the File Validation in ASP.NET MVC File Upload control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC File Upload File Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of File Validation in ASP.NET MVC File Upload Control</h1>
                }