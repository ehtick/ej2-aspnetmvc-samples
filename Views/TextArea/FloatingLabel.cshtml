@using Syncfusion.EJ2.Inputs
@using Syncfusion.EJ2.DropDowns
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2
@section ControlsSection {
    <div class="col-lg-8 control-section floatinglabel">
        <div class="content-wrapper">
            <div class="floatinglabel-row">
                @Html.EJS().TextArea("floatlabel").Placeholder("Enter your comments").FloatLabelType(FloatLabelType.Auto).Rows(5).Cols(300).Render()
            </div>
        </div>
    </div>  

    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" class="floatinglabel-property">
            <tr>

                <td class="left-side">Float label type </td>
                <td>
                    @Html.EJS().DropDownList("select").PopupHeight("200px").Text("Auto").DataSource(
                                            (IEnumerable<floatLabelValues>)ViewData["data"]).Change("floatLabelHandler").Fields(new DropDownListFieldSettings { Text = "text", Value = "floatLabelValue" }).Render()
                </td>
            </tr>
        </table>
    </div>
}
   @*custom code start*@
<style>
    .content-wrapper div.floatinglabel-row {
        margin: 30px 150px;
    }
    
    .floatinglabel-property .left-side {
        font-size: 14px;
        padding: 8px;
    }

    #textarea-float .e-multi-line-input {
        max-width: 100%;
    }
</style>
    @*custom code end*@
<script type="text/javascript">
    function floatLabelHandler(args) {
            var textareaObj = document.getElementById('floatlabel').ej2_instances[0];
            switch (args.value) {
                case 'Auto':
                    textareaObj.floatLabelType = 'Auto';
                    break;
                case 'Always':
                    textareaObj.floatLabelType = 'Always';
                    break;
                case 'Never':
                    textareaObj.floatLabelType = 'Never';
                    break;
            }
        }
</script>
@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates the floating label functionalities of the textarea control.
            Choose the corresponding floatLabel option from the property panel to update the floating label behaviour in
            textarea.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>The floating label is used to float the placeholder text while the user enters text or focuses on the textarea element with a value.
            In this sample, the floating label behavior can be changed using the following options:</p>
        <ul>
            <li>Choose float label types either 'Never', 'Always', or 'Auto' to control the floating behavior of the placeholder text.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the floating label behaviour in ASP.NET MVC TextArea control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC TextArea floating label Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of floating label in ASP.NET MVC TextArea Control</h1>
                }