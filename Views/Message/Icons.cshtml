@using Syncfusion.EJ2.Notifications;
@using Syncfusion.EJ2.Buttons;

@section ControlsSection {
    <div class="col-lg-8 control-section msg-icon-section sb-property-border">
        <div class="msg-content-section">
            @Html.EJS().Button("btn1").Content("Show Default Message").CssClass("e-outline e-primary msg-hidden").Render()
            @Html.EJS().Message("msg_default_icon").Severity(Severity.Normal).Content("Editing is restricted").ShowCloseIcon(true).Closed("defaultClosed").Render()
            @Html.EJS().Button("btn2").Content("Show Info Message").CssClass("e-outline e-primary e-info msg-hidden").Render()
            @Html.EJS().Message("msg_info_icon").Severity(Severity.Info).Content("Please read the comments carefully").ShowCloseIcon(true).Closed("infoClosed").Render()
            @Html.EJS().Button("btn3").Content("Show Success Message").CssClass("e-outline e-primary e-success msg-hidden").Render()
            @Html.EJS().Message("msg_success_icon").Severity(Severity.Success).Content("Your message has been sent successfully").ShowCloseIcon(true).Closed("successClosed").Render()
            @Html.EJS().Button("btn4").Content("Show Warning Message").CssClass("e-outline e-primary e-warning msg-hidden").Render()
            @Html.EJS().Message("msg_warning_icon").Severity(Severity.Warning).Content("There was a problem with your network connection").ShowCloseIcon(true).Closed("warningClosed").Render()
            @Html.EJS().Button("btn5").Content("Show Error Message").CssClass("e-outline e-primary e-danger msg-hidden").Render()
            @Html.EJS().Message("msg_error_icon").Severity(Severity.Error).Content("A problem occurred while submitting your data").ShowCloseIcon(true).Closed("errorClosed").Render()
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("showIcon").Checked(true).Change("severityIconChange").Label("Show Icon").Render()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EJS().CheckBox("showCloseIcon").Checked(true).Change("closeIconChange").Label("Show Close Icon").Render()
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

@section Scripts {
    <script>
    document.getElementById("btn1").onclick = function (e) {
        var msgDefault = ej.base.getComponent(document.getElementById("msg_default_icon"), "message");
        var defaultBtn = ej.base.getComponent(document.getElementById("btn1"), "btn");
        show(msgDefault, defaultBtn);
    }

    document.getElementById("btn2").onclick = function (e) {
        var msgInfo = ej.base.getComponent(document.getElementById("msg_info_icon"), "message");
        var infoBtn = ej.base.getComponent(document.getElementById("btn2"), "btn");
        show(msgInfo, infoBtn);
    }

    document.getElementById("btn3").onclick = function (e) {
        var msgSuccess = ej.base.getComponent(document.getElementById("msg_success_icon"), "message");
        var successBtn = ej.base.getComponent(document.getElementById("btn3"), "btn");
        show(msgSuccess, successBtn);
    }

    document.getElementById("btn4").onclick = function (e) {
        var msgWarning = ej.base.getComponent(document.getElementById("msg_warning_icon"), "message");
        var warningBtn = ej.base.getComponent(document.getElementById("btn4"), "btn");
        show(msgWarning, warningBtn);
    }

    document.getElementById("btn5").onclick = function (e) {
        var msgError = ej.base.getComponent(document.getElementById("msg_error_icon"), "message");
        var errorBtn = ej.base.getComponent(document.getElementById("btn5"), "btn");
        show(msgError, errorBtn);
    }
    </script>
}
<script>
  function defaultClosed() {
    var defaultBtn = ej.base.getComponent(document.getElementById("btn1"), "btn");
    defaultBtn.element.classList.remove("msg-hidden");
  }

  function infoClosed() {
    var infoBtn = ej.base.getComponent(document.getElementById("btn2"), "btn");
    infoBtn.element.classList.remove("msg-hidden");
  }

  function warningClosed() {
    var warningBtn = ej.base.getComponent(document.getElementById("btn4"), "btn");
    warningBtn.element.classList.remove("msg-hidden");
  }

  function successClosed() {
    var successBtn = ej.base.getComponent(document.getElementById("btn3"), "btn");
    successBtn.element.classList.remove("msg-hidden");
  }

  function errorClosed() {
    var errorBtn = ej.base.getComponent(document.getElementById("btn5"), "btn");
    errorBtn.element.classList.remove("msg-hidden");
  }

  function severityIconChange(args) {
    changeProp("showIcon", args.checked);
  }

  function closeIconChange(args) {
    changeProp("showCloseIcon", args.checked);
  }

  function show(message, btn) {
    message.visible = true;
    btn.element.classList.add("msg-hidden");
  }

  function changeProp(prop, value) {
    var msgTypes = ["default", "info", "success", "warning", "error"];
    for (var i = 0; i <= 4; i++) {
      var msgObj = ej.base.getComponent(document.getElementById("msg_" + msgTypes[i] + "_icon"),"message");
      if (msgObj) {
        if (value) {
          msgObj[prop] = true;
        } else {
          msgObj[prop] = false;
        }
      }
    }
  }
</script>

<style>
    .msg-icon-section .msg-content-section {
        margin: 0 auto;
        max-width: 520px;
        padding-top: 10px;
    }

    .msg-icon-section .e-message {
        margin: 10px 0;
    }

    .msg-icon-section .e-btn {
        display: block;
        margin: 10px 0;
    }

    .msg-icon-section .e-btn.msg-hidden {
        display: none;
    }
</style>

@section Meta {
    <meta name="description" content="This example demonstrates the Icons in ASP.NET MVC Message control. Explore here for more details." />
}

@section ActionDescription {
    <div id="action-description">
        <p>This sample demonstrates the visibility customization of severity and close icons of the ASP.NET MVC Message control. Click the close icon to hide the message. Click the button to restore the hidden message. Check or uncheck the check box to show or hide the visibility of the severity icon. Check or uncheck the check box to show or hide the visibility of the close icon.</p>
    </div>
}

@section Description {
    <div id="description">
        <p>The Message control can be rendered with and without the severity and close icons. The close icon is used to hide the message.</p>
        <p>In this sample, the Message control is rendered with a severity icon and a close icon. The visibility of the severity icon is handled by the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Notifications.Message.html#Syncfusion_EJ2_Notifications_Message_ShowIcon" aria-label="ShowIcon">ShowIcon<span class="sr-only">opens in a new tab</span></a> property. The visibility of the close icon is handled by the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Notifications.Message.html#Syncfusion_EJ2_Notifications_Message_ShowCloseIcon" aria-label="ShowCloseIcon">ShowCloseIcon<span class="sr-only">opens in a new tab</span></a> property.</p>
        <p>More information about Message icons can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/message/icons" aria-label="documentation">documentation<span class="sr-only">opens in a new tab</span></a> section.</p>
    </div>
}

@section Title {
    <title>ASP.NET MVC Message Icons Example - Syncfusion Demos </title>
}

@section Header {
    <h1 class='sb-sample-text'>Example of Icons in ASP.NET MVC Message Control</h1>
}
