@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="control_wrapper treeview-control-section">
            <div class="col-lg-12 control-section">
                <div class="col-lg-6 nested-data">
                    <div class="content">
                        <h4>Hierarchical Data</h4>
                        @Html.EJS().TreeView("hierarchical").Fields((TreeViewFieldsSettings)ViewData["hierarchicalFields"]).Render()

                    </div>
                </div>
                <div class="col-lg-6 list-data">
                    <div class="content">
                        <h4>List Data</h4>
                        @Html.EJS().TreeView("localData").Fields((TreeViewFieldsSettings)ViewData["fields"]).Render()
                    </div>
                </div>
            </div>

        </div>
        </div>
@*custom code start*@
<style>
    .nested-data, .list-data {
        padding: 15px;
        margin-bottom: 25px;
    }

    .content {
        margin: 0 auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

        .content h4 {
            padding: 0 10px;
        }

    .control-section {
        margin-bottom: 100px;
    }

    @@media screen and (max-width: 768px) {
        .treeview-control-section {
            margin: 0;
        }
    }
</style>
@*custom code end*@
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Local Data in ASP.NET MVC TreeView control. Explore here for more details."/>
                }


@section ActionDescription{

<div id="action-description">
    <p>This <a href="https://www.syncfusion.com/aspnet-mvc-ui-controls/treeview" target="_blank" aria-label="ASP.NET MVC TreeView example">ASP.NET MVC TreeView example<span class="sr-only">opens in a new tab</span></a> demonstrates the binding of local data to the TreeView. Click on node to select it, and click on icon or double click on node to expand/collapse it.</p>
</div>



}
@section Description{

<div id="description">
    <p>The TreeView component loads the data through the <code>dataSource</code> property, where the data can be either local data or remote data. In case of local data, the data structure can be hierarchical data or list data (with self-referential format i.e., mapped with the <b>id</b> and <b>parentID</b> fields).</p>
    <p>In this demo, the first TreeView is bound with the hierarchical data that contains array of nested objects. And the second TreeView is bound with the list type data where the parent-child relation is referred by the <b>id</b> and <b>parentID</b> mapping fields.</p>
    <p>For more information, you can refer to the <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/treeview/data-binding/" target="_blank" aria-label="Data Binding">Data Binding<span class="sr-only">opens in a new tab</span></a> section from the documentation.</p>
</div>

}



@section Title{
                    <title>ASP.NET MVC TreeView Local Data Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Local Data in ASP.NET MVC TreeView Control</h1>
                }