@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Charts
@section ControlsSection{


    <div class="control-section">
        <div id="spark-container" class="row">
            <div class="cols-sample-area" align="center" style="margin-top: 8%;">
                <div align="center" class="col-lg-2 col-md-3 col-sm-5 sparent">
                    <div class="spark" id="line" align="center">
                        @Html.EJS().Sparkline("line").Load("load").Height("80px").Width("90%").LineWidth(1).Type(SparklineType.Line).Fill("#3C78EF").ValueType(SparklineValueType.Numeric).XName("x").YName("y").TooltipSettings(tool => tool.Visible(true).Format("${x} : ${y}").TrackLineSettings(new SparklineTrackLineSettings { Visible = true })).MarkerSettings(marker => marker.Size(2.5).Fill("blue")).DataSource(ViewData["lineData"]).Render()
                        <div class="sparktext" align="center" style="position: absolute; margin-top: 90px; margin-left: 2px; width: 100%;">Power production for a day</div>
                    </div>
                </div>
                <div align="center" class="col-lg-2 col-md-3 col-sm-5 sparent">
                    <div class="spark" id="area" align="center">
                        @Html.EJS().Sparkline("area").Load("load").Height("80px").Width("90%").LineWidth(1).Type(SparklineType.Area).Opacity(1).Fill("#b2cfff").Border(new SparklineSparklineBorder { Color = "#3C78EF", Width = 2 }).ValueType(SparklineValueType.Category).XName("xval").YName("yval").TooltipSettings(tool => tool.Visible(true).Format("${xval} : ${yval}").TrackLineSettings(new SparklineTrackLineSettings { Visible = true })).DataSource(ViewData["areaData"]).Render()
                        <div class="sparktext" align="center" style="position: absolute; margin-top: 90px; margin-left: 3px; width: 100%;">Average weather comparision</div>
                    </div>
                </div>
                <div align="center" class="col-lg-2 col-md-3 col-sm-5 sparent">
                    <div class="spark" id="column" align="center">
                        @Html.EJS().Sparkline("column").Load("load").Height("80px").Width("90%").LineWidth(1).Fill("#3C78EF").Type(SparklineType.Column).ValueType(SparklineValueType.Category).HighPointColor("#14aa21").XName("xval").YName("yval1").TooltipSettings(tool => tool.Visible(true).Format("${xval} : ${yval1}")).DataSource(ViewData["areaData"]).Render()
                        <div class="sparktext" align="center" style="position: absolute; margin-top: 90px; margin-left: 10px; width: 100%;">Revenue status</div>
                    </div>
                </div>
                <div align="center" class="col-lg-2 col-md-5 col-sm-5 sparent">
                    <div class="spark" id="winloss" align="center">
                        @Html.EJS().Sparkline("winloss").Load("load").Height("80px").Width("90%").LineWidth(1).Fill("#3C78EF").Type(SparklineType.WinLoss).ValueType(SparklineValueType.Numeric).NegativePointColor("#fc5070").XName("x").YName("y").DataSource(ViewData["winlossData"]).Render()
                        <div class="sparktext" align="center" style="position: absolute; margin-top: 90px; margin-left: 5px; width: 100%;">Customer satisfaction score</div>
                    </div>
                </div>
                <div align="center" class="col-lg-2 col-md-5 col-sm-10 sparent">
                    <div class="spark" align="center" style="height: 87px;">
                        <div class="sparkpie" id="pie1" style="height:40px;width: 29%;">
                            @Html.EJS().Sparkline("pie1").Load("load").Height("40px").Width("100%").LineWidth(1).Type(SparklineType.Pie).ValueType(SparklineValueType.Category).XName("xval").YName("yval").TooltipSettings(too => too.Visible(true).Format("${xval} : ${yval}")).DataSource(ViewData["pieData"]).Render()
                            <div align="center" class="pietext" style="position: absolute; margin-top: 40px; width: 25%;">USA</div>
                        </div>
                        <div class="sparkpie" id="pie2" style="height:40px;width: 29%;">
                            @Html.EJS().Sparkline("pie2").Load("load").Height("40px").Width("100%").LineWidth(1).Type(SparklineType.Pie).ValueType(SparklineValueType.Category).XName("xval").YName("yval1").TooltipSettings(too => too.Visible(true).Format("${xval} : ${yval1}")).DataSource(ViewData["pieData"]).Render()
                            <div align="center" class="pietext" style="position: absolute; margin-top: 40px; width: 25%;">GBR</div>
                        </div>
                        <div class="sparkpie" id="pie3" style="height:40px;width: 29%;">
                            @Html.EJS().Sparkline("pie3").Load("load").Height("40px").Width("100%").LineWidth(1).Type(SparklineType.Pie).ValueType(SparklineValueType.Category).XName("xval").YName("x").TooltipSettings(too => too.Visible(true).Format("${xval} : ${x}")).DataSource(ViewData["pieData"]).Render()
                            <div align="center" class="pietext" style="position: absolute; margin-top: 40px; width: 25%;">CHN</div>
                        </div>
                        <div class="sparktext" align="center" style="position: absolute; margin-top: 90px; width: 90%;">Olympics medal details</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        #pie1, #pie2, #pie3 {
            height: 40px;
            width: 29%;
            position: static !important
        }

        td {
            font-family: "Roboto", "Segoe UI", "GeezaPro", "DejaVu Serif", "sans-serif";
            font-weight: 600;
        }

        .spark {
            float: left;
            margin-left: 3%;
            border: 1px solid rgb(209, 209, 209);
            border-radius: 2px;
            width: 93%;
        }

        .sparent {
            height: 110px;
            margin-left: 3%;
            margin-right: 0%;
        }

        .sparkpie {
            float: left;
            margin-top: 15px;
            margin-left: 2%;
        }

        .pieparent {
            width: 93%;
        }

        .pietext {
            float: left;
        }

        .sparktext {
            text-anchor: middle;
        }
    </style>
    <script src="~/Scripts/Sparkline/theme-color.js"></script>
    <script>
        function load(args) {
            if (args.sparkline.type == "Line") {
                args.sparkline.markerSettings = {
                    visible: ['All'],
                    size: 2.5,
                    fill: 'blue'
                };
            }
            loadSparkLineTheme(args);
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample depicts the various types of series available in sparkline.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Series Types in ASP.NET MVC Sparkline Charts control. Explore here for more details."/>
                }
@section Description{
    <p>
        In this example, you can see the sparkline with various series types such as line, area, column, win loss and pie. Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over the data points or tap on a data point in touch enabled devices.
    </p>
}

@section Title{
                    <title>ASP.NET MVC Sparkline Charts Series Types Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Series Types in ASP.NET MVC Sparkline Charts Control</h1>
                }