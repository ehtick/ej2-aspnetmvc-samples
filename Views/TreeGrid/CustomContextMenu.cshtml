@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "CustomContextMenu";
}

@*custom code end*@

@section ControlsSection{
<div class="control-section">
    @{
        List<object> ContextMenuitems = new List<object>();
        ContextMenuitems.Add(new { text= "Collapse the Row", target= ".e-content", id= "collapserow" });
        ContextMenuitems.Add(new { text= "Expand the Row", target= ".e-content", id= "expandrow" });

    }

    @Html.EJS().TreeGrid("CustomContextMenu").DataSource((IEnumerable<object>)ViewData["datasource"]).Columns(col =>
    {
    col.Field("TaskId").HeaderText("Task ID").Width(80).TextAlign(TextAlign.Right).Add();
    col.Field("TaskName").HeaderText("Task Name").Width(210).Add();
    col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(100).Add();
    col.Field("EndDate").HeaderText("End Date").Format("yMd").TextAlign(TextAlign.Right).Width(100).Add();
    col.Field("Duration").HeaderText("Duration").Width(80).TextAlign(TextAlign.Right).Add();
    col.Field("Progress").HeaderText("Progress").Width(80).TextAlign(TextAlign.Right).Add();
    col.Field("Priority").HeaderText("Priority").Width(80).TextAlign(TextAlign.Right).Add();


    }).Height(400).ChildMapping("Children").ContextMenuItems(ContextMenuitems).ContextMenuOpen("ContextMenuOpen").ContextMenuClick("ContextMenuClick").TreeColumnIndex(1).Render()
</div>
    <script>
        function ContextMenuOpen(args) {
            var treegrid = document.getElementById("CustomContextMenu").ej2_instances[0];
                var elem = args.event.target;
                var row = elem.closest('.e-row');
                var uid = row && row.getAttribute('data-uid');
            if (ej.base.isNullOrUndefined(row) || ej.base.isNullOrUndefined(ej.base.getValue('hasChildRecords', treegrid.grid.getRowObjectFromUID(uid).data)) ||
            !ej.base.getValue('hasChildRecords', treegrid.grid.getRowObjectFromUID(uid).data)) {
                    args.cancel = true;
                } else {
                    var flag = ej.base.getValue('expanded', treegrid.grid.getRowObjectFromUID(uid).data);
                    var val = flag ? 'none' : 'block';
                    document.querySelectorAll('li#expandrow')[0].setAttribute('style', 'display: ' + val + ';');
                    val = !flag ? 'none' : 'block';
                    document.querySelectorAll('li#collapserow')[0].setAttribute('style', 'display: ' + val + ';');
                }
    }
        function ContextMenuClick(args) {
            var treegrid = document.getElementById("CustomContextMenu").ej2_instances[0];
                 treegrid.getColumnByField('TaskID');
                if (args.item.id === 'collapserow') {
                    treegrid.collapseRow((treegrid.getSelectedRows()[0]), treegrid.getSelectedRecords()[0]);
                } else {
                    treegrid.expandRow((treegrid.getSelectedRows()[0]), treegrid.getSelectedRecords()[0]);
                }
    }
</script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Custom ContextMenu in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the usage of custom context menu in Tree Grid component. Right click anywhere on a parent row in the TreeGrid to view 
        custom context menu.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>  Tree Grid has an option to show the custom context menu when right click on it. To configure the custom items in context menu, 
        you should define custom item in  <code>ContextMenuItems</code>. 
        
        In this demo, Custom Context Menu feature has enabled by defining the custom context menu <code>Expand the Row</code> and <code>Collapse the Row</code> 
        for the parent nodes in <code>ContextMenuItems</code>  property.
        </p>
        <p>
            More information on the ContextMenu can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/context-menu#custom-context-menu-items" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Custom ContextMenu Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Custom ContextMenu in ASP.NET MVC Tree Grid Control</h1>
                }