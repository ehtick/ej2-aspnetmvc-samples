@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "LoadOnDemand";
}

@*custom code end*@

@section ControlsSection{
    <div class="control-section">
        @(Html.EJS().TreeGrid("TreeGrid")
            .DataSource(ds => 
                ds.Url("https://ej2services.syncfusion.com/production/web-services/api/SelfReferenceData")
                .Adaptor("WebApiAdaptor")
                .CrossDomain(true))
            .Columns(col =>
            {
                col.Field("TaskID").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").Width(150).Add();
                col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                col.Field("EndDate").HeaderText("End Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                col.Field("Duration").HeaderText("Duration").Width(110).TextAlign(TextAlign.Right).Add();
                col.Field("Progress").HeaderText("Progress").Width(110).Add();
                col.Field("Priority").HeaderText("Priority").Width(130).Add();

            }).Height(400).IdMapping("TaskID").ParentIdMapping("ParentItem").HasChildMapping("isParent").TreeColumnIndex(1).Render()
        )
    </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Remote Data in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the way of binding remote services to Tree Grid component. Here, the DataManager is used to bind the remote data with Tree Grid.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>Tree Grid can be bound to remote services by assigning the <code>DataSource</code> property with the instance of <code>DataManager</code>.</p>
        <p>
           The DataManager, which will act as an interface between the service endpoint and the Tree Grid, will require the below minimal information to interact with service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager->Url</code> - Defines the service endpoint to fetch data</li>
            <li><code>DataManager->Adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used
                for remote binding.</li>
        </ul>
        <p>Adaptor is responsible for processing response and request from/to the service endpoint.
            <code>DataManager</code> provides some predefined adaptors which are designed to interact with
            particular service endpoints. They are,</p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services. This is the base adaptor for all remote based
                adaptors.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>In this demo, remote data is bound by assigning service data as an instance of <code>DataManager</code> to the <code>DataSource
        </code> property.</p>
        <p>
            More information on the data binding can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/data-binding/remote-data" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Remote Data Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Remote Data in ASP.NET MVC Tree Grid Control</h1>
                }
