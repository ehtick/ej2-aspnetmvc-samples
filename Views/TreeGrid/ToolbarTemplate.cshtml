@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "ToolbarTemplate";
}

@*custom code end*@

@section ControlsSection{
<div class="control-section">
    @{
        List<object> toolbarItems = new List<object>();
        toolbarItems.Add("ExpandAll");
        toolbarItems.Add("CollapseAll");
        toolbarItems.Add(new { text = "Quick Filter", tooltipText = "Quick Filter", id = "toolbarfilter" });
    }
    @(Html.EJS().TreeGrid("ToolbarTemplate").AllowFiltering().DataSource((IEnumerable<object>)ViewData["datasource"]).Columns(col =>
        {
            col.Field("TaskId").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
            col.Field("TaskName").HeaderText("Task Name").Width(130).Add();
            col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(90).Add();
            col.Field("Duration").HeaderText("Duration").Width(90).TextAlign(TextAlign.Right).Add();
            col.Field("Progress").HeaderText("Progress").Width(90).TextAlign(TextAlign.Right).Add();
            col.Field("Priority").HeaderText("Priority").Width(90).TextAlign(TextAlign.Right).Add();


        }).Height(400).Toolbar(toolbarItems).ToolbarClick("onToolbarClick").ChildMapping("Children").TreeColumnIndex(1).Render())
</div>
      <script>
          function onToolbarClick(args) {
              if (args.item.id === 'toolbarfilter') {
                  var treegrid = document.getElementById("ToolbarTemplate").ej2_instances[0];
                  treegrid.filterByColumn("TaskName", "startswith", "Testing");;
              }
          }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Toolbar Template in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample explains the way of rendering custom template element <code>Quick Filter</code> in a 
        toolbar and while click on the <code>Quick Filter</code> button the column "Task Name" is filtered with the value "Testing".</p>
    </div>
}

@section Description{
    <div id="description">
         <p>
        Custom toolbar items can be added by defining the toolbar as a collection of ItemModels. 
        Actions for this customized toolbar items are defined in the toolbarClick event.
    </p>  
    <p>
        In this sample, rendered the custom template element <code>Quick Filter</code> along with predefined 
        toolbar items ExpandAll and CollapseAll. 
        While click on the <code>Quick Filter</code> button the column "Task Name" is filtered with the value "Testing".
    </p>
    <p>
       More information on the Toolbar Template can be found in <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/tool-bar/tool-bar-items#custom-toolbar-items" aria-label="documentation section" >documentation<span class="sr-only">opens in a new tab</span></a> section.
    </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Toolbar Template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Toolbar Template in ASP.NET MVC Tree Grid Control</h1>
                }