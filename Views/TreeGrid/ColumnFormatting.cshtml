@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "ColumnFormatting";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">

            @Html.EJS().TreeGrid("TreeGrid").AllowPaging().Load("load").DataSource((IEnumerable<object>)ViewData["datasource"]).Columns(col =>
            {
                col.Field("orderID").HeaderText("Order ID").Width(110).TextAlign(TextAlign.Right).Add();
                col.Field("orderName").HeaderText("Order Name").Width(210).Add();
                col.Field("shippedDate").HeaderText("Shipped Date").TextAlign(TextAlign.Right).Width(190).Add();
                col.Field("price").HeaderText("Price").Format("yMd").TextAlign(TextAlign.Right).Width(120).Format("c2").Add();
            }).ChildMapping("subTasks").Height(350).TreeColumnIndex(1).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr style="height: 50px">
                <td class="left-side" style="width: 10% !important; padding-right: 10px">Column</td>
                <td>
                    @Html.EJS().DropDownList("Columns").DataSource((IEnumerable<object>)ViewData["columns"]).Index(0).Placeholder("Select a Column").PopupHeight("220px").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "name", Value = "id" }).Change("columnChange").Width("145px").Render()
                </td>
            </tr>
            <tr style="height: 50px">
                <td class="left-side" style="width: 10% !important; padding-right: 10px">Format</td>
                <td>
                    @Html.EJS().DropDownList("Formats").DataSource((IEnumerable<object>)ViewData["numberFormats"]).Index(2).Placeholder("Select a Format").PopupHeight("220px").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "format", Value = "id" }).Change("formatChange").Width("145px").Render()
                </td>
            </tr>
        </table>
    </div>


    <script>
        var priceFormat = @Html.Raw(Json.Encode(ViewData["numberFormats"]));
        var dateFormat = @Html.Raw(Json.Encode(ViewData["dateFormats"]));
        function columnChange(e) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var dropDownFormat = document.getElementById("Formats").ej2_instances[0];
            var columnName = e.value;
            var format = treegrid.getColumnByField( columnName ).format;
            format = typeof format === "string" ?  format : format.format;
            dropDownFormat.dataSource = columnName === "price" ? priceFormat : dateFormat;
            dropDownFormat.value = format;
        }
        function formatChange(e) {
            var formatval = e.value;
            var dropDownColumn = document.getElementById("Columns").ej2_instances[0];
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var columnName = dropDownColumn.value;
            treegrid.getColumnByField( columnName ).format = columnName === "price" ? formatval : { format: formatval, type: "date"};
            treegrid.refreshColumns();
        }

        function load() {
            var treegridObj = document.getElementById("TreeGrid").ej2_instances[0];
            for (i = 0; i < treegridObj.columns.length; i++) {
                if (treegridObj.columns[i].field == "shippedDate") {
                    treegridObj.columns[i].format = { type: 'date', format: 'M/d/yyyy' };
                }
            }
        }
    </script>


}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Column Formatting in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the way of displaying the content of Tree Grid columns based on the specified format. In this sample, format of columns can be changed dynamically through property panel.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Format is the process of customizing the particular column data/values based on specific culture. The Tree Grid uses <code>Internalization</code> library to format <code>number</code> and <code>date</code> values.
            The format can be specified by using <code>Format</code> property of <code>Columns</code>.
        </p>
        <p>
            In this demo, select the column and format from the property panel to format the corresponding column values..
        </p>
        <p>
             More information about Column Formatting can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/columns/columns-mvc#format" aria-label="documentation section" >documentation<span class="sr-only">opens in a new tab</span></a> section.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Column Formatting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Column Formatting in ASP.NET MVC Tree Grid Control</h1>
                }