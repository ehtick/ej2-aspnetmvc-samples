@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "InlineEditing";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-section">
            @{
                var dict = new Dictionary<string, object>();
                dict.Add("number", true);
                dict.Add("min", 0);
            }
            @(Html.EJS().TreeGrid("Editing")
            .DataSource((IEnumerable<object>)ViewData["datasource"])
            .EditSettings(edit =>
            {
                edit.AllowAdding(true);
                edit.AllowDeleting(true);
                edit.AllowEditing(true);
                edit.NewRowPosition(Syncfusion.EJ2.TreeGrid.RowPosition.Below);
            })
            .Toolbar(new List<string>() { "Add", "Delete", "Update", "Cancel", "Indent", "Outdent" })
            .Columns(col =>
            {
                col.Field("TaskId").HeaderText("Task ID").IsPrimaryKey(true).Width(90)
                    .ValidationRules(new { required = true, number = true })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").EditType("stringedit").Width(200)
                    .ValidationRules(new { required = true }).Add();
                col.Field("StartDate").HeaderText("Start Date").Width(130).Format("yMd")
                    .EditType("datepickeredit")
                    .ValidationRules(new { required = true, date = "M/d/yyyy" })
                    .Edit(new { @params = new { format = "M/d/yyyy" } })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("Duration").HeaderText("Duration").Width(140).EditType("numericedit")
                    .ValidationRules(dict)
                    .Edit(new { @params = new { format = "n" } })
                    .TextAlign(TextAlign.Right).Add();

            })
           .Height(400)
           .SelectedRowIndex(2)
           .ChildMapping("Children")
           .TreeColumnIndex(1).Render());
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div>Edit Mode</div>
                </td>
                <td style="width: 50%;padding-right: 10px;padding-left: 10px;">
                    @Html.EJS().DropDownList("EditMode").DataSource((IEnumerable<object>)ViewData["dropdata"]).Width("138").Value("Cell").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "text", Value = "value" }).Change("onChange").Render()
                </td>
            </tr>
        </table>
    </div>
    <script>
        function onChange(args) {
            var treegrid = document.getElementById("Editing").ej2_instances[0];
            treegrid.editSettings.mode = args.value;
            treegrid.toolbar = args.value == "Cell" ? ['Add', 'Delete', 'Update', 'Cancel', 'Indent', 'Outdent'] : ['Add', 'Edit', 'Delete', 'Update', 'Cancel', 'Indent', 'Outdent'];
            treegrid.refreshColumns();
        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Inline Editing in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates CRUD operations in Tree Grid. You can perform CRUD operations as follows,</p>
        <ul>
            <li><code>Add </code> - To add new record, click Add toolbar button.</li>
            <li><code>Edit</code> - To edit record, double click a row or click toolbar Edit button after selected a row.</li>
            <li><code>Delete</code> - To delete record, click toolbar Delete button after selected a row.</li>
            <li><code>Update, Cancel</code> - You can save or discard changes by click toolbar Update and Cancel button respectively.</li>
            <li><code>Indent</code> - Indents the record to one level of hierarchy.</li>
            <li><code>Outdent</code> - Outdent the record to one level of hierarchy.</li>
        </ul>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The Tree Grid supports CRUD operations. This CRUD operations can be configured in Tree Grid using <code>EditSettings</code>. Also, it has different modes to manipulate the datasource.
        </p>
        <p>The available modes are,</p>
        <ul>
            <li><code>Row </code></li>
            <li><code>Cell</code></li>
            <li><code>Dialog</code></li>
        </ul>
        <p>
            In this demo, Row mode is enabled for editing by default. You can start editing any row by double clicking on it or clicking on toolbar's Edit button, then the currently selected row will be changed to edited state. You can change the row values and save edited data to the datasource.

        </p>
        <p>
            More information on the Tree Grid Editing can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/editing/row-editing" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Inline Editing Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inline Editing in ASP.NET MVC Tree Grid Control</h1>
                }
