@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@{
    ViewData["Title"] = "VirtualScrolling";
}

<h2>VirtualScrolling</h2>

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().TreeGrid("DefaultFunctionalities").DataSource((IEnumerable<object>)ViewData["datasource"]).EditSettings(edit =>
            {
                edit.AllowAdding(true);
                edit.AllowDeleting(true);
                edit.AllowEditing(true);
                edit.Mode(Syncfusion.EJ2.TreeGrid.EditMode.Row);
                edit.NewRowPosition(Syncfusion.EJ2.TreeGrid.RowPosition.Child);
            }).Toolbar(new List<string>
            () { "Add", "Edit", "Delete", "Update", "Cancel", "Indent", "Outdent" }).Columns(col =>
            {
            col.Field("TaskID").HeaderText("Player Jersey").IsPrimaryKey(true).ValidationRules(new { required = true, number = true }).Width(120).TextAlign(TextAlign.Right).Add();
            col.Field("FIELD1").HeaderText("Player Name").ValidationRules(new { required = true }).Width(120).Add();
            col.Field("FIELD2").HeaderText("Year").Width(100).TextAlign(TextAlign.Right).Add();
            col.Field("FIELD3").HeaderText("Stint").Width(120).TextAlign(TextAlign.Right).Add();
            col.Field("FIELD4").HeaderText("TMID").Width(120).TextAlign(TextAlign.Right).Add();
            }).Height(400).ChildMapping("Children").TreeColumnIndex(1).EnableVirtualization(true).EnableVirtualMaskRow(true).Render()
    </div>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the Tree Grid component with the virtual scrolling feature. Scroll the Tree Grid content vertically to load rows.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The Tree Grid UI virtualization allows you to render only rows visible within the view-port without buffering the entire datasource.
            To enable the virtualization, set <code>
                    EnableVirtualization
            </code> property as true.
        </p>
        <p>
        By default, <code>enableVirtualMaskRow</code> is set to true. we can change by setting <code>enableVirtualMaskRow</code> property to false.
        </p>
        <p>
            Note: The <code>
                    Height
            </code> property must be defined when enabling <code>
                    EnableVirtualization
            </code>.
        </p>
        <p>
            In this demo, Tree Grid is enabled with row virtualization and also perform the CRUD (Add, Edit, Delete, Update) actions.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Tree Grid Virtual Scrolling Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Virtual Scrolling in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Virtual Scrolling in ASP.NET MVC Tree Grid Control</h1>
                }
