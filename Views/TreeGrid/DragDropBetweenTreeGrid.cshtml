@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "DefaultFunctionalities";
}

@*custom code end*@

@section ControlsSection{
      <div class="control-section">
      <div style="float: left; width: 49%;padding-bottom:10px;">
          @(Html.EJS().TreeGrid("TreeGrid")
              .AllowRowDragAndDrop(true)
              .RowDropSettings(new Syncfusion.EJ2.TreeGrid.TreeGridRowDropSettings() { TargetID = "DestTree" })
              .DataSource((IEnumerable<object>)ViewData["datasource"])
              .SelectionSettings(selection => selection.Type(Syncfusion.EJ2.Grids.SelectionType.Multiple))
              .AllowPaging().PageSettings(page => page.PageCount(2).PageSize(10))
              .Columns(col =>
              {
                  col.Field("TaskId").HeaderText("Task ID").IsPrimaryKey(true).Width(110).TextAlign(TextAlign.Right).Add();
                  col.Field("TaskName").HeaderText("Task Name").Width(210).Add();
                  col.Field("StartDate").HeaderText("Start Date").TextAlign(TextAlign.Right).Format("yMd").Width(200).Add();
              })
              .ChildMapping("Children").TreeColumnIndex(1).Render())
      </div>
      <div></div>
      <div style="float: right; width: 49%;padding-bottom:10px;">
          @(Html.EJS().TreeGrid("DestTree")
              .AllowRowDragAndDrop(true)
              .RowDropSettings(new Syncfusion.EJ2.TreeGrid.TreeGridRowDropSettings() { TargetID = "TreeGrid" })
              .SelectionSettings(selection => selection.Type(Syncfusion.EJ2.Grids.SelectionType.Multiple))
              .AllowPaging().PageSettings(page => page.PageCount(2).PageSize(10))
              .Columns(col =>
              {
                  col.Field("TaskId").HeaderText("Task ID").IsPrimaryKey(true).Width(110).TextAlign(TextAlign.Right).Add();
                  col.Field("TaskName").HeaderText("Task Name").Width(210).Add();
                  col.Field("StartDate").HeaderText("Start Date").TextAlign(TextAlign.Right).Format("yMd").Width(200).Add();
              })
              .ChildMapping("Children").TreeColumnIndex(1).Render())
      </div>
      <div></div>
  </div>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the TreeGrid component's row drag and drop feature, enabling users to transfer tasks between tree grids effortlessly via drag and drop actions.
        </p>

    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Row Drag and Drop between Tree Grid in ASP.NET MVC Tree Grid control. Explore here for more details." />
}

@section Description{
    <div id="description">

        <p>
            Enabling the <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.TreeGrid.TreeGrid.html#Syncfusion_EJ2_TreeGrid_TreeGrid_AllowRowDragAndDrop">
                    allowRowDragAndDrop
                <span class="sr-only">opens in a new tab</span></a>
            </code> property facilitates drag and drop functionality for Tree Grid rows. Additionally, when performing row drag and drop between tree grids,
            the <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.TreeGrid.TreeGridRowDropSettings.html">
                    TreeGridRowDropSettings
                <span class="sr-only">opens in a new tab</span></a>
            </code> component's <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.TreeGrid.TreeGridRowDropSettings.html#Syncfusion_EJ2_TreeGrid_TreeGridRowDropSettings_TargetID">
                    targetID
                <span class="sr-only">opens in a new tab</span></a>
            </code> property specifies the target onto which the Tree Grid rows should be dropped.
        </p>

        <p>
            For the row drag and drop feature to function correctly, it's essential to have a primary key column. To define this primary key, ensure that <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.TreeGrid.TreeGridColumn.html#Syncfusion_EJ2_TreeGrid_TreeGridColumn_IsPrimaryKey">
                    isPrimaryKey
                <span class="sr-only">opens in a new tab</span></a>
            </code> is set to <code>true</code> for a unique data column.
        </p>
        <p>
            To select the rows, enable the <code>
                <a target="_blank" class="code"
                   href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/selection/selection">
                    Selection
                <span class="sr-only">opens in a new tab</span></a>
            </code>feature. Selecting multiple rows within the Tree Grid is as simple as clicking and dragging them.
        </p>

        <p>The Row drag and drop feature is enabled in both TreeGrids in this demo. Drag and drop rows between TreeGrids by selecting the rows and dragging them to the adjacent TreeGrid.</p>
        <p>
            More information on the row drag and drop can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/row/row-drag-and-drop#drag-and-drop-to-another-tree-grid">
                documentation
            <span class="sr-only">opens in a new tab</span></a>section.
        </p>
    </div>
}


@section Title{
    <title>ASP.NET MVC Tree Grid Row Drag and Drop Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Row Drag and Drop in ASP.NET MVC Tree Grid Control</h1>
}
