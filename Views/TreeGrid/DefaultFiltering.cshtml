@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "Filtering";
}

@*custom code end*@

@section ControlsSection{

    <div class="col-lg-9 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                @(Html.EJS().TreeGrid("Filtering")
                    .DataSource((IEnumerable<object>)ViewData["datasource"])
                    .AllowFiltering()
                    .AllowPaging()
                    .PageSettings(page => page.PageSize(10))
                    .FilterSettings(filter =>
                    {
                        filter.Type(Syncfusion.EJ2.TreeGrid.FilterType.FilterBar);
                        filter.HierarchyMode(Syncfusion.EJ2.TreeGrid.FilterHierarchyMode.Parent);
                        filter.Mode(FilterBarMode.Immediate);
                    })
                    .Columns(col =>
                    {
                        col.Field("TaskId").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
                        col.Field("TaskName").HeaderText("Task Name").Width(180).Add();
                        col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                        col.Field("Duration").HeaderText("Duration").Width(90)
                         .FilterBarTemplate(new
                         {
                             create = "create",
                             write = "write",
                         })
                         .TextAlign(TextAlign.Right).Add();

                    })
                   .ChildMapping("Children")
                   .Height(350)
                   .TreeColumnIndex(1)
                   .Render()
                )
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td class="left-side">Hierarchy Mode</td>
                <td>
                    @Html.EJS().DropDownList("FilterMode").DataSource((IEnumerable<object>)ViewData["dropdata"]).Value("Parent").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "mode" }).Change("onChange").Width("115px").Render()
                </td>
            </tr>
        </table>
    </div>

    <script>
        function create(args) {
            var dd = document.createElement("input");
            dd.id = "Duration";
            return dd;
        }
        function write(args) {
            var dataSource = ['All', '1', '3', '4', '5', '6', '8', '9', '11', '12'];
            var dd = new ej.dropdowns.DropDownList({
                dataSource: dataSource,
                value: 'All',
                change: function (e) {
                    var valuenum = +e.value;
                    var id = this.element.id;
                    let value = e.value;
                    var treegrid = document.getElementById("Filtering").ej2_instances[0];
                    if (value !== 'All') {
                        treegrid.filterByColumn(id, 'equal', valuenum);
                    } else {
                        treegrid.removeFilteredColsByField(id);
                    }
                }
            });
            dd.appendTo("#Duration");
        }
        function onChange(e) {
            var mode = e.value;
            var treegrid = document.getElementById("Filtering").ej2_instances[0];
            treegrid.filterSettings.hierarchyMode = mode;
            treegrid.clearFiltering();
            var dropDownFilter = document.getElementById("Duration").ej2_instances[0];
            dropDownFilter.value = 'All';
        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Filtering in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the default and template support of filterbar in Tree Grid. In this sample, type the value in the filterbar and press enter to filter particular column or select a value from filterbar template of Duration column. The filtering is based on hierarchy mode..</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
            by setting <code>
                AllowFiltering
            </code> property as true. A filter bar row will be rendered next to header which allows the end-users to filter
            data by entering text within its cells.
        </p>
        <p>Filterbar uses two modes which specifies how to start filtering. They are,</p>
        <ul>
            <li><code>OnEnter</code> - Enabled by default, filter will be initiated after pressing <code>Enter</code> key.</li>
            <li>
                <code>Immediate</code> - Filter will start after user ends typing. This uses a time delay of <i>1500ms</i> to initiate
                filter after use stops typing. It can be overridden using the <code>
                    FilterSettings->ImmediateModeDelay
                </code> property.
            </li>
        </ul>
        <p>Tree Grid provides support for a set of filtering modes with <code>HierarchyMode</code> property. The below are the type of filter mode available in Tree Grid. </p>
        <ul>
            <li>
                <code>Parent</code> - This is the default filter hierarchy mode in Tree Grid.
                The filtered records are displayed with its parent records, if the filtered records not have any parent record then the filtered record only displayed.
            </li>
            <li><code>Child</code> - The filtered records are displayed with its child record, if the filtered records do not have any child record then only the filtered records are displayed.</li>
            <li>
                <code>Both</code> - The filtered records are displayed with its both parent and child record.
                If the filtered records do not have any parent and child record then only the filtered records are displayed.
            </li>
            <li><code>None</code> - Only the filtered records are displayed.</li>
        </ul>
        <p>In this demo, you can type the value in the filterbar and press enter to filter particular column or select the value from filterbar template of Duration column.</p>
        <p>
            More information on the filter configuration can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/filtering/filtering" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Default Filtering Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Filtering in ASP.NET MVC Tree Grid Control</h1>
                }