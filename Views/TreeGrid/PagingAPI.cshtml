@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "TreeGrid";
}

@*custom code end*@

@section ControlsSection{
     <div class="col-lg-9 control-section">
        <div class="control-section">
            @(Html.EJS().TreeGrid("TreeGrid")
            .DataSource((IEnumerable<object>)ViewData["datasource"])
            .Columns(col =>
            {
                col.Field("TaskId").HeaderText("Task ID").Width(80).TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").Width(200).Add();
                col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(100).Add();
                col.Field("Duration").HeaderText("Duration").Width(90).TextAlign(TextAlign.Right).Add();
                col.Field("Progress").HeaderText("Progress").Width(90).TextAlign(TextAlign.Right).Add();
            })
            .PageSettings(p=>p.PageSizes(true).PageSize(10).PageCount(2))
            .AllowPaging()
            .ChildMapping("Children")
            .TreeColumnIndex(1)
            .Height(350)
			.ActionComplete("onComplete")
            .Render())
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr>
                <td style="width: 50%">
                    <div>Allow Paging</div>
                </td>
                <td style="width: 50%;padding-right: 10px;">
                    <div>
                        @Html.EJS().CheckBox("paging").Change("paging").Checked(true).Render()
                    </div>
                </td>
            </tr>
            <tr class='con-prop1'>
                <td style="width: 50%">
                    <div style="padding-top: 7px;">
                        Page Size Mode
                    </div>
                </td>
                <td style="width: 50%;  padding:10px 10px 10px 0px;">
                    <div id='dropdown'>
                        @Html.EJS().DropDownList("sizemode").DataSource((IEnumerable<object>)ViewData["dropdata"]).Value("All").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "mode", Value = "id" }).Change("sizeModeChange").Width("110px").Render()
                    </div>
                </td>
            </tr>
            <tr class='con-prop2'>
                <td style="width: 50%">
                    <div style="padding-top: 7px;">
                        Page Size
                    </div>
                </td>
                <td style="width: 50%;  padding:10px 10px 10px 0px">
                    <div id='numericbox'>
                        @Html.EJS().NumericTextBox("pagesize").Width("110px").Format("##").Value(10).Max(36).Min(1).Change("pageSizeChange").Render()
                    </div>
                </td>
            </tr>
            <tr class='con-prop2'>
                <td style="width: 50%">
                    <div style="padding-top: 7px">
                        Page Count
                    </div>
                </td>
                <td style="width: 50%; padding:10px 10px 10px 0px">
                    <div>
                        @Html.EJS().NumericTextBox("pagecount").Width("110px").Format("##").Value(2).Max(4).Min(1).Change("pageCountChange").Render()
                    </div>
                </td>
            </tr>
            <tr class='con-prop2'>
                <td style="width: 50%">
                    <div style="padding-top: 7px">
                        Current Page
                    </div>
                </td>
                <td style="width: 50%; padding:10px 10px 10px 0px">
                    <div>
                        @Html.EJS().NumericTextBox("currentpage").Width("110px").Format("##").Value(1).Max(4).Min(1).Change("currentPageChange").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        function onComplete(args) {
            var currentPage = document.getElementById("currentpage").ej2_instances[0];
            if (args.requestType === 'paging')
                currentPage.value = parseInt(args.currentPage, 10);
        }
        function pageSizeChange(args) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var currentPage = document.getElementById("currentpage").ej2_instances[0];
            this.value = this.value > treegrid.pageSettings.totalRecordsCount ?
                treegrid.pageSettings.totalRecordsCount : this.value;
            treegrid.pageSettings.pageSize = this.value;
            currentPage.max = Math.ceil(treegrid.pageSettings.totalRecordsCount / treegrid.pageSettings.pageSize);
        }

        function sizeModeChange(e) {
            var type = e.value;
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            var pageSize = document.getElementById("pagesize").ej2_instances[0];
            if (type === 'Root') {
                treegrid.pageSettings = { pageSizeMode: 'Root', pageSize: 2 };
            } else {
                treegrid.pageSettings = { pageSizeMode: 'All', pageSize: pageSize.value };
            }
            toggleInputs(type === 'All');
        }

        function pageCountChange(e) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            this.value = this.value > 8 ? 8 : this.value;
            treegrid.pageSettings.pageCount = this.value;
        }

        function currentPageChange() {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            this.value = this.value > this.max ? this.max : this.value;
            var pageNumber = this.value;
            treegrid.goToPage(pageNumber);
        }

        function paging(args) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            treegrid.allowPaging = args.checked;
            toggleInputs(treegrid.allowPaging, true);
        };

        function toggleInputs(state, isPager) {
            if (!ej.base.isNullOrUndefined(isPager)) {
                (document.getElementsByClassName('con-prop1')[0]).style.display = state ? 'table-row' : 'none';
            }
            var flag = sizemode.value === 'All';
            var elem = document.getElementsByClassName('con-prop2');
            for (var i = 0; i < elem.length; i++) {
                (elem[i]).style.display = state && flag ? 'table-row' : 'none';
            }
        }
    </script>

}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Paging API in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the usage of paging API in Tree Grid. In this sample, use the properties panel to change the page size mode, page size, page count and current page of the Tree Grid.</p>
    </div>
}

@section Description{
    <div id="description">

        <p>
            Paging allows you to display the contents of the Tree Grid in page segments. The number of items on a page is determined by
            the <code>PageSettings->PageSize</code> property. If no value is specified for the <code>PageSettings->PageSize</code> property, the Tree Grid will display 12 items on a page. By default, paging is disabled. To enable paging,
            set <code>AllowPaging</code> property to true.
        </p>
        <p>In this demo,</p>
        <ul>
            <li>Click the <strong>Allow Paging</strong> check box to enable/disable paging feature.</li>
            <li>Change the value of <strong>Page Size Mode</strong> Dropdown to change <code>PageSettings->PageSizeMode.</code></li>
            <li>Change the value of <strong>Page Size</strong> textbox to change <code>PageSettings->PageSize.</code></li>
            <li>Change the value of <strong>Page Count</strong> textbox to change <code>PageSettings->PageCount.</code></li>
            <li>
                Change the value of <strong>Current Page</strong> textbox to change
                <code> PageSettings->CurrentPage.</code>
            </li>
        </ul>

        <p>
            More information on the paging configuration can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/paging" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Paging API Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Paging API in ASP.NET MVC Tree Grid Control</h1>
                }
