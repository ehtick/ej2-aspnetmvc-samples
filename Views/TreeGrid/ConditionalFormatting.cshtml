@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "ConditionalFormatting";
}

@*custom code end*@

@section ControlsSection{
    <div class="control-section" role="region" aria-label="Tree Grid Control section">
        @(Html.EJS().TreeGrid("ConditionalFormatting")
            .DataSource((IEnumerable<object>)ViewData["datasource"])
            .Columns(col =>
            {
                col.Field("TaskId").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").Width(180).Add();
                col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                col.Field("EndDate").HeaderText("End Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                col.Field("Duration").HeaderText("Duration").Width(90).TextAlign(TextAlign.Right).Add();
                col.Field("Progress").HeaderText("Progress").Width(90).TextAlign(TextAlign.Right).Add();
                col.Field("Priority").HeaderText("Priority").Width(90).Add();

            }).AllowPaging()
            .ChildMapping("Children")
            .Height(350)
            .PageSettings(page=>page.PageSize(10))
            .QueryCellInfo("queryCellInfo")
            .TreeColumnIndex(1).Render()
        )
    </div>
    <script>
          function queryCellInfo(args) {
            if (args.cell.innerHTML === 'High') {
                var x = document.createElement('IMG');
                x.setAttribute('src', '@Url.Content("~/Content/images/treegrid/high.png")');
                x.setAttribute('alt', 'High');
                x.setAttribute('height', '15px');
                var span = document.createElement('span');
                span.innerHTML = args.cell.innerHTML;
                span.setAttribute('style', 'padding-left:7px;');
                args.cell.innerHTML = '';
                args.cell.appendChild(x);
                args.cell.appendChild(span);
            } else if (args.cell.innerHTML === 'Critical') {
                var y = document.createElement('IMG');
                y.setAttribute('src', '@Url.Content("~/Content/images/treegrid/critical.png")');
                y.setAttribute('alt', 'Critical');
                y.setAttribute('height', '15px');
                var span = document.createElement('span');
                span.innerHTML = args.cell.innerHTML;
                span.setAttribute('style', 'padding-left:7px;');
                args.cell.innerHTML = '';
                args.cell.appendChild(y);
                args.cell.appendChild(span);
            } else if (args.cell.innerHTML === 'Low') {
                var z = document.createElement('IMG');
                z.setAttribute('src', '@Url.Content("~/Content/images/treegrid/low.png")');
                z.setAttribute('alt', 'Low');
                z.setAttribute('height', '15px');
                var span = document.createElement('span');
                span.innerHTML = args.cell.innerHTML;
                span.setAttribute('style', 'padding-left:7px;');
                args.cell.innerHTML = '';
                args.cell.appendChild(z);
                args.cell.appendChild(span);
            } else if (args.cell.innerHTML === 'Normal') {
                var a = document.createElement('IMG');
                a.setAttribute('src', '@Url.Content("~/Content/images/treegrid/normal.png")');
                a.setAttribute('alt', 'Normal');
                a.setAttribute('height', '15px');
                var span = document.createElement('span');
                span.innerHTML = args.cell.innerHTML;
                span.setAttribute('style', 'padding-left:7px;');
                args.cell.innerHTML = '';
                args.cell.appendChild(a);
                args.cell.appendChild(span);
            } else if (+args.cell.innerHTML > 90 && +args.cell.innerHTML <= 100 && args.column.field === 'Progress') {
                args.cell.setAttribute('style', 'background-color:#336c12;color:white;');
            } else if (+args.cell.innerHTML > 20 && args.column.field === 'Progress') {
                args.cell.setAttribute('style', 'background-color:#7b2b1d;color:white;');
            }
        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Conditional Formatting in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This samples demonstrates the way of customizing the cells by adding icons for Priority column and highlight the cells of Progress column based on certain condition using <code>QueryCellInfo</code> event.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The appearance of cells can be customized by using the <code>QueryCellInfo</code> event. The <code>QueryCellInfo</code> event triggers for every cell. In that event handler, you can get <code>QueryCellInfoEventArgs</code>
            that contains the details of the cell.
        </p>
        <p>
            In this demo, we have customized the column values by adding icons for Priority column and highlighted the Progress column based on certain condition using <code>QueryCellInfo</code> event.
        </p>
    </div>

}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Conditional Formatting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Conditional Formatting in ASP.NET MVC Tree Grid Control</h1>
                }