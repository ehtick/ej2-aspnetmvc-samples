@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "Filtering";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                @(Html.EJS().TreeGrid("Filtering")
                            .DataSource((IEnumerable<object>)ViewData["datasource"])
                            .AllowFiltering()
                            .AllowPaging()
                            .FilterSettings(f => f.Type(Syncfusion.EJ2.TreeGrid.FilterType.Menu))
                            .PageSettings(page => page.PageSize(10))
                            .Columns(col =>
                            {
                                col.Field("TaskId").HeaderText("Task ID").Width(90).TextAlign(TextAlign.Right).Add();
                                col.Field("TaskName").HeaderText("Task Name").Width(180).Add();
                                col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(120).Add();
                                col.Field("Duration").HeaderText("Duration").Width(90).TextAlign(TextAlign.Right).Add();
                            })
                           .ChildMapping("Children")
                           .Height(350)
                           .TreeColumnIndex(1)
                           .Render()
                )
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr style="height: 50px">
                <td style="width: 50%">Filter Type</td>
                <td style="width: 50%;padding-right: 10px">
                    @Html.EJS().DropDownList("FilterType").Width("100px").DataSource((IEnumerable<object>)ViewData["typedropdata"]).Value("Menu").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "type" }).Change("Change").Render()
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">Hierarchy Mode</td>
                <td style="width: 50%;padding-right: 10px">
                    @Html.EJS().DropDownList("FilterMode").Width("100px").DataSource((IEnumerable<object>)ViewData["dropdata"]).Value("Parent").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "mode" }).Change("onChange").Render()
                </td>
            </tr>
        </table>
    </div>

    <script>
        function onChange(e) {
            var mode = e.value;
            var treegrid = document.getElementById("Filtering").ej2_instances[0];
            treegrid.filterSettings.hierarchyMode = mode;
            treegrid.clearFiltering();
        }
        function Change(e) {
            var type = e.value;
            var treegrid = document.getElementById("Filtering").ej2_instances[0];
            treegrid.filterSettings.type = type;
        }
    </script>
}
@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Menu Filter in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the way of filtering Tree Grid columns using menu filter type UI. In this sample, click the filtering icon from column header to show filter UI for a particular column. You can also change the hierarchy mode of filtering from the properties panel.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
            by setting <code>
                AllowFiltering
            </code> property as true.
        </p>
        <p>Tree Grid supports the following filter types. They are</p>
        <ul>
            <li><code>FilterBar</code></li>
            <li><code>Menu</code></li>
            <li><code>Excel</code></li>
        </ul>
        you can change the filter type by setting <code>FilterSettings->Type</code>
        <p>Tree Grid provides support for a set of filtering modes with <code>HierarchyMode</code> property. The below are the type of filter mode available in Tree Grid. </p>
        <ul>
            <li>
                <code>Parent</code> - This is the default filter hierarchy mode in Tree Grid.
                The filtered records are displayed with its parent records, if the filtered records not have any parent record then the filtered record only displayed.
            </li>
            <li><code>Child</code> - The filtered records are displayed with its child record, if the filtered records do not have any child record then only the filtered records are displayed.</li>
            <li>
                <code>Both</code> - The filtered records are displayed with its both parent and child record.
                If the filtered records do not have any parent and child record then only the filtered records are displayed.
            </li>
            <li><code>None</code> - Only the filtered records are displayed.</li>
        </ul>
        <p>The Tree Grid now supports improved <code>in</code> and <code>not in</code> filter operators, allowing users to filter multiple values within the same column. When the menu filter is enabled, a Syncfusion DropDownList component with checkboxes appears to select the <code>in</code> or <code>not in</code> operators.</p>
        <p> In this demo, filter menu enabled by default, you can switch to other hierarchy mode of filtering by using dropdown.</p>
        <p>
            More information filter configuration can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/filtering/filter-menu" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>

    </div>

}
@*custom code end*@

@section Title{
                    <title>ASP.NET MVC Tree Grid Menu Filter Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Menu Filter in ASP.NET MVC Tree Grid Control</h1>
                }
