@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids
@{
    ViewData["Title"] = "DefaultScrolling";
}

<h2>DefaultScrolling</h2>

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().TreeGrid("DefaultScrolling").DataSource((IEnumerable<object>)ViewData["datasource"]).Columns(col =>
    {
        col.Field("TaskId").HeaderText("Task ID").Width(70).TextAlign(TextAlign.Right).Add();
        col.Field("TaskName").HeaderText("Task Name").Width(200).Add();
        col.Field("StartDate").HeaderText("Start Date").Width(90).TextAlign(TextAlign.Right).Format("yMd").Add();
        col.Field("EndDate").HeaderText("End Date").Width(90).TextAlign(TextAlign.Right).Format("yMd").Add();
        col.Field("Duration").HeaderText("Duration").Width(80).TextAlign(TextAlign.Right).Add();
        col.Field("Progress").HeaderText("Progress").Width(80).TextAlign(TextAlign.Right).Add();
        col.Field("Priority").HeaderText("Priority").Width(90).Add();
    }).Height(400).ChildMapping("Children").TreeColumnIndex(1).Render()
    </div>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the Tree Grid component with the horizontal and vertical scrollbars to view the exceeded Tree Grid content.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Tree Grid will show scrollbars when the content exceeds the element's width or height. 
            The vertical and horizontal scrollbars will be displayed based on the following criteria.
        </p>
        <ul>
            <li>The vertical scrollbar appears when the total height of rows in the Tree Grid exceeds its element's height.</li>
            <li>The horizontal scrollbar appears when the sum of the column's width exceeds the Tree Grid element's width.</li>
        </ul>
        <p>
            The <code>
                    Height
            </code> and <code>
                    Width
            </code> properties are used to set the Tree Grid height and width, respectively. The value of these properties can be a numeric, pixel(<code>px</code>) or percentage (<code>%</code>).
        </p>

        <p>
            In this demo, the <code>
                    Height
            </code> and <code>
                    Width
            </code> properties of the Tree Grid are set to <strong><em>400</em></strong> and <strong><em>auto</em></strong>,
        respectively. Now, the Tree Grid will render with a vertical scrollbar when the total height of rows
        exceeds its element height and horizontal scrollbar will appear when the
        total column width exceeds the element's width.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Tree Grid Default Scrolling Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Default Scrolling in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Scrolling in ASP.NET MVC Tree Grid Control</h1>
                }