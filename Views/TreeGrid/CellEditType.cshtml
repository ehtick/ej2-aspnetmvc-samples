@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "CellEditType";
}

@*custom code end*@

@section ControlsSection{
    <div class="control-section">
    
            @{
                var dict = new Dictionary<string, object>();
                dict.Add("number", true);
                dict.Add("min", 0);
            }
            @(Html.EJS().TreeGrid("CellEditType")
            .DataSource((IEnumerable<object>)ViewData["datasource"])
            .EditSettings(edit =>
            {
                edit.AllowAdding(true);
                edit.AllowDeleting(true);
                edit.AllowEditing(true);
                edit.Mode(Syncfusion.EJ2.TreeGrid.EditMode.Row);
                edit.NewRowPosition(Syncfusion.EJ2.TreeGrid.RowPosition.Above);
            })
            .Load("onLoad")
            .Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })
            .Columns(col =>
            {
                col.Field("TaskId").HeaderText("Task ID").IsPrimaryKey(true).Width(70)
                    .ValidationRules(new { required = true, number = true })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("TaskName").HeaderText("Task Name").EditType("stringedit").Width(220)
                    .ValidationRules(new { required = true }).Add();
                col.Field("StartDate").HeaderText("Start Date").Width(180)
                    .EditType("datepickeredit")
                    .ValidationRules(new { required = true, date = "M/d/y hh:mm a" })
                    .Edit(new { @params = new { format = "M/d/y hh:mm a" } })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("Approved").HeaderText("Approved").DisplayAsCheckBox(true).TextAlign(TextAlign.Center).Type("boolean").EditType("booleanedit").Width(90).Add();
                col.Field("Progress").HeaderText("Progress").Width(120).EditType("numericedit")
                    .ValidationRules(dict)
                    .Edit(new { @params = new { format = "n" } })
                    .TextAlign(TextAlign.Right).Add();
                col.Field("Priority").HeaderText("Priority").EditType("dropdownedit").Width(150).Add();

            })
           .Height(400)
           .ChildMapping("Children")
           .TreeColumnIndex(1).Render())
        </div>
        <script>
            function onLoad() {
                var treegridObj = document.getElementById("CellEditType").ej2_instances[0];
                for (i = 0; i < treegridObj.columns.length; i++) {
                    if (treegridObj.columns[i].field == "StartDate") {
                        treegridObj.columns[i].format = { type: 'dateTime', format: 'M/d/y hh:mm a' };
                    }
                }
            }
        </script>

}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Cell Edit Type in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
   <div id="action-description">
        <p>
            This sample demonstrates the supported cell edit types of Tree Grid columns. The list of cell edit types are as follows,
        </p>
        <ul>
            <li><code>NumericTextBox</code> component for integers, double, and decimal data types.</li>
            <li><code>TextBox</code> component for string data type.</li>
            <li><code>DropDownList</code> component for list data type.</li>
            <li><code>DatePicker</code> component for date data type.</li>
            <li><code>DateTimePicker</code> component for dateTime data type.</li>
            <li><code>Checkbox</code> component for boolean data type</li>
        </ul>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The <code>Columns.EditType</code>  is used to customize the edit type of the particular column. You can set the <code>Columns.EditType</code> based on data type of the column.
        </p>
        <p>
            In this sample, we show the following editTypes for the Tree Grid columns
        </p>
        <ul>
            <li><code>NumericTextBox</code></li>
            <li><code>TextBox</code></li>
            <li><code>DropDownList</code></li>
            <li><code>DateTimePicker</code></li>
            <li><code>Checkbox</code></li>
        </ul>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Cell Edit Type Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Cell Edit Type in ASP.NET MVC Tree Grid Control</h1>
                }
