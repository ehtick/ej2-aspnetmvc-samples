@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "Reorder";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div class="control-section">
                @(Html.EJS().TreeGrid("Reorder").AllowReordering()
                    .DataSource((IEnumerable<object>)ViewData["datasource"])
                    .AllowPaging()
                    .PageSettings(p=>p.PageSize(10))
                    .Columns(col =>
                    {
                        col.Field("TaskId").HeaderText("Task ID").Width(80).TextAlign(TextAlign.Right).Add();
                        col.Field("TaskName").HeaderText("Task Name").Width(200).Add();
                        col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(105).Add();
                        col.Field("Duration").HeaderText("Duration").Width(80).TextAlign(TextAlign.Right).Add();
                        col.Field("Progress").HeaderText("Progress").Width(80).TextAlign(TextAlign.Right).Add();
                    })
                    .ActionComplete("onComplete")
                    .ChildMapping("Children")
                    .Height(350)
                    .TreeColumnIndex(1).Render()
                );
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div style="padding-top: 10px">Column</div>
                </td>
                <td style="width: 70%;padding-right: 3px">
                    <div>
                     @Html.EJS().DropDownList("columns").DataSource((IEnumerable<object>)ViewData["columns"]).Value("TaskId").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "text", Value = "value" }).Change("onColumnChange").Width("125px").Render()
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div>Column Index</div>
                </td>
                <td style="width: 50%;padding: 10px 3px 10px 0px">
                    <div>
                     @Html.EJS().DropDownList("columnIndex").DataSource((IEnumerable<object>)ViewData["index"]).Index(0).Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "text", Value = "value" }).Change("indexChange").Width("125px").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        function onComplete(args) {
            if (args.requestType === 'reorder') {
                var dropDownColumn = document.getElementById("columns").ej2_instances[0];
                var columnName = dropDownColumn.value;
                var index = this.getColumnIndexByField(columnName);
                var dropdown = document.getElementById("columnIndex").ej2_instances[0];
                dropdown.value = index.toString();
            }
        }
        function onColumnChange(e) {
            var columnName = e.value;
            var treegrid = document.getElementById("Reorder").ej2_instances[0];
            var index = treegrid.getColumnIndexByField(columnName);
            var dropdown = document.getElementById("columnIndex").ej2_instances[0];
            dropdown.value = index.toString();
        }
        function indexChange(e) {
            var dropdown = document.getElementById("columns").ej2_instances[0];
            var treegrid = document.getElementById("Reorder").ej2_instances[0];
            var columnName = dropdown.value;
            var toColumnIndex = e.value;
            treegrid.reorderColumns(columnName, treegrid.columns[toColumnIndex].field);
        }
    </script>

}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Column Reorder in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates reordering feature of the Tree Grid columns. Select column name and index from properties panel to reorder the columns. You can also reorder columns by simply drag and drop in the desired column position.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Reordering can be enabled by setting <code>AllowReordering</code> property as true. <code>Reordering</code> can be done by drag and drop the column header from one index to another index within the Tree Grid..
        </p>
        <p>The location in which the column to be placed, will be indicated by two arrows symbols.</p>
        <p>In this demo, you can either reorder columns by drag and drop or by selecting column name and column index from the dropdown to reorder the columns</p>
        <p>More information about Column Reorder can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/columns/column-reorder" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.</p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Column Reorder Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Column Reorder in ASP.NET MVC Tree Grid Control</h1>
                }