@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-wrapper">
           <div class="control-section">
                @Html.EJS().TreeGrid("TreeGrid").AllowSorting().DataSource(dataManger =>
                {
                dataManger.Url("https://ej2services.syncfusion.com/production/web-services/api/SelfReferenceData")
                .Adaptor("WebApiAdaptor")
                .CrossDomain(true);
                }).Columns(col =>
                {
                    col.Field("TaskID").HeaderText("Task ID").Width(120).TextAlign(TextAlign.Right).Add();
                    col.Field("TaskName").HeaderText("Task Name").Width(230).Add();
                    col.Field("StartDate").HeaderText("Start Date").Format("yMd").TextAlign(TextAlign.Right).Width(140).Add();
                    col.Field("Duration").HeaderText("Duration").Width(130).TextAlign(TextAlign.Right).Add();
                    col.Field("Progress").HeaderText("Progress").Width(130).Add();
                }).Height(400).AllowPaging().IdMapping("TaskID").ParentIdMapping("ParentItem").HasChildMapping("isParent").TreeColumnIndex(1).PageSettings(page=>page.PageCount(3)).LoadingIndicator(l => { l.IndicatorType(Syncfusion.EJ2.Grids.IndicatorType.Shimmer); }).Render()
           </div>
        </div>
    </div>

<div class="col-lg-2 property-section">
    <table id="property" title="Properties" style="width: 100%">
        <tr style="height: 50px">
            <td style="width: 30%">
                <div>Indicator Type</div>
            </td>
            <td style="width: 50%;padding-right: 10px;padding-left: 10px;">
                @Html.EJS().DropDownList("Dropdown").DataSource((IEnumerable<object>)ViewData["data"]).Value("Shimmer").Change("onChange").Width("118").Render()
            </td>
        </tr>
    </table>
</div>

<script>
    function onChange() {
        var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
        var dropdown = document.getElementById("Dropdown").ej2_instances[0];
        if (dropdown.value === 'Shimmer') {
            treegrid.loadingIndicator.indicatorType = 'Shimmer';
        } else {
            treegrid.loadingIndicator.indicatorType = 'Spinner';
        }
        treegrid.refresh();
    }
</script>
}
@section ActionDescription{
    <div id="action-description">
        This sample shows the loading indicator for the tree grid actions especially when using remote data. In this sample, you can change the loading indicators from the properties panel.
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Loading Animation in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
     <p>
       The Tree Grid has an option to show a loading indicator in-between the time of fetching the data and binding it to the tree grid during initial rendering or refreshing or after performing any tree grid action like sorting, filtering, and more.
    </p>
    <p>The Tree Grid supports the following loading indicator types. They are: </p>
        <ul>
            <li><code>Spinner</code></li>
            <li><code>Shimmer</code></li>
        </ul>
    <p>Use the loading indicator by setting the <code>LoadingIndicator.IndicatorType</code> property as <code>Spinner</code> or <code>Shimmer</code>. The default value of the IndicatorType is <code>Spinner</code>. In this demo, the <code>Shimmer</code> type is initially enabled.
    </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Tree Grid Loading Animation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Loading Animation in ASP.NET MVC Tree Grid Control</h1>
                }
