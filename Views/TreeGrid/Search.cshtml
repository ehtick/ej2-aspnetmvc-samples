@using Syncfusion.EJ2
@using Syncfusion.EJ2.Grids

@*custom code start*@

@{
    ViewData["Title"] = "Searching";
}

@*custom code end*@

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                @(Html.EJS().TreeGrid("Searching")
                    .DataSource((IEnumerable<object>)ViewData["datasource"])
                    .AllowPaging()
                    .Toolbar(new List<string> { "Search" })
                    .Columns(col =>
                    {
                        col.Field("TaskId").HeaderText("Task ID").Width(80).TextAlign(TextAlign.Right).Add();
                        col.Field("TaskName").HeaderText("Task Name").Width(200).Add();
                        col.Field("Duration").HeaderText("Duration").TextAlign(TextAlign.Right).Width(90).Add();
                        col.Field("Priority").HeaderText("Priority").TextAlign(TextAlign.Left).Width(100).Add();
                        col.Field("Progress").HeaderText("Progress").TextAlign(TextAlign.Right).Width(90).Add();
                    })
                   .ChildMapping("Children")
                   .TreeColumnIndex(1)
                   .Height(350)
                   .Render()
                )
            </div>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td class="left-side">Hierarchy Mode</td>
                <td>
                    @Html.EJS().DropDownList("SearchMode").DataSource((IEnumerable<object>)ViewData["dropdata"]).Value("Parent").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "mode" }).Width("115px").Change("onChange").Render()
                </td>
            </tr>
        </table>
    </div>

    <script>
        function onChange(e) {
            var mode = e.value;
            var treegrid = document.getElementById("Searching").ej2_instances[0];
            treegrid.search('');
            treegrid.searchSettings.hierarchyMode = mode;

        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Search in ASP.NET MVC Tree Grid control. Explore here for more details."/>
                }


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the default and template support of filterbar in Tree Grid. In this sample, type the value in the filterbar and press enter to filter particular column or select the date value from filterbar template of Start Date column. The filtering is based on hierarchy mode..</p>
    </div>
}

@section Description{
    <div id="description">
        <p>The Tree Grid has an option to search its content using the search method with search key as the parameter.</p>

        <p>The tree grid supports different types of search mode through the <code>SearchSettings => HierarchyMode</code> property.</p>

        <p>The following are the types of search modes available in the tree grid.</p>

        <ul>
            <li>
                <code>Parent</code> - This is the default search hierarchy mode in the tree grid. It displays a searched record with its parent records.
                If the searched records do not have any parent record, it displays only the searched record.
            </li>

            <li>
                <code>Child</code> - Displays the searched record with its child record.
                If the searched records do not have any child record, it displays only the searched record.
            </li>

            <li>
                <code>Both</code> - Displays the searched record with both its parent and child records.
                If the searched records do not have any parent and child records, it displays only the searched record.
            </li>

            <li><code>None</code> - Displays only the searched record.</li>
        </ul>

        <p>
            In this demo, The Tree Grid toolbar provides an option to search the Tree Grid records. The user can type the text box in the toolbar and click search button or press Enter key to perform search operation.
            And also we have an option to change the searching hierarchy mode through property panel.
        </p>
        <p>
            More information on the searching configuration can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/tree-grid/searching" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@*custom code end*@
@section Title{
                    <title>ASP.NET MVC Tree Grid Search Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Search in ASP.NET MVC Tree Grid Control</h1>
                }