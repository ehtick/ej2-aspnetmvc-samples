@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Charts
@section ControlsSection{
    <div class="control-section col-lg-9">
        <div class="row" id="container">
            @Html.EJS().Smithchart("container").Load("load").HorizontalAxis(horizontalAxis => horizontalAxis.MinorGridLines(new SmithchartSmithchartMinorGridLines{ Visible = true })).RadialAxis(radial => radial.MinorGridLines(new SmithchartSmithchartMinorGridLines{ Visible = true })).LegendSettings(legend => legend.Visible(true).Shape("Circle")).RenderType(RenderType.Impedance).Series(series =>
{
   series.Name("Transmission").EnableAnimation(true).Marker(new SmithchartSeriesMarker{ Visible = true, Shape = "circle" }).Tooltip(new SmithchartSeriesTooltip{ Visible = true }).Add();
}).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div class="property-text">Export Type</div>
                    </td>
                    <td style="width: 60%;">
                        <div style="margin-left: -10px">
                            <select id="mode">
                                <option value="JPEG">JPEG</option>
                                <option value="PNG">PNG</option>
                                <option value="SVG">SVG</option>
                                <option value="PDF">PDF</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div class="property-text">File Name</div>
                    </td>
                    <td style="width: 60%;">
                        <div class="e-float-input" style="margin-top: 0px;">
                            <input type="text" value="Smith chart" id="fileName" style="margin-left: -10px;width: 100px">
                        </div>
                    </td>
                </tr>
                <tr id="button-control1">
                    <td>
                        <div style="height: 45px; margin-left: 50%;">
                            <button id="togglebtn1" style="text-transform:none !important;width:110px;">Export</button>
                        </div>
                    </td>
                </tr>
                <tr id="button-control2">
                    <td>
                        <div style="height: 45px; margin-left: 50%;">
                            <button id="togglebtn2" style="text-transform:none !important;width:100px;">Print</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <style>
        .e-print-icon::before {
            content: '\e34b';
        }

        .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {
            content: '\e7df';
        }

        .e-view.bootstrap .e-print-icon::before {
            content: '\ebd2';
        }

        .e-view.bootstrap4 .e-print-icon::before {
            content: '\e743';
        }

        .e-view.tailwind .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {
            content: '\e76c';
        }

        .e-view.highcontrast .e-print-icon::before {
            content: '\ebf9';
        }

        .e-view.bootstrap5\.3 .e-print-icon::before, .e-view.bootstrap5\.3-dark .e-print-icon::before {
            content: '\e75d';
        }

        .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {
            content: '\e75d';
        }

        .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {
            content: '\e75d';
        }

        .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {
            content: '\e75d';
        }

        .e-export-icon::before {
            content: '\e728';
        }

        .e-view.fabric .e-export-icon::before, .e-view.fabric-dark .e-export-icon::before {
            content: '\e710';
        }

        .e-view.bootstrap4 .e-export-icon::before {
            content: '\e780';
        }

        .e-view.tailwind-dark .e-export-icon::before, .e-view.tailwind3-dark .e-export-icon::before, .e-view.tailwind .e-export-icon::before, .e-view.tailwind3 .e-export-icon::before {
            content: '\e7bf';
        }

        .e-view.highcontrast .e-export-icon::before {
            content: '\e710';
        }

        .e-view.bootstrap5\.3 .e-export-icon::before, .e-view.bootstrap5\.3-dark .e-export-icon::before {
            content: '\e72e';
        }

        .e-view.fluent .e-export-icon::before, .e-view.fluent-dark .e-export-icon::before {
            content: '\e72e';
        }

        .e-view.fluent2 .e-export-icon::before, .e-view.fluent2-dark .e-export-icon::before, .e-view.fluent2-highcontrast .e-export-icon::before {
            content: '\e72e';
        }

        .e-view.material3 .e-export-icon::before, .e-view.material3-dark .e-export-icon::before {
            content: '\e72e';
        }

        .property-text {
            font-family: "Roboto", "Segoe UI", "GeezaPro", "DejaVu Serif", "sans-serif" !important;
            font-size: 13px !important;
            font-weight: 400 !important;
        }
    </style>
    <script src="~/Scripts/SmithChart/theme-color.js"></script>
    <script>
        var smithchart;
        function load(args) {
            loadSmithChartTheme(args);
            args.smithchart.series[0].points = [
                { resistance: 0.15, reactance: 0 },
                { resistance: 0.15, reactance: 0.15 },
                { resistance: 0.18, reactance: 0.3 },
                { resistance: 0.2, reactance: 0.4 },
                { resistance: 0.25, reactance: 0.6 },
                { resistance: 0.38, reactance: 0.95 },
                { resistance: 0.6, reactance: 1.25 },
                { resistance: 1, reactance: 1.6 },
                { resistance: 1.65, reactance: 1.9 },
                { resistance: 2.75, reactance: 2 },
                { resistance: 4.5, reactance: 0 },
                { resistance: 3, reactance: -2 },
                { resistance: 1.65, reactance: -1.95 },
                { resistance: 1, reactance: -1.65 },
                { resistance: 0.6, reactance: -1.25 },
                { resistance: 0.35, reactance: -0.9 },
                { resistance: 0.25, reactance: -0.6 },
                { resistance: 0.25, reactance: -0.4 },
                { resistance: 0.25, reactance: -0.3 },
                { resistance: 0.25, reactance: -0.15 },
                { resistance: 0.25, reactance: 0 },
            ];
            args.smithchart.series[0].marker.border.width = 2;
            smithchart = args.smithchart;
        }
        var mode = new ej.dropdowns.DropDownList({
            index: 0,
            width: 100
        });
        mode.appendTo('#mode');
        var togglebtn1 = new ej.buttons.Button({
            isPrimary: true,
            iconCss: 'e-icons e-export-icon',
            cssClass: 'e-flat'
        });
        togglebtn1.appendTo('#togglebtn1');
        document.getElementById('togglebtn1').onclick = function () {
            var fileName = (document.getElementById('fileName')).value;
            smithchart.export(mode.value, fileName);
        };
        var togglebtn2 = new ej.buttons.Button({
            isPrimary: true,
            iconCss: 'e-icons e-print-icon',
            cssClass: 'e-flat'
        });
        togglebtn2.appendTo('#togglebtn2');
        document.getElementById('togglebtn2').onclick = function () {
            smithchart.print();
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample explores the exporting and printing functionality in Smith chart.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Print and Export in ASP.NET MVC Smith Charts control. Explore here for more details."/>
                }
@section Description{
    <p>
        In this example, you can see how to export and print the rendered Smith chart. Smith chart can be exported to JPEG, PNG, SVG, and PDF formats.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Smith Charts Print and Export Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Print and Export in ASP.NET MVC Smith Charts Control</h1>
                }