@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Rendering mode in ASP.NET MVC HeatMap Chart control. Explore here for more details."/>
                }
@section ControlsSection{
    <div>
        <div class="col-md-8 control-section">
            <div class="content-wrapper">
                <div id="container" style="width:92%">
                    @Html.EJS().HeatMap("container").TitleSettings(titleSettings => titleSettings.Text("Net Migration Rate of Northern Europe From 1965 to 2015").TextStyle(ViewData["textStyle"])).XAxis(
                    xAxis =>
                    {
                        xAxis.LabelRotation(-90)
                        .LabelIntersectAction(Syncfusion.EJ2.HeatMap.LabelIntersectAction.None)
                        .Labels((string[])ViewData["xLabels"]).TextStyle(ViewData["labelTextStyle"]);
                    }).YAxis(yaxis => yaxis.Labels((string[])ViewData["yLabels"]).TextStyle(ViewData["labelTextStyle"])).LegendSettings(legendSettings =>
                    legendSettings.Position(Syncfusion.EJ2.HeatMap.LegendPosition.Bottom).Width("200px").TextStyle(ViewData["labelTextStyle"])).RenderingMode(Syncfusion.EJ2.HeatMap.DrawType.SVG).PaletteSettings(paletteSettings => paletteSettings.Palette(palette =>
                    {
                        palette.Color("#C06C84").Add();
                        palette.Color("#355C7D").Add();
                    })).CellSettings(cellSettings =>
                    cellSettings.Border(ViewData["border"]).ShowLabel(false).Format("{value} %")).TooltipSettings(tooltipSettings => tooltipSettings.TextStyle(textStyle => textStyle.FontFamily("inherit"))).Load("load").DataSource(ViewData["dataSource"]).Render()

                </div>
            </div>
        </div>

        <div class="col-md-4 property-section">
            <table id="property" title="Properties" style="width: 100%; margin-left: -10px;">
                <tbody>
                    <tr style="height: 50px">
                        <td style="width: 60%">
                            <div>Rendering Mode:</div>
                        </td>
                        <td style="width: 40%;">
                            <div class="row">
                                <input id="svg" type="radio">
                            </div>
                            <div class="row">
                                <input id="canvas" type="radio">
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }
        body.material-dark .property-panel-section {
            color: #ffffff;
        }
    </style>
    <script>
        var load = function (args) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
        };
        var svgRadioButton = new ej.buttons.RadioButton({
            label: 'SVG', name: 'renderingmode',
            change: function () { valueXChange(); }, value: 'SVG', checked: true
        });
        svgRadioButton.appendTo('#svg');

        var canvasradioButton = new ej.buttons.RadioButton({
            label: 'Canvas', name: 'renderingmode',
            change: function () { valueXChange(); }, value: 'Canvas'
        });
        canvasradioButton.appendTo('#canvas');

        function valueXChange() {
            var heatMap = document.getElementById('container').ej2_instances[0];
            heatMap.renderingMode = svgRadioButton.checked ? 'SVG' : 'Canvas';
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the net migration rate for the northern European countries over the years. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to change the rendering mode between Canvas and SVG means of radio button.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to change the rendering mode between <code>Canvas</code> and <code>SVG</code> types in Heatmap. You can change the 
        rendering mode using the <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/heatmap-chart/rendering-mode" target="_blank" aria-label="renderingMode">renderingMode<span class="sr-only">opens in a new tab</span></a> property.
    </p>
    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
    <br>
}

@section Title{
                    <title>ASP.NET MVC HeatMap Chart Rendering mode Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Rendering mode in ASP.NET MVC HeatMap Chart Control</h1>
                }