@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Inversed Axis in ASP.NET MVC HeatMap Chart control. Explore here for more details."/>
                }
@section ControlsSection{
    <div>
        <div class="col-md-8 control-section">
            <div class="content-wrapper">
                <div id="container" style="width:92%">
                    @Html.EJS().HeatMap("container").TitleSettings(titleSettings => titleSettings.Text("Population Growth Rate of the most Populous Countries").TextStyle(ViewData["textStyle"])).XAxis(xAxis =>
                    {
                        xAxis.LabelRotation(45)
                        .LabelIntersectAction(Syncfusion.EJ2.HeatMap.LabelIntersectAction.None)
                        .Labels((string[])ViewData["xLabels"])
                        .IsInversed(true).TextStyle(ViewData["labelTextStyle"]);
                    }).YAxis(yaxis =>
                    {
                        yaxis.IsInversed(true)
                    .Labels((string[])ViewData["yLabels"]).TextStyle(ViewData["labelTextStyle"]);
                    }).PaletteSettings(paletteSettings => paletteSettings.Palette(palette =>
                    {
                        palette.Value(0).Color("#4b7287").Add();
                        palette.Value(0.5).Color("#b5b29f").Add();
                        palette.Value(1).Color("#F0D6AD").Add();
                        palette.Value(1.5).Color("#9da49a").Add();
                        palette.Value(2).Color("#466f86").Add();
                        palette.Value(2.5).Color("#d7c7a7").Add();
                        palette.Value(3).Color("#6e888f").Add();
                    })).CellSettings(cellSettings =>
                    cellSettings.Border(ViewData["border"]).ShowLabel(false).Format("{value} %").TextStyle(ViewData["labelTextStyle"])).TooltipSettings(tooltipSettings => tooltipSettings.TextStyle(textStyle => textStyle.FontFamily("inherit"))).LegendSettings(legendSettings => legendSettings.Visible(false)).Load("load").DataSource(ViewData["dataSource"]).Render()
                </div>
                <div style="float: right; margin-right: 10px;">
                    Source:
                    <a href="https://en.wikipedia.org/wiki/List_of_countries_by_oil_production" target='_blank'>https://en.wikipedia.org/</a>
                </div>
            </div>
        </div>

        <div class="col-md-4 property-section">
            <table id="property" title="Properties" style="width: 100%; margin-left: -18px;">
                <tbody>
                    <tr style="height: 50px">
                        <td style="width: 40%;">
                            <div>
                                <input id="XOpposedPosition" type="checkbox">
                            </div>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td style="width: 40%;">
                            <div>
                                <input id="YOpposedPosition" type="checkbox">
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
        body.material-dark .property-panel-section {
            color: #ffffff;
        }
        .e-view.fluent2 #property .e-checkbox-wrapper, .e-view.fluent2-dark #property .e-checkbox-wrapper {
            padding-left: 0px;
        }
    </style>
    <script>
        var load = function (args) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
        };
        var xlistObj = new ej.buttons.CheckBox({ label: 'Reverse X-Axis Origin', checked: true, change: valueXChange });
        xlistObj.appendTo('#XOpposedPosition');

        function valueXChange() {
            var heatMap = document.getElementById('container').ej2_instances[0];
            heatMap.xAxis.isInversed = xlistObj.checked;
        }

        var ylistObj = new ej.buttons.CheckBox({ label: 'Reverse Y-Axis Origin', checked: true, change: valueYChange });
        ylistObj.appendTo('#YOpposedPosition');

        function valueYChange() {
            var heatMap = document.getElementById('container').ej2_instances[0];
            heatMap.yAxis.isInversed = ylistObj.checked;
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates the population growth rate of the most populous countries over the years. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to reverse the origin of the axes by means of checkbox for each axis.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to reverse the axis origin for both axes, once the axis origin has been reversed the axis
        data will be displayed inverted. You can reverse the axis origin by enabling the
        <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.HeatMap.HeatMapAxis.html#Syncfusion_EJ2_HeatMap_HeatMapAxis_IsInversed" target="_blank" aria-label="isInversed">isInversed<span class="sr-only">opens in a new tab</span></a> property for each axis.
    </p>
    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
    <br>
}

@section Title{
                    <title>ASP.NET MVC HeatMap Chart Inversed Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inversed Axis in ASP.NET MVC HeatMap Chart Control</h1>
                }