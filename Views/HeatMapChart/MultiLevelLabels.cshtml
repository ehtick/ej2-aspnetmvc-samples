@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Multi Level Labels in ASP.NET MVC HeatMap Chart control. Explore here for more details."/>
                }
@section ControlsSection{
    <div class="control-section">
        <div id="container">
            @Html.EJS().HeatMap("container").TitleSettings(titleSettings => titleSettings.Text("Product wise Monthly sales revenue for a e-commerce website").
            TextStyle(ViewData["textStyle"])).XAxis(
            xAxis => xAxis.Border(br=>br.Width(1).Type(Syncfusion.EJ2.HeatMap.BorderType.Rectangle).
            Color("#a19d9d")).Labels((string[])ViewData["xLabels"]).TextStyle(ViewData["xTextStyle"])).YAxis(yaxis =>
            yaxis.Border(border => border.Width(0)).Labels((string[])ViewData["yLabels"]).TextStyle(ViewData["xTextStyle"]).IsInversed(true)).PaletteSettings(paletteSettings => paletteSettings.Palette(palette =>
            {
                palette.Color("#F0ADCE").Add();
                palette.Color("#19307B").Add();

            })).LegendSettings(legendSettings => legendSettings.Visible(false)).CellSettings(cellSettings =>
            cellSettings.Border(ViewData["border"]).TextStyle(ViewData["labelTextStyle"])).TooltipSettings(tooltipSettings => tooltipSettings.TextStyle(textStyle => textStyle.FontFamily("inherit"))).TooltipRender("tooltipRender").CellRender("cellRender").Load("load").DataSource(ViewData["dataSource"]).Render()
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var tooltipRender = function (args) {
            args.content = [args.xLabel + ' | ' + args.yLabel + ' : $ ' + (args.value / 10) + 'K'];
        };
        var cellRender = function (args) {
            args.displayText = '$ ' + (args.value / 10) + 'K';
        };
        var load = function (args) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            selectedTheme = selectedTheme.toLowerCase();
            @* custom code end *@
            args.heatmap.xAxis.multiLevelLabels = ([
                {
                    border: { type: 'Rectangle', color: '#a19d9d' },
                    textStyle: {
                        color: 'black',
                        fontWeight: 'Bold',
                        fontFamily: "inherit"
                    },
                    categories: [
                        { start: 0, end: 2, text: 'Electronics', },
                        { start: 3, end: 4, text: 'Beauty and personal care', },
                        { start: 5, end: 7, text: 'Fashion', },
                        { start: 8, end: 10, text: 'Household', },
                    ]
                },
            ]);
            args.heatmap.yAxis.multiLevelLabels = ([
                {
                    border: { type: 'Brace', color: '#a19d9d' },
                    textStyle: {
                        color: 'black',
                        fontWeight: 'Bold',
                        fontFamily: "inherit"
                    },
                    categories: [
                        { start: 0, end: 2, text: 'Q1' },
                        { start: 3, end: 5, text: 'Q2' },
                        { start: 6, end: 8, text: 'Q3' },
                        { start: 9, end: 11, text: 'Q4' }
                    ]
                },
            ]);
            if (selectedTheme.indexOf('dark') > -1 || selectedTheme.indexOf('highcontrast') > -1) {
                args.heatmap.xAxis.textStyle.color = 'White';
                args.heatmap.yAxis.textStyle.color = 'White';
                args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'White';
                args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'White';
            }
            else {
                args.heatmap.xAxis.textStyle.color = 'Black';
                args.heatmap.yAxis.textStyle.color = 'Black';
                args.heatmap.xAxis.multiLevelLabels[0].textStyle.color = 'Black';
                args.heatmap.yAxis.multiLevelLabels[0].textStyle.color = 'Black';
            }
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the product wise monthly sales revenue of the items sold by an online retailer in a year. The products are grouped based on the purchase domains and revenue is displayed as cell data.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to group axis labels.
        You can customize text in each level by using <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.HeatMap.HeatMapMultiLevelLabel.html#Syncfusion_EJ2_HeatMap_HeatMapMultiLevelLabel_Alignment" target="_blank" aria-label="alignment">alignment<span class="sr-only">opens in a new tab</span></a>, <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.HeatMap.HeatMapMultiLevelLabel.html#Syncfusion_EJ2_HeatMap_HeatMapMultiLevelLabel_TextStyle" target="_blank" aria-label="textStyle">textStyle<span class="sr-only">opens in a new tab</span></a> and <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.HeatMap.HeatMapMultiLevelLabel.html#Syncfusion_EJ2_HeatMap_HeatMapMultiLevelLabel_Border" target="_blank" aria-label="border">border<span class="sr-only">opens in a new tab</span></a> properties.
    </p>
    <p>Border of the axis labels can be customized by using <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.HeatMap.HeatMapAxisLabelBorder.html#Syncfusion_EJ2_HeatMap_HeatMapAxisLabelBorder_Type" target="_blank" aria-label="type">type<span class="sr-only">opens in a new tab</span></a> property.
    </p>
    <ul>
        <li><code>Rectangle</code></li>
        <li><code>Brace</code></li>
        <li><code>WithoutTopBorder</code></li>
        <li><code>WithoutBottomBorder</code></li>
        <li><code>WithoutTopandBottomBorder</code></li>
        <li><code>WithoutBorder</code>.</li>
    </ul>
    <br>
}

@section Title{
                    <title>ASP.NET MVC HeatMap Chart Multi Level Labels Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multi Level Labels in ASP.NET MVC HeatMap Chart Control</h1>
                }