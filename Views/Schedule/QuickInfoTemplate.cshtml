@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").QuickInfoTemplates(new ScheduleQuickInfoTemplates { Header = "#header-template", Content = "#content-template", Footer = "#footer-template" }).PopupOpen("OnPopupOpen").EventRendered("onEventRendered").EventSettings(e => e.DataSource(ViewData["datasource"])).SelectedDate(new DateTime(DateTime.Today.Year, 1, 6)).Resources(res =>
                {
                    res.DataSource(ViewData["Categories"]).Field("RoomId").Title("Room Type").Name("MeetingRoom").TextField("Name").IdField("Id").ColorField("Color").Add();
                }).Render()
        </div>
    </div>
    <style>
        .quick-info-header {
            background-color: white;
            padding: 8px 18px;
        }

        .quick-info-header .e-close {
            position: relative;
            right: -90%;
        }

        .quick-info-header-content {
            justify-content: flex-end;
            display: flex;
            flex-direction: column;
            padding: 5px 10px 5px;
        }

        .quick-info-title {
            font-weight: 500;
            font-size: 16px;
            letter-spacing: 0.48px;
            height: 22px;
        }

        .duration-text {
            font-size: 11px;
            letter-spacing: 0.33px;
            height: 14px;
        }

        .content-area {
            padding: 10px;
            width: auto;
        }

        .event-content {
            height: 90px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 0 15px;
        }

        .meeting-type-wrap,
        .meeting-subject-wrap,
        .notes-wrap {
            font-size: 11px;
            color: #666;
            letter-spacing: 0.33px;
            height: 24px;
            padding: 5px;
        }

        .event-content div label {
            display: inline-block;
            min-width: 45px;
            color: #666;
        }

        .event-content div span {
            font-size: 11px;
            color: #151515;
            letter-spacing: 0.33px;
            line-height: 14px;
            padding-left: 8px;
        }

        .cell-footer.e-btn {
            background-color: #ffffff;
            border-color: #878787;
            color: #878787;
        }

        .cell-footer {
            padding-top: 10px;
        }

        .e-quick-popup-wrapper .e-cell-popup .e-popup-content {
            padding: 0 14px !important;
        }

        .e-quick-popup-wrapper .e-event-popup .e-popup-footer {
            display: block;
        }

        .e-quick-popup-wrapper .e-popup-footer button:first-child {
            margin-right: 5px;
        }

        .bootstrap-dark .quick-info-header,
        .fabric-dark .quick-info-header {
            background-color: #1a1a1a;
        }

        .material-dark .quick-info-header {
            background-color: #424242;
        }

        .highcontrast .quick-info-header,
        .tailwind-dark .quick-info-header,
        .tailwind3-dark .quick-info-header,
        .bootstrap-dark .quick-info-header,
        .bootstrap5-dark .quick-info-header,
        .bootstrap5\.3-dark .quick-info-header,
        .fluent-dark .quick-info-header,
        .fabric-dark .quick-info-header,
        .material3-dark .quick-info-header,
        .fluent2-dark .quick-info-header,
        .fluent2-highcontrast .quick-info-header {
            background-color: transparent;
        }

        .tailwind-dark .quick-info-header-content,
        .tailwind3-dark .quick-info-header-content,
        .bootstrap-dark .quick-info-header-content,
        .bootstrap5-dark .quick-info-header-content,
        .bootstrap5\.3-dark .quick-info-header-content,
        .fabric-dark .quick-info-header-content,
        .material-dark .quick-info-header-content,
        .highcontrast .quick-info-header-content,
        .fluent-dark .quick-info-header-content,
        .material3-dark .quick-info-header-content,
        .fluent2-dark .quick-info-header-content,
        .fluent2-highcontrast .quick-info-header-content {
            color: #fff !important;
        }

        .tailwind-dark .event-content div label,
        .tailwind3-dark .event-content div label,
        .tailwind-dark .event-content div span,
        .tailwind3-dark .event-content div span,
        .bootstrap-dark .event-content div label,
        .bootstrap-dark .event-content div span,
        .bootstrap5-dark .event-content div label,
        .bootstrap5-dark .event-content div span,
        .bootstrap5\.3-dark .event-content div label,
        .bootstrap5\.3-dark .event-content div span,
        .fluent-dark .event-content div label,
        .fluent-dark .event-content div span,
        .fabric-dark .event-content div label,
        .fabric-dark .event-content div span,
        .material-dark .event-content div label,
        .material-dark .event-content div span,
        .highcontrast .event-content div label,
        .highcontrast .event-content div span,
        .material3-dark .event-content div label,
        .material3-dark .event-content div span,
        .fluent2-dark .event-content div label,
        .fluent2-dark .event-content div span,
        .fluent2-highcontrast .event-content div label,
        .fluent2-highcontrast .event-content div span {
            color: #fff;
        }

        .material .e-quick-popup-wrapper .e-popup-footer,
        .material3 .e-quick-popup-wrapper .e-popup-footer,
        .material3-dark .e-quick-popup-wrapper .e-popup-footer {
            display: block !important;
            padding: 0px 18px 8px 22px !important;
        }

        .material3 .e-quick-popup-wrapper .e-event-popup .e-popup-header,
        .material3-dark .e-quick-popup-wrapper .e-event-popup .e-popup-header {
            border-radius: 12px;
        }
    </style>

    <script id="header-template" type="text/x-template">
        <div class="quick-info-header">
            <button class="e-icons e-close" type="button" onclick="popupClose"></button>
            <div class="quick-info-header-content" style='${getHeaderStyles(data)}'>
                <div class="quick-info-title">${if (elementType == "cell")}Add Appointment${else}Appointment Details${/if}</div>
                <div class="duration-text">${getHeaderDetails(data)}</div>
            </div>
        </div>
    </script>

    <script id="content-template" type="text/x-template">
        <div class="quick-info-content">
            ${if (elementType == "cell")}
            <div class="e-cell-content">
                <div class="content-area">
                    <input id="title" placeholder="Title" />
                </div>
                <div class="content-area">
                    <input id="eventType" placeholder="Choose Type" />
                </div>
                <div class="content-area">
                    <input id="notes" placeholder="Notes" />
                </div>
            </div>
            ${else}
            <div class="event-content">
                <div class="meeting-type-wrap">
                    <label>Subject</label>:
                    <span>${Subject}</span>
                </div>
                <div class="meeting-subject-wrap">
                    <label>Type</label>:
                    <span>${getEventType(data)}</span>
                </div>
                <div class="notes-wrap">
                    <label>Notes</label>:
                    <span>${Description}</span>
                </div>
            </div>
            ${/if}
        </div>
    </script>

    <script id="footer-template" type="text/x-template">
        <div class="quick-info-footer">
            ${if (elementType == "cell")}
            <div class="cell-footer">
                <button id="more-details">More Details</button>
                <button id="add">Add</button>
            </div>
            ${else}
            <div class="event-footer">
                <button id="delete">Delete</button>
                <button id="more-details">More Details</button>
            </div>
            ${/if}
        </div>
    </script>

    <script type="text/javascript">
        var intl = new ej.base.Internationalization();
        window.getResourceData = function (data) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var resources = scheduleObj.getResourceCollections().slice(-1)[0];
            var resourceData = resources.dataSource.filter(function (resource) {
                return resource.Id === data.RoomId;
            })[0];
            return resourceData;
        };
        window.getHeaderDetails = function (data) {
            return intl.formatDate(data.StartTime, { type: 'date', skeleton: 'full' }) + ' (' +
                intl.formatDate(data.StartTime, { skeleton: 'hm' }) + ' - ' + intl.formatDate(data.EndTime, { skeleton: 'hm' }) + ')';
        };
        window.getHeaderStyles = function (data) {
            if (data.elementType === 'cell') {
                return 'align-items: center; color: #919191;';
            }
            else {
                var resourceData = window.getResourceData(data);
                return 'background:' + resourceData.Color + '; color: #FFFFFF;';
            }
        };

        var popupClose = function () {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.closeQuickInfoPopup();
        }

        var buttonClickActions = function (e) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var quickPopup = ej.base.closest(e.target, '.e-quick-popup-wrapper');
            var getSlotData = function () {
                var subject = quickPopup.querySelector('#title').ej2_instances[0].value;
                var notes = quickPopup.querySelector('#notes').ej2_instances[0].value;
                var addObj = {};
                addObj.Id = scheduleObj.getEventMaxID();
                addObj.Subject = ej.base.isNullOrUndefined(subject) ? 'Add title' : subject;
                addObj.StartTime = new Date(scheduleObj.activeCellsData.startTime);
                addObj.EndTime = new Date(scheduleObj.activeCellsData.endTime);
                addObj.IsAllDay = scheduleObj.activeCellsData.isAllDay;
                addObj.Description = ej.base.isNullOrUndefined(notes) ? 'Add notes' : notes;
                addObj.RoomId = quickPopup.querySelector('#eventType').ej2_instances[0].value;
                return addObj;
            };
            if (e.target.id === 'add') {
                var addObj = getSlotData();
                scheduleObj.addEvent(addObj);
            }
            else if (e.target.id === 'delete') {
                var eventDetails = scheduleObj.activeEventData.event;
                var currentAction = void 0;
                if (eventDetails.RecurrenceRule) {
                    currentAction = 'DeleteOccurrence';
                }
                scheduleObj.deleteEvent(eventDetails, currentAction);
            }
            else {
                var isCellPopup = quickPopup.firstElementChild.classList.contains('e-cell-popup');
                var eventDetail = isCellPopup ? getSlotData() :
                    scheduleObj.activeEventData.event;
                var currentActions = isCellPopup ? 'Add' : 'Save';
                if (eventDetail.RecurrenceRule) {
                    currentActions = 'EditOccurrence';
                }
                scheduleObj.openEditor(eventDetail, currentActions, true);
            }
            scheduleObj.closeQuickInfoPopup();
        };
        window.getEventType = function (data) {
            var resourceData = window.getResourceData(data);
            return resourceData.Name;
        };

        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var categoryColor = args.data.CategoryColor;
            if (!args.element || !categoryColor) {
                return;
            }
            if (scheduleObj.currentView === 'Agenda') {
                (args.element.firstChild).style.borderLeftColor = categoryColor;
            } else {
                args.element.style.backgroundColor = categoryColor;
            }
        }
        function OnPopupOpen(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            if (args.type === 'QuickInfo' || args.type === 'ViewEventInfo') {
                if (!args.target.classList.contains('e-appointment')) {
                    var titleObj = new ej.inputs.TextBox({ placeholder: 'Title' });
                    titleObj.appendTo(args.element.querySelector('#title'));
                    titleObj.focusIn();
                    var typeObj = new ej.dropdowns.DropDownList({
                        dataSource: scheduleObj.getResourceCollections().slice(-1)[0].dataSource,
                        placeholder: 'Choose Type',
                        fields: { text: 'Name', value: 'Id' },
                        index: 0
                    });
                    typeObj.appendTo(args.element.querySelector('#eventType'));
                    var notesObj = new ej.inputs.TextBox({ placeholder: 'Notes' });
                    notesObj.appendTo(args.element.querySelector('#notes'));
                }
                var moreDetailsBtn = args.element.querySelector('#more-details');
                if (moreDetailsBtn) {
                    var moreObj = new ej.buttons.Button({
                        content: 'More Details', cssClass: 'e-flat',
                        isPrimary: args.element.firstElementChild.classList.contains('e-event-popup')
                    });
                    moreObj.appendTo(moreDetailsBtn);
                    moreDetailsBtn.onclick = function (e) { buttonClickActions(e); };
                }
                var addBtn = args.element.querySelector('#add');
                if (addBtn) {
                    new ej.buttons.Button({ content: 'Add', cssClass: 'e-flat', isPrimary: true }, addBtn);
                    addBtn.onclick = function (e) { buttonClickActions(e); };
                }
                var deleteBtn = args.element.querySelector('#delete');
                if (deleteBtn) {
                    new ej.buttons.Button({ content: 'Delete', cssClass: 'e-flat' }, deleteBtn);
                    deleteBtn.onclick = function (e) { buttonClickActions(e); };
                }
            }
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Quick Info Template in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>This demo showcases the quick popups for cells and appointments with the customized templates</p>
    </div>
}
@section Description{
    <div id="description">
        <p>In this demo, the quick popup is customized based on the office required appointment-related fields which can be achieved by using the <code>quickInfoTemplate</code> option.</p>
        <p>
            The <code>quickInfoTemplate</code> has three UI elements such as <code>header</code>, <code>content</code>, and <code>footer</code>. You can customize these UI elements of the quick popup.
            You can also customize whether the quick popup is applicable to the cells or events or for both using the <code>elementType</code> property.
        </p>

    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Quick Info Template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Quick Info Template in ASP.NET MVC Scheduler Control</h1>
                }