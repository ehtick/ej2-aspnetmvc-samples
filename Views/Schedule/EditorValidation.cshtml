@using Syncfusion.EJ2

@{
    Dictionary<string, object> validationRules = new Dictionary<string, object>() { { "required", true } };
    Dictionary<string, object> locationValidationRules = new Dictionary<string, object>() { { "required", true }, { "regex", new string[] { "^[a-zA-Z0-9- ]*$", "Special characters are not allowed in this field" } } };
    Dictionary<string, object> descriptionValidationRules = new Dictionary<string, object>() { { "required", true }, { "minLength", 5 }, { "maxLength", 500 } };
}
@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").EventRendered("onEventRendered").EventSettings(e => e.Fields(f => f.Subject(sub => sub.Name("Subject").Validation(validationRules)).Location(loc => loc.Name("Location").Validation(locationValidationRules)).Description(des => des.Name("Description").Validation(descriptionValidationRules)).StartTime(st => st.Name("StartTime").Validation(validationRules)).EndTime(et => et.Name("EndTime").Validation(validationRules))).DataSource(ViewData["datasource"])).SelectedDate(new DateTime(DateTime.Today.Year, 1, 10)).Render()
        </div>
    </div>

    <script src="~/Scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Field Validation in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo shows the way of adding default and custom validation rules to the editor fields of Schedule.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the specific fields of Scheduler editor window such as
            <code>Subject</code>,
            <code>Location</code>,
            <code>Description</code>,
            <code>StartTime</code> and
            <code>EndTime</code> are made to undergo validation such that if it is left as blank, then the default required validation message will
            be displayed in a separate tooltip, on clicking a save button.
        </p>
        <p>
            Additionally, the regex condition has been added to the
            <code>Location</code> field, so that if any special characters are typed into it, then the custom validation message will be displayed.
            The
            <code>Description</code> field has been validated to restrict the character count to be typed into it between 5 and 500 and not beyond that.
            This validation can be given by using the
            <code>Validation</code> API available within each
            <code>Fields</code> of
            <code>EventSettings</code> property.
        </p>
        <p>
            Apart from this validation feature, the built-in validation has been provided to the start and end time fields, so that
            when the selected end time occurs before the start time, a validation message will be displayed as well as when some
            unwanted characters are typed into the date fields, the invalid date message will be alerted.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Field Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Field Validation in ASP.NET MVC Scheduler Control</h1>
                }