@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns
@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper recurrence-editor-wrap">
            <div style="padding-bottom:15px;">
                Select Rule
                @Html.EJS().DropDownList("RecurrenceList").Index(2).PopupHeight("200px").DataSource(ViewData["datasource"]).Fields(new DropDownListFieldSettings { Text = "rule", Value = "rule" }).Change("onChange").Render()
            </div>
            @Html.EJS().RecurrenceEditor("RecurrenceEditor").Render()
        </div>
    </div>
    <style>
        .recurrence-editor-wrap {
            margin: 0 25%;
        }

        @@media (max-width: 580px) {
            .recurrence-editor-wrap {
                margin: 0 5%;
            }
        }
    </style>
    <script type="text/javascript"> 
        window.onload = function () {
            var recElement = document.getElementById('RecurrenceEditor');
            if (recElement && recElement.ej2_instances && recElement.ej2_instances[0]) {
                recElement.ej2_instances[0].setRecurrenceRule('FREQ=DAILY;INTERVAL=2;COUNT=8');
            }
        };
        function onChange(args) {
            var recObject = document.getElementById('RecurrenceEditor').ej2_instances[0];
            recObject.setRecurrenceRule(args.value);
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Populate Rule in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases how to fill the recurrence editor fields with appropriate values based on the user-provided recurrence
            rule string.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the
            <code>setRecurrenceRule</code> method is used to populate the fields of recurrence editor based on the static rule options selected from the dropdown
            list.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Scheduler Populate Rule Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Populate Rule in ASP.NET MVC Scheduler Control</h1>
                }