@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule
@using Syncfusion.EJ2.DropDowns

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="schedule-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").FirstMonthOfYear(0).MonthsCount(12).CssClass("year-view").Height("650px").Views(view => { view.Option(View.Year).IsSelected(true).Add(); view.Option(View.TimelineYear).DisplayName("Horizontal Timeline Year").Add(); view.Option(View.TimelineYear).DisplayName("Vertical Timeline Year").Orientation(Orientation.Vertical).Group(new ScheduleGroup { Resources = (string[])ViewData["Resources"] }).Add(); }).EventRendered("onEventRendered").Resources(res =>
            {
                res.DataSource(ViewData["Categories"]).Field("TaskId").Title("Category").Name("Categories").TextField("text").IdField("id").ColorField("color").AllowMultiple(true).Add();
            }).EventSettings(e => e.DataSource("generateEvents()")).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id='property' title='Properties'>
            <tbody>
                <tr>
                    <td>
                        @Html.EJS().DropDownList("firstMonthElement").Placeholder("First month of year").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Always).Index(0).DataSource(ViewData["Months"]).Fields(new DropDownListFieldSettings { Text = "text", Value = "value" }).Change("firstMonthOfYear").Render()
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EJS().NumericTextBox("numberOfMonthsElement").Placeholder("Number of months").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Always).Min(1).Max(24).Value(12).Format("###.##").Change("numberOfMonths").Render()
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        .year-view.e-schedule .e-timeline-year-view .e-resource-column-table,
        .year-view.e-schedule .e-timeline-year-view .e-resource-left-td {
            width: 120px;
        }

        /* custom code start*/
        .col-lg-2.property-section .property-panel-table td {
            padding-bottom: 1rem;
        }
        /* custom code end*/
    </style>

    <script type="text/javascript">
        function generateEvents(count, date) {
            if (count === void 0) { count = 250; }
            if (date === void 0) { date = new Date(); }
            var names = [
                'Bering Sea Gold', 'Technology', 'Maintenance', 'Meeting', 'Travelling', 'Annual Conference', 'Birthday Celebration',
                'Farewell Celebration', 'Wedding Anniversary', 'Alaska: The Last Frontier', 'Deadliest Catch', 'Sports Day',
                'MoonShiners', 'Close Encounters', 'HighWay Thru Hell', 'Daily Planet', 'Cash Cab', 'Basketball Practice',
                'Rugby Match', 'Guitar Class', 'Music Lessons', 'Doctor checkup', 'Brazil - Mexico', 'Opening ceremony', 'Final presentation'
            ];
            var colors = [
                '#ff8787', '#9775fa', '#748ffc', '#3bc9db', '#69db7c',
                '#fdd835', '#748ffc', '#9775fa', '#df5286', '#7fa900',
                '#fec200', '#5978ee', '#00bdae', '#ea80fc'
            ];
            var startDate = new Date(date.getFullYear() - 2, 0, 1);
            var endDate = new Date(date.getFullYear() + 2, 11, 31);
            var dateCollections = [];
            for (var a = 0, id = 1; a < count; a++) {
                var start = new Date(Math.random() * (endDate.getTime() - startDate.getTime()) + startDate.getTime());
                var end = new Date(new Date(start.getTime()).setHours(start.getHours() + 1));
                var nCount = Math.floor(Math.random() * names.length);
                var n = Math.floor(Math.random() * colors.length);
                dateCollections.push({
                    Id: id,
                    Subject: names[nCount],
                    StartTime: new Date(start.getTime()),
                    EndTime: new Date(end.getTime()),
                    IsAllDay: (id % 10) ? true : false,
                    EventColor: colors[n],
                    TaskId: (id % 5) + 1
                });
                id++;
            }
            return dateCollections;
        }
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var categoryColor = args.data.CategoryColor;
            if (!args.element || !categoryColor) {
                return;
            }
            if (scheduleObj.currentView === 'Agenda') {
                (args.element.firstChild).style.borderLeftColor = categoryColor;
            } else {
                args.element.style.backgroundColor = categoryColor;
            }
        }

        function firstMonthOfYear(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.firstMonthOfYear = args.value;
        }

        function numberOfMonths(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.monthsCount = args.value;
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Year View in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This example showcases the year and timeline year views of the Scheduler with the firstMonthOfYear and monthCount properties customizations.
            Once the property value has been changed in the properties, it will be reflected in the Scheduler.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, we have showcased the year and timeline year views that help to view the appointment in an annual calendar view. The view options are enabled by using the views property.
            In the <code>TimelineYear</code>, <code>Horizontal</code> and <code>Vertical</code> orientations are available to view the events with a different layout. Also this demo explains the
            customization of the different starting month of the year using <code>FirstMonthOfYear</code> property and the number of months using the <code>MonthsCount</code> property.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Year View Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Year View in ASP.NET MVC Scheduler Control</h1>
                }