@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            <div class='schedule-demo-heading'>Flight timings Between Barcelona and Los Angeles</div>
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").ResourceHeaderTemplate("#restemplate").Group(group => group.Resources((string[])ViewData["Resources"])).Resources(res => { res.DataSource(ViewData["Airlines"]).Field("AirlineId").Title("Airline Name").Name("Airlines").TextField("AirlineName").IdField("AirlineId").ColorField("AirlineColor").AllowMultiple(true).Add(); }).Views(view => { view.Option(View.Week).Add(); view.Option(View.Month).Add(); view.Option(View.Agenda).Add(); }).EventSettings(e => e.DataSource("generateEvents()").Fields(f => f.Subject(sub => sub.Name("Subject").Title("Travel Summary")).Location(loc => loc.Name("Location").Title("Source")).Description(des => des.Name("Description").Title("Comments")).StartTime(st => st.Name("StartTime").Title("Departure Time")).EndTime(et => et.Name("EndTime").Title("Arrival Time")))).SelectedDate(new DateTime(DateTime.Today.Year, 4, 6)).Render()
        </div>
    </div>
    <style>
        .e-schedule .template-wrap {
            display: flex;
            text-align: left;
        }

        .e-schedule .e-agenda-view .template-wrap {
            display: table;
            width: inherit;
            text-align: center;
            padding-top: 10px;
        }

        .e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {
            width: 110px;
        }

        .e-schedule .template-wrap .airline-image {
            width: 30px;
            margin-top: 15px;
            background-repeat: no-repeat;
        }

        .e-schedule.e-device .template-wrap .airline-image {
            margin-top: 5px;
        }

        .e-schedule .e-agenda-view .template-wrap .airline-image {
            height: 30px;
            margin-top: 0;
            margin-left: 35%;
        }

        .e-schedule .e-vertical-view .e-resource-cells {
            height: 80px;
        }

        .e-schedule .template-wrap .airline-details {
            padding-left: 15px;
        }

        .e-schedule .e-agenda-view .template-wrap .airline-details {
            padding: 0;
        }

        .e-schedule .template-wrap .airline-details .airline-name {
            font-size: 16px;
            font-weight: 500;
        }

        .e-schedule.e-device .template-wrap .airline-details .airline-name {
            font-size: inherit;
            font-weight: inherit;
        }

        .e-schedule .e-agenda-view .template-wrap .airline-model,
        .e-schedule .e-agenda-view .template-wrap .airline-seats {
            display: none;
        }

        .e-schedule.e-device .template-wrap .airline-model,
        .e-schedule.e-device .template-wrap .airline-seats {
            display: none;
        }
        /* custom code start*/
        .schedule-demo-heading {
            font-size: 16px;
            padding-bottom: 15px;
            text-align: center;
            font-weight: 500;
        }

        @@media (max-width: 550px) {
            .schedule-demo-heading {
                font-size: 14px;
            }
        }
        /* custom code end*/
    </style>
    <script id="restemplate" type="text/x-template">
        <div class='template-wrap'>
            <div class="airline-image"><img src="@Url.Content("~/Content/schedule/images/${getAirlineImage(data)}.svg")" /></div>
            <div class="airline-details">
                <div class="airline-name">${getAirlineName(data)}</div>
                <div class="airline-model">Model no: ${getAirlineModel(data)}</div>
                <div class="airline-seats">No.of seats: ${getAirlineSeats(data)}</div>
            </div>
        </div>
    </script>
    <script type="text/javascript">
        window.getAirlineImage = function (value) {
            var airlineName = window.getAirlineName(value);
            return airlineName.replace(' ', '-').toLowerCase();
        };
        window.getAirlineName = function (value) {
            return (value.resourceData) ? value.resourceData[value.resource.textField] : value.resourceName;
        };
        window.getAirlineModel = function (value) {
            var airlineName = window.getAirlineName(value);
            return (airlineName === 'Airways 1') ? 'CRJ 700' : (airlineName === 'Airways 2') ? 'Airbus A330' : 'ATR 72-600';
        };
        window.getAirlineSeats = function (value) {
            var airlineName = window.getAirlineName(value);
            return (airlineName === 'Airways 1') ? 50 : (airlineName === 'Airways 2') ? 75 : 100;
        };
        function generateEvents() {
            var year = new Date().getFullYear();
            var subjectCollection = ['Barcelona to Los Angeles', 'Los Angeles to Barcelona'];
            var collections = [];
            var dataCollections = [1, 2, 3];
            var id = 1;
            for (var i = 0, dataCollections = dataCollections; i < dataCollections.length; i++) {
                var data = dataCollections[i];
                var startDate = new Date(year, 3, 1);
                startDate.setMilliseconds(1000 * 60 * 60 * .5 * (data - 1));
                var lastDate = new Date((+startDate) + (1000 * 60 * 60 * 24 * 30));
                for (var date = startDate; date.getTime() < lastDate.getTime(); date = new Date(date.getTime() + (1000 * 60 * 60 * 5))) {
                    var strDate = new Date(+date);
                    var endDate = new Date((+strDate) + (1000 * 60 * 60 * (2.5 + (0.5 * data))));
                    collections.push({
                        Id: id,
                        Subject: subjectCollection[id % 2],
                        StartTime: new Date(+strDate),
                        EndTime: new Date(+endDate),
                        AirlineId: data
                    });
                    id += 1;
                }
            }
            return collections;
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Horizontal Grouping in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo illustrates the timings of different flight services on a specific route say between Barcelona and Los Angeles,
            on a daily basis. Here, the Scheduler is grouped based on the 3 Airline services.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the scheduler has been grouped with multiple resources by using the property
            <code>Group</code>. The resources to be grouped depends on the values of
            <code>Resources</code> option within the
            <code>Group</code> property, which accepts the array of resource names. The resource header has been customized by using the
            <code>ResourceHeaderTemplate</code> property.
        </p>
        <p>
            In mobile mode, when the grouping is enabled, the resources will be listed out in a treeview as a side-panel which opens
            or closes, on clicking the hamburger icon at the resource header. Only a single resource will be viewable at a time,
            due to the space constraints on mobile. If in case, the users want to view the grouped layout on mobile with scrolling
            content, then it is necessary to set
            <code>false</code> to the
            <code>enableCompactView</code> option within the
            <code>Group</code> property which is set to
            <code>true</code> by default. This option is not applicable on desktop mode.
        </p>
        <p>
            Note: If the
            <code>Group</code> property is not defined, then the default scheduler will be rendered with no grouping on layout, but the appointments
            of all the resources will be displayed on a single schedule.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Scheduler Horizontal Grouping Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Horizontal Grouping in ASP.NET MVC Scheduler Control</h1>
                }