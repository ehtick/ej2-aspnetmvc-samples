@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule
@using Syncfusion.EJ2.DropDowns;

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").Views(ViewData["view"]).EventRendered("onEventRendered").EventSettings(new ScheduleEventSettings { DataSource = ViewData["datasource"] }).ShowWeekend(false).SelectedDate(new DateTime(DateTime.Today.Year, 2, 15)).WorkHours(new ScheduleWorkHours { Start = "08:00" }).Render()
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr>
                    <td style="width: 100%">
                        <div>
                            @Html.EJS().MultiSelect("workdayscheckbox").Placeholder("Working days").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Always).Mode(VisualMode.CheckBox).PopupWidth("180").ShowDropDownIcon(true).ShowClearButton(false).Value(ViewData["values"]).DataSource(
                            ViewData["dropdown"]).Fields(new MultiSelectFieldSettings { Text = "DayText", Value = "DayValue" }).Change("onDayChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 100%">
                        <div style="font-weight:500">Non-Working days</div>
                        <div>
                            @Html.EJS().Button("showweekendbtn").Content("Show").IsToggle(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script src="~/Scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onDayChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var value = args.value.slice(0).map(Number).sort();
            scheduleObj.workDays = value.length === 0 ? [0] : value;
            scheduleObj.dataBind();
        }
        document.getElementById('showweekendbtn').onclick = function () {
            var toggleBtn = document.getElementById('showweekendbtn').ej2_instances[0];
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            if (!toggleBtn.element.classList.contains('e-active')) {
                toggleBtn.content = 'Hide';
                scheduleObj.showWeekend = true;
            } else {
                toggleBtn.content = 'Show';
                scheduleObj.showWeekend = false;
            }
        }
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Hide Non-Working Days in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo depicts the way to show or hide the weekend days of a week on Schedule. The days whichever not specified in
            working days collections will be taken into consideration as weekend days.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the
            <code>ShowWeekend</code> property is used either to show or hide the weekend days of a week and it is not applicable on
            <code>WorkWeek</code> view. By default, it is set to
            <code>true</code>. The days which are not a part of the working days collection of a Scheduler are usually considered as weekend days
            here.
        </p>
        <p>
            Here, the working days are defined as
            <code>[1, 3, 4, 5]</code> on Schedule. Therefore, the remaining days (0, 2, 6 - Sunday, Tuesday and Saturday) are considered as weekend days
            and will be hidden from the views as the
            <code>ShowWeekend</code> property is set to false.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Hide Non-Working Days Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Hide Non-Working Days in ASP.NET MVC Scheduler Control</h1>
                }