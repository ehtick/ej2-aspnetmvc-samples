@@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div class="col-md-12">
                @Html.EJS().Schedule("schedule").Width("100%").Height("650px").EventSettings(new ScheduleEventSettings { DataSource = ViewData["datasource"] }).SelectedDate(new DateTime(DateTime.Today.Year, 1, 10)).Render()
                <div id="grid"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section property-customization">
        <div class="property-panel-section">
            <p class="property-panel-header header-customization" style="width: 100%">Search by all event fields</p>
            <div class="property-panel-content">
                @Html.EJS().TextBox("events-search").CssClass("e-input").Type("text").Placeholder("Enter the Search text").Render()
            </div>
            <form class="event-search" id="form-search">
                <p class="property-panel-header  header-customization" style="width: 100%">Search by specific event fields</p>
                <table id="property-specific" style="width: 100%">
                    <tbody>
                        <tr class="row">
                            <td class="property-panel-content" colspan="2">
                                @Html.EJS().TextBox("Subject").CssClass("search-field").Type("text").Placeholder("Subject").Render()
                            </td>
                        </tr>
                        <tr class="row" style="height: 45px">
                            <td class="property-panel-content" colspan="2">
                                @Html.EJS().TextBox("Location").CssClass("search-field").Type("text").Placeholder("Location").Render()
                            </td>
                        </tr>
                        <tr class="row" style="height: 45px">
                            <td class="property-panel-content" colspan="2">
                                @Html.EJS().DatePicker("StartTime").CssClass("search-field e-start-time").ShowClearButton(false).Placeholder("StartTime").Render()
                            </td>
                        </tr>
                        <tr class="row" style="height: 45px">
                            <td class="property-panel-content" colspan="2">
                                @Html.EJS().DatePicker("EndTime").CssClass("search-field e-end-time").ShowClearButton(false).Placeholder("EndTime").Render()
                            </td>
                        </tr>
                        <tr class="row" style="height: 45px">
                            <td class="e-field button-customization" style="width: 50%;">
                                @{
                                    IDictionary<string, object> seperateSearch = new Dictionary<string, object>();
                                    seperateSearch.Add("type", "button");
                                }
                                @Html.EJS().Button("seperateSearch").Content("Search").HtmlAttributes(seperateSearch).Render()
                            </td>
                            <td class="e-field button-customization" style="width: 50%;">
                                @{
                                    IDictionary<string, object> clear = new Dictionary<string, object>();
                                    clear.Add("type", "button");
                                }
                                @Html.EJS().Button("clear").Content("Clear").HtmlAttributes(clear).Render()
                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>

    <style>
        .header-customization {
            padding-bottom: 10px;
        }

        .property-customization {
            padding-right: 5px;
        }

        .button-customization {
            padding: 15px;
        }

        @@media (max-width: 550px) {
            .button-customization {
                padding: 30px;
            }
        }
    </style>

    <script>
        document.getElementById("seperateSearch").addEventListener("click", function () {
            var searchObj = [];
            var startDate;
            var endDate;
            var formElements = [
                document.getElementById('Subject'),
                document.getElementById('Location'),
                document.getElementById('StartTime'),
                document.getElementById('EndTime')
            ];
            formElements.forEach(function (node) {
                var fieldOperator;
                var predicateCondition;
                var fieldInstance;
                var fieldValue;
                if (node.value && node.value !== '' && !node.classList.contains('e-datepicker')) {
                    fieldOperator = 'contains';
                    predicateCondition = 'or';
                    fieldValue = node.value;
                    searchObj.push({
                        field: node.name, operator: fieldOperator, value: fieldValue, predicate: predicateCondition,
                        matchcase: true
                    });
                }
                if (node.classList.contains('e-datepicker') && node.ej2_instances[0].value) {
                    fieldInstance = ((node)).ej2_instances[0];
                    fieldValue = fieldInstance.value;
                    if (node.classList.contains('e-start-time')) {
                        fieldOperator = 'greaterthanorequal';
                        predicateCondition = 'and';
                        startDate = new Date(+fieldValue);
                    }
                    else {
                        fieldOperator = 'lessthanorequal';
                        predicateCondition = 'and';
                        var date = new Date(+fieldInstance.value);
                        fieldValue = new Date(date.setDate(date.getDate() + 1));
                        endDate = fieldValue;
                    }
                    searchObj.push({
                        field: node.name, operator: fieldOperator, value: fieldValue, predicate: predicateCondition,
                        matchcase: false
                    });
                }
            });
            if (searchObj.length > 0) {
                var scheduleObj = document.getElementById('schedule').ej2_instances[0];
                var filterCondition = searchObj[0];
                var predicate = new ej.data.Predicate(
                    filterCondition.field, filterCondition.operator, filterCondition.value, filterCondition.matchcase);
                for (var i = 1; i < searchObj.length; i++) {
                    predicate = predicate.and(searchObj[i].field, searchObj[i].operator, searchObj[i].value, searchObj[i].matchcase);
                }
                var result = new ej.data.DataManager(scheduleObj.getEvents(startDate, endDate, true)).executeLocal(new ej.data.Query().where(predicate));
                showSearchEvents('show', result);
            } else {
                showSearchEvents('hide');
            }
        })

        document.getElementById("clear").addEventListener("click", function () {
            var instances = [];
            var elementList = document.querySelectorAll('.event-search .e-control:not(button)');
            document.getElementById('schedule').style.display = 'block';
            elementList.forEach(obj => instances.push(obj.ej2_instances[0]));
            instances.forEach(i => { i.value = ''; i.dataBind(); });
            showSearchEvents('hide');
        })

        document.getElementById("events-search").addEventListener("keyup", function (args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var searchString = (args.target).value;
            if (searchString !== '') {
                new ej.data.DataManager(scheduleObj.getEvents(null, null, true)).executeQuery(new ej.data.Query().
                    search(searchString, ['Subject', 'Location', 'Description'], null, true, true)).then(function (e) {
                        if ((e.result).length > 0) {
                            showSearchEvents('show', e.result);
                        } else {
                            showSearchEvents('hide');
                        }
                    });
            } else {
                showSearchEvents('hide');
            }
        })

        function showSearchEvents(type, data) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            if (type === 'show') {
                if (document.getElementById('grid').classList.contains('e-grid')) {
                    var gridObj = document.querySelector('#grid').ej2_instances[0];
                    gridObj.dataSource = data;
                    gridObj.dataBind();
                } else {
                    var grid = new ej.grids.Grid({
                        dataSource: data,
                        height: 505,
                        width: 'auto',
                        columns: [
                            { field: 'Subject', headerText: 'Subject', width: 120 },
                            { field: 'Location', headerText: 'Location', width: 120 },
                            { field: 'StartTime', headerText: 'StartTime', width: 120, format: { type: 'dateTime', format: 'M/d/y hh:mm a' } },
                            { field: 'EndTime', headerText: 'EndTime', width: 120, format: { type: 'dateTime', format: 'M/d/y hh:mm a' } },
                        ]
                    });
                    grid.appendTo(document.querySelector('#grid'));
                    scheduleObj.element.style.display = 'none';
                }
            } else {
                var gridObj = (document.querySelector('#grid')).ej2_instances;
                if (gridObj && gridObj.length > 0 && !gridObj[0].isDestroyed) {
                    gridObj[0].destroy();
                }
                scheduleObj.element.style.display = 'block';
            }
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Search Events in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This example showcases the search results of Scheduler appointments in a grid. When the user provides the
            search string on appropriate fields, the resulting event collection based on the search criteria will be
            displayed in a Grid.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, the search text value is compared with the event field values of Scheduler DataSource and then
            the filtered resultant event data collection is assigned to the DataSource of Grid.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Search Events Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Search Events in ASP.NET MVC Scheduler Control</h1>
                }