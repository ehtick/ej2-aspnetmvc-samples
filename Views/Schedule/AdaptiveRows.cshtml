@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("650px").CssClass("adaptive-rows").RowAutoHeight(true).SelectedDate(new DateTime(DateTime.Today.Year, 8, 2)).CurrentView(View.TimelineWeek).Views(view => { view.Option(View.TimelineDay).Add(); view.Option(View.TimelineWeek).Add(); }).Group(group => group.EnableCompactView(false).Resources((string[])ViewData["ResourceNames"])).Resources(res => { res.DataSource(ViewData["RoomDatas"]).Field("RoomId").Title("Room Type").Name("MeetingRoom").TextField("name").IdField("id").ColorField("color").AllowMultiple(true).Add(); }).EventSettings(e => e.Fields(f => f.Subject(sub => sub.Name("Subject").Title("Summary")).Location(loc => loc.Name("Location").Title("Location")).Description(des => des.Name("Description").Title("Comments")).StartTime(st => st.Name("StartTime").Title("From")).EndTime(et => et.Name("EndTime").Title("To"))).DataSource(ViewData["datasource"])).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 100%">
                        @Html.EJS().CheckBox("adaptive-rows").Change("onChange").Checked(true).Label("Row Auto Height").Render()
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <style>
        .e-schedule .e-timeline-view .e-resource-left-td {
            width: 120px;
        }

        .e-schedule .e-timeline-view .e-resource-text {
            padding-left: 20px;
        }

        .e-schedule .e-timeline-view .e-block-appointment {
            align-items: center;
            display: flex;
            justify-content: center;
        }
        
    </style>
    <script type="text/javascript">
        function onChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.rowAutoHeight = args.checked;
        }
    </script>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Row Auto Height in ASP.NET MVC Scheduler control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This example showcases how the work-cells of Scheduler auto-adjust its height based on the number of
            appointments present in those time ranges.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, <code>rowAutoHeight</code> property is set as <code>true</code> to auto-adjust the height of work cells based
            on the number of appointments present in the same time ranges. Also, this functionality is applicable only on
            all the timeline views as well as on the calendar month view. When this option is disabled, the height of the
            work cells remains static and at the time of exceeding appointments count, the <code>+n more</code> text indicator
            will be shown at the bottom of the cells.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Scheduler Row Auto Height Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Row Auto Height in ASP.NET MVC Scheduler Control</h1>
                }