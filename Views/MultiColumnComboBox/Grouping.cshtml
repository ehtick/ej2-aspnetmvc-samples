@using Syncfusion.EJ2.MultiColumnComboBox
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="control-wrapper">
            <div style='padding-top:30px;'>
                <label>Select a product</label>
                @Html.EJS().MultiColumnComboBox("grouping").Placeholder("e.g. Laptop").Fields(new MultiColumnComboBoxFieldSettings
                { Text = "Name", Value = "Name", GroupBy = "Category" }).Columns(col =>
                {
                    col.Field("Name").Header("Name").Width("110").Add();
                    col.Field("Price").Header("Price").Width("85").Add();
                    col.Field("Availability").Header("Availability").Width("98").Add();
                    col.Field("Category").Header("Category").Width("95").Add();
                    col.Field("Rating").Header("Rating").Width("70").Add();
                }).PopupHeight("210px").PopupWidth("500px").AllowSorting(false).DataSource((IEnumerable<Products>)ViewData["data"]).Render()
            </div>
        </div>
    </div>
    @*custom code start*@
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 250px;
        }

        @@media only screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }
    </style>
    @*custom code end*@
}

@section Meta{
    <meta name="description" content="This example demonstrates the grouping in ASP.NET MVC MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates grouping feature of the MultiColumn Combobox.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The MultiColumn ComboBox allows to group the relevant items under a corresponding category by mapping the <code>GroupBy</code> property in the <code>MultiColumnComboBoxFieldSettings</code> which allows to load the list of employees. In this sample, the employee data is grouped against <code>Category</code> column, which illustrates how the employee details are grouped based on its category.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC MultiColumn ComboBox grouping Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of grouping in ASP.NET MVC MultiColumn ComboBox Control</h1>
}