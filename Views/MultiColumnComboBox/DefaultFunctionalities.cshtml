@using Syncfusion.EJ2.MultiColumnComboBox
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div style='padding-top:30px;'>
                <label>Select a product</label>
                @Html.EJS().MultiColumnComboBox("multicolumnDefault").Placeholder("Select any product").ShowClearButton(true).Fields(new MultiColumnComboBoxFieldSettings
                { Text = "Name", Value = "Category" }).Columns(col =>
                {
                    col.Field("Name").Header("Name").Width("110").Add();
                    col.Field("Price").Header("Price").Width("85").Add();
                    col.Field("Availability").Header("Availability").Width("98").Add();
                    col.Field("Category").Header("Category").Width("95").Add();
                    col.Field("Rating").Header("Rating").Width("70").Add();
                }).PopupHeight("220px").PopupWidth("500px").Change("valueChange").Value("Electronics").Text("Smartphone").DataSource((IEnumerable<Products>)ViewData["data"]).Render()
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%; margin:10px">
            <tr>
                <td class="left-side">Value</td>
                <td>:<span id='value' class="right-side">Electronics</span></td>
            </tr>
            <tr>
                <td class="left-side">Text</td>
                <td>:<span id='text' class="right-side">Laptop</span></td>
            </tr>
        </table>
    </div>
    @*custom code start*@
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 250px;
        }

        @@media only screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }

        .property-section .right-side {
            padding-left: 10px;
        }

        .property-section .left-side {
            padding: 5px;
            width: 25%
        }
    </style>
    @*custom code end*@
    <script>
        function valueChange() {
            var muliticolumnObj = document.getElementById('multicolumnDefault').ej2_instances[0];
            var value = document.getElementById('value');
            var text = document.getElementById('text');
            value.innerHTML = muliticolumnObj.value ? muliticolumnObj.value.toString() : 'null';
            text.innerHTML = muliticolumnObj.text ? muliticolumnObj.text.toString() : 'null';
        }
    </script>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the default functionalities of the <code>MultiColumn ComboBox</code>.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The <code>MultiColumn ComboBox</code> allows the user to display detailed information about employees in multiple columns. In the above sample, type any character in the MultiColumn ComboBox or click the dropdown icon to choose an employee from the options available in the list. The selected item's <code>Value</code> and <code>Text</code> property values will be shown in the property panel.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC MultiColumn ComboBox Default Functionalities Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC MultiColumn ComboBox Control</h1>
}