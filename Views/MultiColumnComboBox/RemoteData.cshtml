@using Syncfusion.EJ2.MultiColumnComboBox
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class='control-wrapper'>
            <div style='padding-top:40px;'>
                <label>Select an employee</label>
                @Html.EJS().MultiColumnComboBox("remote").Placeholder("eg. Andrew").DataSource(obj => obj.Url("https://ej2services.syncfusion.com/production/web-services/api/Employees").Adaptor(
                "WebApiAdaptor").CrossDomain(true)).Fields(new MultiColumnComboBoxFieldSettings { Text = "FirstName", Value = "EmployeeID" }).Columns(col =>
                {
                    col.Field("EmployeeID").Header("Employee ID").Width("120").Add();
                    col.Field("FirstName").Header("Name").Width("130").Add();
                    col.Field("Designation").Header("Designation").Width("120").Add();
                    col.Field("Country").Header("Country").Width("90").Add();
                }).PopupHeight("210px").PopupWidth("500px").AllowSorting(false).Query((string)ViewData["query"]).Render()
            </div>
        </div>
    </div>
    @*custom code start*@
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 250px;
        }

        @@media only screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }
    </style>
    @*custom code end*@
}

@section Meta{
    <meta name="description" content="This example demonstrates the data-binding in ASP.NET MVC MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the remote data-binding supported in the MultiColumn ComboBox.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>The MultiColumn ComboBox loads the remote data services through the <code>DataSource</code> property. It supports data types such as <code>JavaScript object arrays</code> or <code>DataManager</code>.</p>
        <p>The <code>DataManager</code>, act as an interface between service endpoint and MultiColumn ComboBox will require the following minimal information to interact with the service endpoint properly.</p>
        <ul>
            <li><code>DataManager{'->'}url</code> - Defines the service endpoint to fetch data.</li>
            <li><code>DataManager{'->'}adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used for
                remote binding.</li>
        </ul>
        <p>The adaptor is responsible for processing response and request from/to the service endpoint.
            <code>@@syncfusion/ej2-data</code> package provides some predefined adaptors which are designed to interact with particular
            service endpoints. They are:</p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>In this sample, remote data is bound to a collection of employees data as an instance of <code>DataManager</code> and <code>WebApiAdaptor</code>.</p>
    </div>
}
@section Title{
    <title>ASP.NET MVC MultiColumn ComboBox data-binding Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of data-binding in ASP.NET MVC MultiColumn ComboBox Control</h1>
}