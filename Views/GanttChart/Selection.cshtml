@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns
@{
    ViewData["Title"] = "Selection";
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">

            @(Html.EJS().Gantt("Selection").DataSource((IEnumerable<object>)ViewData["DataSource"]).Height("450px").HighlightWeekends(true)
                .AllowSelection(true).TreeColumnIndex(1)
                .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration").Progress("Progress")
                .Dependency("Predecessor").Child("SubTasks"))
                .LabelSettings(ls => ls.LeftLabel("TaskName"))
                .SelectionSettings(ss => ss.Mode(Syncfusion.EJ2.Grids.SelectionMode.Row).Type(Syncfusion.EJ2.Grids.SelectionType.Single).EnableToggle(false))
                .SplitterSettings(sp => sp.ColumnIndex(2))
                .ProjectStartDate("03/27/2024")
                .ProjectEndDate("07/06/2024")
                .EnableHover(true)
                .AllowResizing(true)
                .Render()
            )
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties">
            <tr>
                <td><div>Enable Hover</div></td>
                <td style="padding-right:150px;">
                    <div>
                        @Html.EJS().CheckBox("enableHover").Checked(true).Change("checkBoxChange").Render()
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Selection Mode
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionModeList").DataSource((IEnumerable<object>)ViewData["Data1"]).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("Row")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Selection Type
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionTypeList").DataSource((IEnumerable<object>)ViewData["Data2"]).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("Single")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="fontSize: 15px">
                        Toggle Selection
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 5px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("SelectionToggleList").DataSource((IEnumerable<object>)ViewData["Data3"]).PopupWidth("100px")
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value(false)
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 30%;">
                    <div>
                        @(Html.EJS().Button("Update").Content("Update").Render())
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        document.getElementById('Update').onclick = function () {
            var ganttObj = document.getElementById("Selection").ej2_instances[0];
            var mode = SelectionModeList.value;
            var type = SelectionTypeList.value;
            var toggleList = document.getElementById("SelectionToggleList").ej2_instances[0];
            var toggle = toggleList.value;
            ganttObj.selectionSettings.mode = mode;
            ganttObj.selectionSettings.type = type;
            ganttObj.selectionSettings.enableToggle = toggle;
        };
        function checkBoxChange() {
            var ganttObj = document.getElementById("Selection").ej2_instances[0];
            var checkBox = document.getElementById('enableHover').ej2_instances[0];
            if (checkBox.checked) {
                ganttObj.enableHover = true;
            } else {
                ganttObj.enableHover = false;
            }
        }
    </script>
    <style>
        #hovercheckbox .e-checkbox-wrapper {
            padding: 0px !important;
        }
    </style>

}

@section ActionDescription{
    <div id="action-description">
        <p> This sample showcases the selection feature in the Gantt Chart. It allows highlighting rows or cells.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET MVC Gantt control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            In this demo sample, the selection functionality is configured in the Gantt Chart. The selection type can be
            configured using the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_Type">SelectionSettings.Type</a>
            property:
        </p>
        <ul>
            <li><code>Single</code> - Allows selection of a single row or cell.</li>
            <li><code>Multiple</code> - Enables selection of multiple rows or cells using Ctrl + click.</li>
        </ul>
        <p>
            The selection mode is set using the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_Mode">SelectionSettings.Mode</a>
            property:
            They are:
        </p>
        <ul>
            <li><code>Row</code> - Allows selection of entire rows.</li>
            <li><code>Cell</code> - Allows selection of individual cells.</li>
            <li><code>Both</code> - Enables selection of both rows and cells simultaneously.</li>
        </ul>
        <p>
            Toggle selection is supported through the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.GanttSelectionSettings.html#Syncfusion_EJ2_Gantt_GanttSelectionSettings_EnableToggle">selectionSettings.EnableToggle</a>
            property, which allows deselecting a selected item by clicking it again.
        </p>
        <p>
            The <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableHover">EnableHover</a>
            highlights
            the current row, header cell, and timeline cell on mouse hover, improving visual feedback during interaction.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Gantt Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET MVC Gantt Control</h1>
                }