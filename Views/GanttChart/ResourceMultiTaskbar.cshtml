@{
    ViewData["Title"] = "ResourceMultiTaskbar";
}

@section ControlsSection{
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div style="display: flex;">
                <div style="display: flex;">
                    <label class="overlap" for="checked" style="margin:0px 5px 0px 0px;font-size: 15px;"> Allow Taskbar Drag And Drop </label>
                    <div>
                        @Html.EJS().Switch("checked").Change("dragDropChange").Render()
                    </div>
                </div>
                <div style="display: flex;">
                    <label class="overlap" for="unchecked" style="margin:0px 5px 0px 5px;font-size: 15px;"> Allow Taskbar Overlap </label>
                    <div>
                        @Html.EJS().Switch("unchecked").Checked(true).Change("overlapChange").Render()
                    </div>
                </div>
            </div>
            <div>
                @(Html.EJS().Gantt("ResourceMultiTaskbar").DataSource((IEnumerable<object>)ViewData["DataSource"]).Height("450px")
            .ViewType(Syncfusion.EJ2.Gantt.ViewType.ResourceView).HighlightWeekends(true).AllowSelection(true).TaskType(Syncfusion.EJ2.Gantt.TaskType.FixedWork).AllowResizing(true).EnableMultiTaskbar(true).ShowOverAllocation(true)
            .TaskFields(ts => ts.Id("TaskId").Name("TaskName").Work("Work").StartDate("StartDate").EndDate("EndDate").Duration("Duration").Progress("Progress")
            .Dependency("Predecessor").ResourceInfo("Resources").ExpandState("IsExpand").Child("SubTasks"))
            .TreeColumnIndex(1).ResourceFields(rf => rf.Id("ResourceId").Name("ResourceName").Unit("ResourceUnit").Group("ResourceGroup"))
            .EditSettings(es => es.AllowAdding(true).AllowEditing(true).AllowDeleting(true).AllowTaskbarEditing(true).ShowDeleteConfirmDialog(true))
            .Toolbar(new List<string>() { "Add", "Edit", "Update", "Delete", "Cancel", "ExpandAll", "CollapseAll" })
            .Resources((IEnumerable<object>)ViewData["Resources"])
            .Columns(col =>
            {
                col.Field("TaskId").Visible(false).Add();
                col.Field("TaskName").HeaderText("Name").Width(250).Add();
                col.Field("Work").HeaderText("Work").Add();
                col.Field("Progress").Add();
                col.Field("ResourceGroup").HeaderText("Group").Add();
                col.Field("StartDate").Width(100).Add();
                col.Field("Duration").Width(100).Add();
            })
            .LabelSettings(ls => ls.TaskLabel("TaskName")).SplitterSettings(sp => sp.ColumnIndex(2))
            .ProjectStartDate("03/24/2024").ProjectEndDate("05/18/2024")
            .Render()
            )
            </div>
        </div>
    </div>
    <style>

        .fluent2 .overlap,
        .fluent2-dark .overlap {
            padding: 5px;
        }

        .fluent2 .overlap,
        .fluent2-dark .overlap {
            padding: 5px;
        }

        .fluent2-highcontrast .overlap {
            padding-top: 6px;
        }

        .e-bigger .overlap
        {
            margin: 5px 5px 0px 5px !important;
        }
    </style>
    <script>
        function dragDropChange(args) {
            var ganttObj = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            if (args.checked) {
                ganttObj.allowTaskbarDragAndDrop = true;
            } else {
                ganttObj.allowTaskbarDragAndDrop = false;
            }
        }
        function overlapChange(args) {
            var ganttObj = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            if (args.checked) {
                ganttObj.allowTaskbarOverlap = true;
            } else {
                ganttObj.allowTaskbarOverlap = false;
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how to visualize a list of tasks assigned to a resource within a collapsed parent row. It also allows modifying task scheduling actions such as dragging, left resizing, and progress editing while keeping the parent row collapsed.
            This functionality can be enabled by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableMultiTaskbar">EnableMultiTaskbar</a> property to <code>true</code>.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Resource Multi Taskbar in ASP.NET MVC Gantt control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            This example demonstrates how to enable taskbar drag-and-drop functionality for reassigning tasks between resources vertically by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowTaskbarDragAndDrop">AllowTaskbarDragAndDrop</a> to true.  Additionally, you can prevent taskbar overlap within a resource's tasks by disabling the  <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowTaskbarOverlap">AllowTaskbarOverlap</a> property.
        </p>
        <p>
            In this example, resources are assigned to tasks using predefined resource IDs, allowing efficient task distribution. The resource details are displayed using the LabelSetting <code>LabelSettings</code> property.
            You can also perform CRUD operations on resource allocation using toolbar actions, considering availability and task complexity.
        </p>
        <p>The resources and their assigned tasks are grouped into categories. Resources can be mapped using the following <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_ResourceFields">ResourceFields:</a>.</p>
        <p><code>ID</code>: Maps the resource ID.</p>
        <p><code>Name</code>: Maps the resource name.</p>
        <p><code>Unit</code>: Maps the resource unit.</p>
        <p><code>Group</code>: Maps the resource group.</p>
    </div>
}

@section Title{
    <title>ASP.NET MVC Gantt Resource Multi Taskbar Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Resource Multi Taskbar in ASP.NET MVC Gantt Control</h1>
}
