@using Syncfusion.EJ2
@{
    ViewData["Title"] = "Filtering";
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @(Html.EJS().Gantt("Filtering").DataSource((IEnumerable<object>)ViewData["DataSource"]).DateFormat("MM/dd/yyyy hh:mm:ss")
                        .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration")
                        .Dependency("Predecessor").Child("SubTasks")).Columns(col =>
                        {
                            col.Field("TaskName").HeaderText("Task Name").Width(250).ClipMode(Syncfusion.EJ2.Grids.ClipMode.EllipsisWithTooltip).Add();
                            col.Field("StartDate").Add();
                            col.Field("Duration").Add();
                            col.Field("EndDate").Add();
                            col.Field("Predecessor").HeaderText("Predecessor").Add();
                        })
                        .FilterSettings(f => f.Type(Syncfusion.EJ2.Gantt.FilterType.Menu))
                        .TreeColumnIndex(0).AllowFiltering(true).IncludeWeekend(true).Height("450px")
                        .TimelineSettings(tl => tl.TopTier(tt => tt.Format("MMM dd, yyyy").Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Day))
                        .BottomTier(bt => bt.Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Hour).Format("h.mm a")).TimelineUnitSize(60))
                        .SplitterSettings(ss => ss.ColumnIndex(4)).DurationUnit(Syncfusion.EJ2.Gantt.DurationUnit.Hour)
                        .DayWorkingTime(dw =>
                        {
                            dw.From(0).To(24).Add();
                        })
                        .LabelSettings(ls => ls.RightLabel("TaskName")).ProjectStartDate("07/16/1969 01:00:00")
                        .ProjectEndDate("07/25/1969 00:00:00").ActionComplete("actionComplete").Render()
            )
        </div>
        <div style="float: right; margin:10px 10px 0px 0px;">
            Source:
            <a href="https://en.wikipedia.org/wiki/Apollo_11#Launch_and_flight_to_lunar_orbit" target='_blank'>https://en.wikipedia.org/</a>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td class="left-side">Filter Type</td>
                <td>
                    @Html.EJS().DropDownList("FilterType").DataSource((IEnumerable<object>)ViewData["typedropdata"]).Value("Menu").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "type" }).Change("Change").Render()
                </td>
            </tr>
            <tr>
                <td class="left-side">Hierarchy Mode</td>
                <td>
                    @Html.EJS().DropDownList("FilterMode").DataSource((IEnumerable<object>)ViewData["modedropData"]).Value("Parent").Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "id", Value = "type" }).Change("ChangeMode").Render()
                </td>
            </tr>
        </table>
    </div>
    <script>
        function Change(e) {
            var type = e.value;
            var gantt = document.getElementById("Filtering").ej2_instances[0];
            gantt.filterSettings.type = type;
        }
        function ChangeMode(e) {
            var type = e.value;
            var gantt = document.getElementById("Filtering").ej2_instances[0];
            gantt.filterSettings.hierarchyMode = type;
        }
        function actionComplete(args) {
            var gantt = document.getElementById("Filtering").ej2_instances[0];
            if (args.requestType == "filterafteropen" && (args.columnName === "StartDate" || args.columnName === "EndDate") && gantt.filterSettings.type === "Menu") {
                args.filterModel.dlgDiv.querySelector('.e-datetimepicker').ej2_instances[0].min = new Date(1969, 5, 1);
                args.filterModel.dlgDiv.querySelector('.e-datetimepicker').ej2_instances[0].max = new Date(1969, 8, 30);
                args.filterModel.dlgDiv.querySelector('.e-datetimepicker').ej2_instances[0].showTodayButton = false;
                args.filterModel.dlgDiv.querySelector('.e-datetimepicker').ej2_instances[0].dataBind();
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the manned lunar mission, which landed the first human on the Moon using the Apollo 11 spacecraft in the year 1969. It also demonstrates the filtering feature available in the Gantt Chart. You can filter a particular column using the filter menu available in the columns. This sample is also enabled with the toolbar searching option to filter the Gantt content across all the columns.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Filtering in ASP.NET MVC Gantt control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            The filtering feature enables the user to view reduced amount of records based on filter criteria. The column
            menu filtering can be enabled by setting <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.Gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowFiltering">AllowFiltering</a> property as <code>true</code> and toolbar
            search box can
            be enabled
            by including the search item in the <code>Toolbar</code> property.
        <p>Gantt supports the following filter types. They are </p>
        <ul>
            <li><code>Menu</code></li>
            <li><code>Excel</code></li>
        </ul>
        Gantt Chart also provides support for a set of filtering modes with <code>HierarchyMode</code> property. The
        below are the
        type of filter mode available in Gantt Chart.
        <li>
            <code>Parent</code> - This is the default filter hierarchy mode in Gantt Chart. The filtered records are
            displayed with its
            parent records, if the filtered records not have any parent record then the filtered record alone will be
            displayed.
        </li>
        <li>
            <code>Child</code> - The filtered records are displayed with its child record, if the filtered records do
            not have any
            child record then only the filtered records are displayed.
        </li>
        <li>
            <code>Both</code> - The filtered records are displayed with its both parent and child record. If the
            filtered records do
            not have any parent and child record then only the filtered records are displayed.
        </li>
        <li><code>None</code> - Only the filtered records are displayed.</li>
        </p>
    </div>
}

@section Title{
    <title>ASP.NET MVC Gantt Filtering Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Filtering in ASP.NET MVC Gantt Control</h1>
}
