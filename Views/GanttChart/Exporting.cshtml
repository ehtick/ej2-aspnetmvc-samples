@using Syncfusion.EJ2
@{
    ViewData["Title"] = "Exporting";
}

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            <div>
                @(Html.EJS().Gantt("GanttExport")
                .DataSource((IEnumerable<object>)ViewData["DataSource"])
                .AllowExcelExport(true)
                .AllowPdfExport(true)
                .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration")
                    .Progress("Progress").Dependency("Predecessor").Child("SubTasks").ResourceInfo("ResourceId"))
                .Toolbar(new List<string>() { "ExcelExport", "CsvExport", "PdfExport" })
                .AllowSelection(true)
                .GridLines(Syncfusion.EJ2.Gantt.GridLine.Both)
                .Height("450px")
                .Holidays(hol =>
                {
                    hol.From("04/04/2024").To("04/04/2024").Label("Local Holiday").Add();
                    hol.From("04/19/2024").To("04/19/2024").Label("Good Friday").Add();
                    hol.From("04/30/2024").To("04/30/2024").Label("Release Holiday").Add();
                })
                .EventMarkers(em =>
                {
                    em.Day("04/02/2024").Label("Project starts").Add();
                    em.Day("04/09/2024").Label("Design phase").Add();
                    em.Day("04/19/2024").Label("Research phase").Add();
                    em.Day("05/23/2024").Label("Production phase").Add();
                    em.Day("06/20/2024").Label("Sales and marketing phase").Add();
                })
                .TreeColumnIndex(1)
                .ResourceFields(rf => rf.Id("ResourceId").Name("ResourceName"))
                .Resources((IEnumerable<object>)ViewData["Resources"])
                .HighlightWeekends(true)
                .Columns(col =>
                {
                    col.Field("TaskId").Visible(false).Add();
                    col.Field("TaskName").HeaderText("Task Name").Add();
                })
                .TimelineSettings(tl => tl.TopTier(tt =>
                    tt.Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Week).Format("MMM dd, y")).
                    BottomTier(bt => bt.Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Day)))
                .LabelSettings(ls => ls.LeftLabel("TaskName"))
                .ToolbarClick("toolbarClick")
                .ProjectStartDate("03/25/2024")
                .ProjectEndDate("07/28/2024")
                .Render()
            )
            </div>
            <style>

                .fluent2 #export,
                .fluent2-dark #export {
                    padding: 7px;
                }
            </style>
            <script>
                function toolbarClick(args) {
                    if (args.item.id === "GanttExport_excelexport") {
                        this.excelExport();
                    }
                    else if (args.item.id === "GanttExport_csvexport") {
                        this.csvExport();
                    }
                    else if (args.item.id === "GanttExport_pdfexport") {
                        this.pdfExport();
                    }
                }
            </script>
        </div>
    </div>
});
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates client-side exporting of the Gantt, which allows you to export Gantt data to Excel, PDF and CSV formats. Using the Gantt toolbar buttons, you can export Gantt data to the desired format. </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Exporting in ASP.NET MVC Gantt control. Explore here for more details."/>
                }

@section Description{
        <div id="description">
            <p>Gantt supports client-side exporting, which allows you to export its data to the Excel, PDF and CSV formats. </p>
            <p>In this demo, we have defined actions in the <code><a target="_blank" class="code" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Gantt.Gantt.html#Syncfusion_EJ2_Gantt_Gantt_ToolbarClick" aria-label="toolbarClick">toolbarClick<span class="sr-only">opens in a new tab</span></a></code>
             event to export the Gantt data using the <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/gantt/#excelexport" aria-label="excelExport">excelExport<span class="sr-only">opens in a new tab</span></a></code>, 
             <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/gantt/#pdfexport" aria-label="pdfExport">pdfExport<span class="sr-only">opens in a new tab</span></a></code> and
             <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/gantt/#csvexport" aria-label="csvExport">csvExport<span class="sr-only">opens in a new tab</span></a></code> methods.</p>
        </div>
}

@section Title{
                    <title>ASP.NET MVC Gantt Exporting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Exporting in ASP.NET MVC Gantt Control</h1>
                }
