@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns
@{
    ViewData["Title"] = "SortingAPI";
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">

            @(Html.EJS().Gantt("SortingAPI").DataSource((IEnumerable<object>)ViewData["DataSource"]).Height("450px").HighlightWeekends(true)
                .AllowSorting(true).TreeColumnIndex(1)
                .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration").Progress("Progress")
                .Dependency("Predecessor").Child("SubTasks"))
                .Columns(col =>
                {
                    col.Field("TaskId").HeaderText("ID").Width(80).Add();
                    col.Field("TaskName").Width(250).Add();
                    col.Field("StartDate").Add();
                    col.Field("EndDate").Add();
                    col.Field("Duration").Add();
                    col.Field("Progress").Add();
                })
                .LabelSettings(ls => ls.LeftLabel("TaskName"))
                .SplitterSettings(sp => sp.ColumnIndex(2))
                .ProjectStartDate("03/25/2024")
                .ProjectEndDate("07/28/2024")
                .Render()
            )
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties">
            <tr>
                <td style="width: 100%">
                    <div style="font-size: 15px;">
                        Column
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 10px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("Columns").DataSource((IEnumerable<object>)ViewData["Data1"])
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("TaskId")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="font-size: 15px;">
                        Direction
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%;padding-right: 10px">
                    <div style="width: 150px">
                        @(Html.EJS().DropDownList("Direction").DataSource((IEnumerable<object>)ViewData["Data2"])
                            .Fields(new DropDownListFieldSettings { Text = "type", Value = "id" }).Value("Ascending")
                            .Render()
                        )
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 100%">
                    <div style="width: 200px">
                        @(Html.EJS().Button("Sort").Content("Sort").Render())
                        @(Html.EJS().Button("Clear").Content("Clear").Render())
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        document.getElementById('Sort').onclick = function () {
            var ganttObj = document.getElementById("SortingAPI").ej2_instances[0];
            var columnName = Columns.value;
            var sortType = Direction.value;
            ganttObj.sortModule.sortColumn(columnName, sortType, false);
        };
        document.getElementById('Clear').onclick = function () {
            var ganttObj = document.getElementById("SortingAPI").ej2_instances[0];
            ganttObj.clearSorting();
        };
    </script>

}

@section ActionDescription{
    <div id="action-description">
        <p>
            The sorting feature enables you to order data in a particular direction. It can be enabled by setting
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowSorting">AllowSorting</a> to <code>true</code>.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Sorting API in ASP.NET MVC Gantt control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            The sorting feature enables you to order data in a particular direction. It can be enabled by setting the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowSorting">AllowSorting</a> to true.
        </p>
        <p>
            To sort a Gantt column, click the column header. The icons (ascending) and (descending) specify the sort
            direction of a column.
        </p>
        <p>
            By default, the multi-sorting feature is enabled in Gantt. To sort multiple columns, hold the
            <strong>CTRL</strong> key, and then click the column header. To clear sort for a column, hold the
            <strong>SHIFT</strong> key, and then click the column header.
        </p>
        <p>
            In this demo, select the column and direction from the properties panel, and then click the Sort button. Use the
            Clear button to remove sort for the sorted column.
        </p>
    </div>

}

@section Title{
                    <title>ASP.NET MVC Gantt Sorting API Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Sorting API in ASP.NET MVC Gantt Control</h1>
                }