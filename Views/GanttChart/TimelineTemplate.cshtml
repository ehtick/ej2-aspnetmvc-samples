@using Syncfusion.EJ2
@{
    ViewData["Title"] = "TimelineTemplate";
}

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">

            @(Html.EJS().Gantt("TaskLabelTemplate").DataSource((IEnumerable<object>)ViewData["DataSource"]).Height("450px").AllowSelection(true).TreeColumnIndex(1)
                .TaskFields(ts => ts.Id("TaskId").Name("TaskName").StartDate("StartDate").EndDate("EndDate").Duration("Duration").Progress("Progress")
                .Dependency("Predecessor").Child("SubTasks")).TimelineTemplate("#timelineTemplates").TimelineSettings(ts => ts.TopTier(tt => tt.Unit(Syncfusion.EJ2.Gantt.TimelineViewMode.Day)).TimelineUnitSize(200))
                .Columns(col =>
                {
                    col.Field("TaskId").Visible(false).Add();
                    col.Field("TaskName").Width(300).Add();
                    col.Field("StartDate").Add();
                    col.Field("EndDate").Add();
                    col.Field("Duration").Add();
                    col.Field("Progress").Add();
                })
                .LabelSettings(ls => ls.LeftLabel("TaskName"))
                .SplitterSettings(sp => sp.ColumnIndex(1))
                .ProjectStartDate("03/31/2024")
                .ProjectEndDate("04/23/2024")
                .Render()
            )

        </div>
    </div>

    <style>
        .e-gantt-single-timeline .e-gantt-tree-grid-pane .e-gridheader{
            height: 70px !important;
        }
        .e-gantt-single-timeline .e-gantt-tree-grid-pane .e-headercell{
            height: 70px !important;
        }
        .e-gantt .e-gantt-chart .e-timeline-header-container {
            height: 70px !important;
        }
        .e-gantt .e-gantt-chart .e-timeline-single-header-cell {
            height: 70px !important;
        }
        .e-header-cell-label.e-gantt-top-cell-text {
                background-color: #fff;
        }
        .fluent2-highcontrast .e-header-cell-label.e-gantt-top-cell-text,
        .fluent2-dark .e-header-cell-label.e-gantt-top-cell-text,
        .fluent-dark .e-header-cell-label.e-gantt-top-cell-text,
        .bootstrap5\.3-dark .e-header-cell-label.e-gantt-top-cell-text,
        .tailwind3-dark .e-header-cell-label.e-gantt-top-cell-text,
        .highcontrast .e-header-cell-label.e-gantt-top-cell-text,
        .material3-dark .e-header-cell-label.e-gantt-top-cell-text {
            background-color: #000;
        }
    </style>

    <script type="text/x-template" id="timelineTemplates">
        ${if(tier == 'topTier')}
        <div class="e-header-cell-label e-gantt-top-cell-text" style="width:100%; font-weight: bold;height: 100%;display: flex; justify-content: center ; align-items: center;   " title=${date}>
            <div style="width:100%; height: 100%; display: flex; justify-content: center ; align-items: center;flex-direction: column; ">
                <div style=" line-height: initial; font-weight: normal;">${weekDate(date)}</div>
                <div style=" line-height: normal; padding-top: 5px; padding-bottom: 2px; font-weight: normal;">${formatDate(date)}</div>
                <div style="width:20px; height: 20px; line-height: normal;">
                 <img style="width:100%; height:100%;" src=${imageString(date)}>
                </div>
            </div>
        </div>
        ${/if}
    </script>

    <script>

        // Create an Internationalization instance
        var intlObj = new ej.base.Internationalization();

        function formatDate(dateString) {
            var gantt = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            var date = gantt.locale === 'ar' ? parseArabicDate(dateString) : parseDateString(dateString);
            return intlObj.formatDate(date, { skeleton: 'E' });
        }
        function weekDate(dateString) {
            var gantt = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            var date = gantt.locale === 'ar' ? parseArabicDate(dateString) : parseDateString(dateString);
            return intlObj.formatDate(date, { skeleton: 'd' });
        }
        function imageString(date) {
            var gantt = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            var imageDate = gantt.locale === 'ar' ? parseArabicDate(date) : parseDateString(date);
            return '../Content/gantt/images/'+ imageDate.getDay() +".svg" ;
        }
        function convertArabicNumeralsToWestern(arabicNumerals) {
            var arabicToWesternMap = { '٠': '0', '١': '1', '٢': '2', '٣': '3', '٤': '4', '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9' };
            return arabicNumerals.replace(/[\u0660-\u0669]/g, (match) => {
                return arabicToWesternMap[match] || match; // Fallback to the original character if undefined 
            });
        }
        function parseArabicDate(arabicDateString) {
            // To convert the 'arabicDateString' Arabic Date to ISO Date format
            var normalizedDate = convertArabicNumeralsToWestern(arabicDateString);
            var parts = normalizedDate.split('/');
            var day = parseInt(parts[0], 10);
            var month = parseInt(parts[1], 10) - 1;
            var year = parseInt(parts[2], 10);
            return new Date(year, month, day);
        }
        function parseDateString(dateString) {
            // Check if the date string is in the format "DD.MM.YYYY"
            if (dateString.includes('.')) {
                const parts = dateString.split('.');
                const day = parseInt(parts[0], 10);
                const month = parseInt(parts[1], 10) - 1;
                const year = parseInt(parts[2], 10);
                return new Date(year, month, day);
            }
            // Fallback to default date parsing
            return new Date(dateString);
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample explains the way of rendering timeline template by mapping template elements to the<a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_TimelineTemplate">
                TimelineTemplate
            <span class="sr-only">opens in a new tab</span></a> property.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Timeline Template in ASP.NET MVC Gantt control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            In this demo, the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_TimelineTemplate">
                TimelineTemplate</a> property enables the customization of timeline cells with any HTML content, allowing for enhanced visual appeal and personalized functionality.
        <p>The template contains these context properties to design the timeline cells.</p>
        <li><code>date</code>: Defines the date of timeline date.</li>
        <li><code>value</code>: Defines the date value to display in the timeline.</li>
        <li><code>tier</code>: Defines the tier of timeline.</li>
        </p>
    </div>
}

@section Title{
    <title>ASP.NET MVC Gantt Timeline Template Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Timeline Template in ASP.NET MVC Gantt Control</h1>
}
