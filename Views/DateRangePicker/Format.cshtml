@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.DropDowns

@section ControlsSection{
    <div class="col-lg-12 control-section">
        <div class="col-lg-8 control-section">
            <div id="wrapper" class="dateRangepicker-section">
                <div id="dateRangepicker-control">
                    @Html.EJS().DateRangePicker("Rangepicker").Format("dd/MMM/yy hh:mm a").StartDate(ViewData["start"]).EndDate(ViewData["end"]).InputFormats(new string[] { "dd/MM/yyyy", "yyyyMMdd" }).Render()
                </div>
            </div>
        </div>
        <div id="propertySection" class="col-lg-4 property-section">
            <div class="dropdown-control" id="property" title="Properties">
                <div class="row">
                    <label class='example-label'>Choose a display format</label>
                    @(Html.EJS().DropDownList("displayFormatDatePicker")
            .Placeholder("Select a format")
            .Value("format1")
                        .DataSource((IEnumerable<DateRangeFormats>)ViewData["data"])
            .Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text = "Text", Value = "Id" })
            .Change("changeDateFormat")
            .Render())
                </div>
                <div class="row">
                    <label class='multi-label'>Choose input formats</label>
                    @(Html.EJS().MultiSelect("inputFormatsDatePicker")
            .Placeholder("e.g. MM/dd/yyyy")
            .Value(new string[] { "dd/MM/yyyy", "yyyyMMdd" })
                        .DataSource((string[])ViewData["formatData"])
            .Mode(Syncfusion.EJ2.DropDowns.VisualMode.CheckBox)
            .ShowSelectAll(true)
            .Change("changeInputFormats")
            .Render())
                </div>
            </div>
        </div>
    </div>
}

<script>
    function changeDateFormat(args) {
        var dateRangepickerObj = document.getElementById('Rangepicker').ej2_instances[0];
        let Format = args.itemData.Text;
        dateRangepickerObj.separator = (Format === 'yyyy/MM/dd HH:mm') ? 'to' : '-';
        dateRangepickerObj.format = Format;
    }

    function changeInputFormats(args) {
        var dateRangepickerObj = document.getElementById('Rangepicker').ej2_instances[0];
        dateRangepickerObj.inputFormats = args.value;
    }

</script>


@*custom code start*@
<style>
    #wrapper {
        max-width: 350px;
        margin: 30px auto;
        padding-top: 20px;
    }
</style>

@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            In this sample, the DateRangePicker has been configured with the <code> dd/MMM/yy hh:mm a</code> date time format. To change this current date time format, go to the properties panel at the right side and select a date format from the availbale options. For mobile mode touch the icon at the right side and select a date time format from the availbale options.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Format sample illustrates the support of custom date time format in the DateRangePicker component by
            using the <code>format</code> property. You can also change the date time format by selecting it from the format options in the properties
            panel.
        </p>
        <p>
            Furthermore, this example showcases the flexible date value parsing functionality available in DateRangePicker component.
            By utilizing the <code>InputFormats</code> property, users can enter dates in various formats, which will be automatically parsed and formatted according to the chosen date format.
        </p>
        <p>
            More information on the date format configuration can be found in the <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/daterangepicker/globalization/"
                                                                                     target="_blank" aria-label="documentation section">documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Format in ASP.NET MVC DateRangePicker control. Explore here for more details." />
}
@section Title{
    <title>ASP.NET MVC DateRangePicker Format Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Format in ASP.NET MVC DateRangePicker Control</h1>
}