@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{
    <div class="control-section" align="center">
        @Html.EJS().CircularGauge("container").Load("gaugeLoad").AnimationDuration(2000).Background("transparent").AxisLabelRender("onAxesLabelRendering").Axes(axes => axes
        .Radius("80%").StartAngle(210).EndAngle(150).Minimum(0).Maximum(8).LineStyle(lineStyle => lineStyle.Width(0).Color("transparent"))
        .LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Offset(10))
        .MinorTicks(minorTick => minorTick.Height(0).Width(0).Color("transparent")).MajorTicks(majorTick => majorTick.Interval(1).Width(0).Color("transparent"))
        .Pointers(pointer => pointer.Value(6.2).Radius("85%").Color("#E63B86").PointerWidth(10).NeedleStartWidth(10).NeedleEndWidth(5).Cap(cap => cap.Radius(0)).NeedleTail(needleTail => needleTail.Length("0%")).Animation(animation => animation.Enable(false)).Add())
        .Ranges(range => { range.Start(0).End(6.2).Color("#E63B86").StartWidth(22).EndWidth(22).Add(); 
            range.Start(6.2).End(8).Color("#E0E0E0").StartWidth(22).EndWidth(22).Add(); })
        .Add()).Render()
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        var value = ['0', '2', '5', '10', '20', '50', '100', '150', '200'];
        var rangeLinearGradient = {
            startValue: '0%',
            endValue: '100%',
            colorStop: [
                { color: '#9E40DC', offset: '0%', opacity: 1 },
                { color: '#d93c95', offset: '70%', opacity: 1 },
            ]
        };
        var pointerLinearGradient = {
            startValue: '0%',
            endValue: '100%',
            colorStop: [
                { color: '#9e40dc', offset: '0%', opacity: 0.2 },
                { color: '#9e40dc', offset: '70%', opacity: 0.5 }]
        };
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            sender.gauge.axes[0].ranges[0].linearGradient = rangeLinearGradient;
            sender.gauge.axes[0].pointers[0].linearGradient = pointerLinearGradient;
        }
        function onAxesLabelRendering(sender) {
            sender.text = value[sender.value];
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates how to introduce and position custom labels in a circular gauge. In addition, gradient colors are used on the circular gauge elements such as the pointer and range.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Custom Labels in ASP.NET MVC Circular Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure custom labels in the circular gauge. The label text can be modified using the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGauge.html#Syncfusion_EJ2_CircularGauge_CircularGauge_AxisLabelRender" aria-label="AxisLabelRender">AxisLabelRender<span class="sr-only">opens in a new tab</span></a> event which will be triggered everytime when a label is rendered.
        </p>
        <p>
            More information on the labels can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/circular-gauge/gauge-axes#labels" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}



@section Title{
    <title>ASP.NET MVC Circular Gauge Custom Labels Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Custom Labels in ASP.NET MVC Circular Gauge Control</h1>
}
