@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{
    <div class="control-section">
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-4">
                        <div id="container" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(3).Color("#01aebe")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px")))
                           .MajorTicks(majorTicks => majorTicks.Width(0).Height(0).Color("transparent")).MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers => pointers.Type(Syncfusion.EJ2.CircularGauge.PointerType.Marker).Value(80).MarkerShape(Syncfusion.EJ2.CircularGauge.GaugeShape.InvertedTriangle).Radius("100%").MarkerHeight(15).Color("rgb(0,171,169)").MarkerWidth(15).Add())
                           .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:10px;'>Marker pointer</div>").Angle(180).ZIndex("1").Radius("28%").Add())
                           .Add()).Render()
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div id="container2" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container2").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(3).Color("#ff5985")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px")))
                           .MajorTicks(majorTicks => majorTicks.Height(0).Interval(100).Color("transparent")).MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers => pointers.Type(Syncfusion.EJ2.CircularGauge.PointerType.RangeBar).Value(66).Radius("90%").Color("#ff5985").PointerWidth(10).Animation(animation => animation.Enable(true).Duration(1000)).Add())
                           .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:11px;'>Range bar pointer</div>").Angle(180).ZIndex("1").Radius("28%").Add())
                           .Add()).Render()
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div id="container3" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container3").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(3).Color("#9250e6")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px").Color("#9250e6")))
                           .MajorTicks(majorTicks => majorTicks.Height(0).Interval(100).Color("transparent")) .MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers => pointers.Value(70).Radius("100%").Color("#923C99").PointerWidth(6).Cap(cap => cap.Radius(0).Color("transparent")).NeedleTail(needleTail => needleTail.Length("4%").Color("#923C99")).Animation(animation => animation.Enable(true).Duration(900)).Add())
                           .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:10px;'>Needle pointer</div>").Angle(180).ZIndex("1").Radius("28%").Add())
                           .Add()).Render()
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-4">
                        <div id="container4" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container4").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(3).Color("#1E7145")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px").Color("#1E7145")))
                           .MajorTicks(majorTicks => majorTicks.Height(0).Interval(100).Color("transparent")).MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers => pointers.Value(80).Radius("80%").NeedleStartWidth(4).NeedleEndWidth(4).Color("green").PointerWidth(2).Cap(cap => cap.Radius(8).Color("green")).NeedleTail(needleTail => needleTail.Length("0%")).Animation(animation => animation.Enable(true).Duration(1000)).Add())
                           .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:29px;'>Customized pointer</div>").Angle(180).ZIndex("1").Radius("28%").Add())
                           .Add()).Render()
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div id="container5" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container5").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(3).Color("#e3a21a")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px").Color("#e3a21a")))
                           .MajorTicks(majorTicks => majorTicks.Height(0).Interval(100).Color("transparent")) .MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers =>
                           {
                               pointers.Value(80).Radius("60%").MarkerHeight(5).Color("#e3a21a").MarkerWidth(5).PointerWidth(10).Cap(cap => cap.Radius(8).Color("white").Border(border => border.Color("#e3a21a").Width(1))).NeedleTail(needleTail => needleTail.Length("20%").Color("#e3a21a")).Animation(animation => animation.Enable(true).Duration(1000)).Add();
                               pointers.Value(40).Radius("60%").MarkerHeight(5).Color("#ffb133").MarkerWidth(5).PointerWidth(10).Cap(cap => cap.Radius(8).Color("white").Border(border => border.Color("#ffb133").Width(1))).NeedleTail(needleTail => needleTail.Length("20%").Color("#e3a21a")).Animation(animation => animation.Enable(true).Duration(1000)).Add();
                           })
                           .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:22px;'>Multiple pointers</div>").Angle(180).ZIndex("1").Radius("32%").Add())
                           .Add()).Render()
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div id="container6" style="display: block; height: 250px;">
                            @Html.EJS().CircularGauge("container6").Load("onGaugeLoad").CenterY("40%").Background("transparent").Axes(axes => axes.Radius("90%").StartAngle(270).EndAngle(90)
                           .LineStyle(lineStyle => lineStyle.Width(0).Color("transparent")).LabelStyle(labelStyle => labelStyle.Position(Position.Outside).Font(font => font.Size("0px").Color("#067bc2")))
                           .MajorTicks(majorTicks => majorTicks.Height(0).Interval(100).Color("transparent")) .MinorTicks(minorTicks => minorTicks.Width(0).Height(0).Color("transparent"))
                           .Minimum(0).Maximum(100).Pointers(pointers =>
                           {
                               pointers.Value(40).Radius("100%").Color("#067bc2").PointerWidth(6).Cap(cap => cap.Radius(0).Color("transparent")).NeedleTail(needleTail => needleTail.Length("4%").Color("#067bc2")).Animation(animation => animation.Enable(false).Duration(100)).Add();
                               pointers.Value(40).Radius("100%").Type(PointerType.RangeBar).Color("#067bc2").PointerWidth(6).Animation(animation => animation.Enable(false).Duration(100)).Add();
                           })
                            .Annotations(annotations => annotations.Content("<div style='font-size:14px;margin-top:22px;'>Live Update</div>").Angle(180).ZIndex("1").Radius("32%").Add())
                            .Add()).Render()
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        function onGaugeLoad(args) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
        }

        var pointeGaugeInterval = setInterval(function () {
            var newVal = Math.random() * (90 - 20) + 20;
            if (document.getElementById('container3')) {
                document.getElementById('container3').ej2_instances[0].setPointerValue(0, 0, newVal);
            }
            else {
                clearInterval(pointeGaugeInterval);
            }
        }, 1000);
        var gaugeInterval = setInterval(function () {
            var newVal = Math.random() * (80 - 30) + 30;
            if (document.getElementById('container6')) {
                document.getElementById('container6').ej2_instances[0].setPointerValue(0, 0, newVal);
                document.getElementById('container6').ej2_instances[0].setPointerValue(0, 1, newVal);
            }
            else {
                clearInterval(gaugeInterval);
            }
        }, 1000);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the various pointer types available in the circular gauge.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Pointer Types in ASP.NET MVC Circular Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to customize the pointer for an axis in the circular gauge. The circular gauge supports a variety of pointers, including marker, needle, and range bar. Additionally, the pointer can be customized, and multiple pointers can also be enabled.
        </p>
        <p>
            More information on the pointers can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/circular-gauge/gauge-pointers" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}


@section Title{
    <title>ASP.NET MVC Circular Gauge Pointer Types Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Pointer Types in ASP.NET MVC Circular Gauge Control</h1>
}