@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{
    <script id='axisBackground' type="text/x-template">
        <div id='templateWrap'>
            <div style='margin-top: -37%;'>
                <img src="@Url.Content("~/Content/CircularGauge/Images/axis-background.png")" height='400' width='400' />
            </div>
        </div>
    </script>
    <div class="control-section" align="center">
        @Html.EJS().CircularGauge("container").Load("gaugeLoad").Loaded("loaded").Background("transparent").CenterY("65%").Axes(axes => axes
        .Radius("80%").StartAngle(0).EndAngle(0).LabelStyle(labelStyle => labelStyle.Font(font => font.Size("0px")))
        .Pointers(pointer => pointer.Radius("0%"))
        .LineStyle(lineStyle => lineStyle.Width(0).Color("transparent"))
        .MinorTicks(minorTick => minorTick.Width(0).Color("transparent")).MajorTicks(majorTick => majorTick.Width(0).Color("transparent")).Add()).Render()
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        var circulargauge;
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            circulargauge = sender.gauge;
        }

        function loaded(sender) {
            var axis = circulargauge.axes[0];
            axis.annotations = [
                {
                    angle: 0, radius: '0%', zIndex: '1',
                    content: "#axisBackground"
                },
                {
                    angle: 0, radius: '0%', zIndex: '1',
                    content: "<div id='subGauge' style='margin-left: -100%; margin-top: -50%;'></div>"
                },
                {
                    angle: 0, zIndex: '1',
                    radius: '0%',
                    content: "<div style='color:orange;margin-top: -88px;margin-left: -2px;font-size: 18px;'> 90</div>"
                }
            ];
            var subGauge1 = new ej.circulargauge.CircularGauge({
                width: '600px',
                height: '450px',
                background: 'transparent',
                axes: [{
                    labelStyle: { hiddenLabel: 'First', font: { fontFamily: 'inherit', color: 'White' } },
                    majorTicks: { height: 15, interval: 30 },
                    minorTicks: { height: 10, interval: 6 }, minimum: 0, maximum: 360,
                    pointers: [{
                        value: 90,
                        radius: '45%', markerWidth: 12, markerHeight: 12,
                        type: 'Marker', markerShape: 'Triangle', color: 'Orange',
                        animation: { enable: false }
                    }], startAngle: 0, endAngle: 0, radius: '60%', lineStyle: { width: 0 }
                }]
            });
            subGauge1.appendTo('#subGauge');
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates a circular gauge with an axis and a background image set for the axis.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Axis Background in ASP.NET MVC Circular Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the axis in the circular gauge with a background image. To accomplish this, the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeAnnotation.html" aria-label="annotations">annotations<span class="sr-only">opens in a new tab</span></a> is used and an image is set as the background content.
        </p>
        <p>
            More information on the annotations can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/circular-gauge/gauge-annotations" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}



@section Title{
    <title>ASP.NET MVC Circular Gauge Axis Background Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Axis Background in ASP.NET MVC Circular Gauge Control</h1>
}