@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{
    <div class="col-md-8 control-section">
        <div class="content-wrapper">
            @Html.EJS().CircularGauge("legend-container").Load("onGaugeLoad").Background("transparent").Title("Measure of wind speed in km/h").TitleStyle(titleStyle =>
            titleStyle.FontFamily("inherit")).LegendSettings(legend => legend.Visible(true).Position(Syncfusion.EJ2.CircularGauge.LegendPosition.Bottom).TextStyle(textStyle =>
            textStyle.FontFamily("inherit").Size("12px"))).Axes(axes => axes.Radius("80%").StartAngle(230).EndAngle(130).LabelStyle(labelStyle =>
            labelStyle.Position(Position.Inside).UseRangeColor(false).Font(font => font.FontFamily("inherit")))
            .Pointers(pointer => pointer.Value(70).Radius("60%").PointerWidth(8).Cap(cap => cap.Radius(7)).NeedleTail(needleTail => needleTail.Length("18%")).Add())
            .Ranges(range =>
                 {
                range.Start(0).End(5).Color("#ccffff").Radius("110%").LegendText("Light Air").Add();
                range.Start(5).End(11).Color("#99ffff").Radius("110%").LegendText("Light Breeze").Add();
                range.Start(11).End(19).Color("#99ff99").Radius("110%").LegendText("Gentle Breeze").Add();
                range.Start(19).End(28).Color("#79ff4d").Radius("110%").LegendText("Moderate Breeze").Add();
                range.Start(28).End(49).Color("#c6ff1a").Radius("110%").LegendText("Strong Breeze").Add();
                range.Start(49).End(74).Color("#e6ac00").Radius("110%").LegendText("Gale").Add();
                range.Start(74).End(102).Color("#ff6600").Radius("110%").LegendText("Storm").Add();
                range.Start(102).End(120).Color("#ff0000").Radius("110%").LegendText("Hurricane Force").Add();
            }).StartAngle(210).EndAngle(150).Minimum(0).Maximum(120).Radius("80%").LineStyle(lineStyle => lineStyle.Width(2))
            .MinorTicks(minorTick => minorTick.Height(8).Interval(10)).MajorTicks(majorTick => majorTick.Height(16).Color("#9E9E9E").Interval(20)).Add()).Render()
        </div>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div style="padding-left: 0px; font-size: 14px;" id="showLegend">Show Legend</div>
                    </td>
                    <td>
                        <div style="padding-top:0px; padding-left: 0px;">
                            @Html.EJS().CheckBox("enable").Change("onChange").Checked(true).Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div id="toggleLegend" style=" padding-left: 0px; font-size: 14px;">Show range when the legend item is toggled</div>
                    </td>
                    <td>
                        <div style="padding-left:0px;margin-top: -10px">
                            @Html.EJS().CheckBox("toggle").Change("onToggleChange").Checked(true).Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 60px">
                    <td>
                        <div class="property-text" style="margin-top: -5px; font-size: 14px; padding-left: 0px">Position</div>
                    </td>
                    <td>
                        <div style="margin-top: -5px; height: 40px;">
                            @Html.EJS().DropDownList("legendPosition").Index(0).Width("100%").DataSource((IEnumerable<object>)ViewData["legendPosition"]).Value("Bottom").Change("valueChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div class="property-text" style="padding-left: 0px; font-size: 14px; margin-top: -6px">Alignment</div>
                    </td>
                    <td>
                        <div style="margin-top: -5px; height: 40px;">
                            @Html.EJS().DropDownList("Alignment").Index(0).Width("100%").DataSource((IEnumerable<object>)ViewData["legendAlignment"]).Value("Center").Change("legendPositionValueChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 60px">
                    <td>
                        <div class="property-text" style="padding-left: 0px; font-size: 14px; margin-top: -5px">Shape</div>
                    </td>
                    <td>
                        <div style="margin-top: -5px; height: 40px;">
                            @Html.EJS().DropDownList("Shape").Index(0).Width("100%").DataSource((IEnumerable<object>)ViewData["legendShape"]).Value("Circle").Change("legendShapeValueChange").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <style>
        input.e-input.e-bigger, textarea.e-input.e-bigger, .e-bigger input.e-input, .e-bigger textarea.e-input, .e-input-group.e-bigger, .e-bigger .e-input-group, .e-input-group.e-control-wrapper.e-bigger, .e-bigger .e-input-group.e-control-wrapper {
            height: 100%;
            font-size: 14px;
            align-items: center;
        }
        .e-view.fluent2 #property .e-checkbox-wrapper, .e-view.fluent2-dark #property .e-checkbox-wrapper, .e-view.fluent2-highcontrast #property .e-checkbox-wrapper {
            padding-left: 0px;
        }
    </style>
    <script type="text/javascript">
        var circulargauge;
        function onGaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            circulargauge = sender.gauge;
        }

        function valueChange() {
            var legendPosition = document.getElementById('legendPosition').ej2_instances[0];
            circulargauge.legendSettings.position = legendPosition.value;
        };
        function legendPositionValueChange() {
            var legendAlignment = document.getElementById('Alignment').ej2_instances[0];
            circulargauge.legendSettings.alignment = legendAlignment.value;
        };
        function legendShapeValueChange() {
            var legendShape = document.getElementById('Shape').ej2_instances[0];
            circulargauge.legendSettings.shape = legendShape.value == "Inverted Triangle" ? "InvertedTriangle" : legendShape.value;
        };

        function onChange(args) {
            circulargauge.legendSettings.visible = args.checked;
        }
        function onToggleChange(args) {
            circulargauge.legendSettings.toggleVisibility = args.checked;
        }

    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample directs the visualization of moving wind types based on their speed via the legend of the circular gauge component. The visibility, shape, alignment, and position of the legend can all be customized.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Legend in ASP.NET MVC Circular Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            The legend provides useful information for interpreting what the circular gauge's axis range displays, and it can be represented in a variety of colors, shapes, and other identifiers depending on the data. To do so, use the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeLegendSettings.html" aria-label="LegendSettings">LegendSettings<span class="sr-only">opens in a new tab</span></a> and its properties.
        </p>
        <p>
            More information on the legend can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/circular-gauge/gauge-legend" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}




@section Title{
    <title>ASP.NET MVC Circular Gauge Legend Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Legend in ASP.NET MVC Circular Gauge Control</h1>
}