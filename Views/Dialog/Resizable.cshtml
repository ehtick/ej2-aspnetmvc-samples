@using Syncfusion.EJ2
@using Syncfusion.EJ2.Popups
@section ControlsSection{
    <div id="target" class="col-lg-12 control-section">
        @Html.EJS().Button("dialogBtn").CssClass("dlgbtn").Content("Open Dialog").Render()
        @Html.EJS().Dialog("resizeDialog").ResizeHandles(new List <string> () { "All" } ).Visible(true).AnimationSettings(new DialogAnimationSettings() { Effect = DialogEffect.None }).EnableResize(true).Header("Resize Me").Created("created").Close("dialogClose").Open("dialogOpen").ContentTemplate(@<div><span>This is a dialog with resizable support.</span></div>).ShowCloseIcon(true).CloseOnEscape(true).Width("300px").Target("#target").AllowDragging(true).Render()
    </div>
}
<style>
    .e-btn-hide {
        display: none;
    }
    /* custom code start */
    #control-container {
        padding: 0px !important;
    }

    #confirmDialog {
        height: 135px;
    }
    .dlgbtn {
        margin-right: 10px;
    }

    #container {
        height: 100%;
        min-height: 280px;
        position: relative;
    }

    @@media screen and (min-width: 150px) and (max-width: 480px) {
        .control-section {
            margin-bottom: 30px;
        }

        .control-wrapper {
            margin-bottom: 0px;
        }
    }
    .material #resizeDialog.e-dialog, .bootstrap #resizeDialog.e-dialog, 
    .bootstrap4 #resizeDialog.e-dialog {
        min-height: 125px;
    }
    .fabric #resizeDialog.e-dialog, .highcontrast #resizeDialog.e-dialog {
        min-height: 135px;
    }
    /* custom code end */
</style>
@section PreScripts {
    <script>
        var dialogObj;
        document.getElementById('dialogBtn').onclick = function () {
            dialogObj.show();
        };
        function dialogClose() {
            document.getElementById('dialogBtn').style.display = 'block';
        }
        function dialogOpen() {
            document.getElementById('dialogBtn').style.display = 'none';
        }
        function created() {
            dialogObj = this;
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the resize operation of the dialog control in all directions. To resize the modal dialog, select and resize a dialog using its handle (grip) or hover on any of the edges or border of the dialog within the sample container.
            The "open dialog" button is used to reopen the dialog if it is closed.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Users can create resizable modal dialog by setting the enableResize property to true, which is used to change the size of a dialog dynamically and view its content with expanded mode.
            The resizeHandles property can also be configured for which directions the dialog should resize.
            When you configure the target property along with the enableResize property, the dialog can be resized within its specified target container.
        </p>
    </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Resizable in ASP.NET MVC Dialog control. Explore here for more details."/>
                }

@*custom code end*@

@section Title{
                    <title>ASP.NET MVC Dialog Resizable Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Resizable in ASP.NET MVC Dialog Control</h1>
                }