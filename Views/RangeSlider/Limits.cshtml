@using Syncfusion.EJ2
@using Syncfusion.EJ2.Inputs
@using EJ2MVCSampleBrowser.Models
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="content-wrapper">
            <div class='sliderwrap'>
                <label class="userselect">MinRange Slider With Limits</label>
                @Html.EJS().Slider("minrange").Min(0).Max(100).Value(25).Type(SliderType.Default).Type(SliderType.MinRange).Enabled(true).Ticks(new SliderTicksData { Placement = Placement.Before, LargeStep = 20, SmallStep = 5, ShowSmallTicks = true }).Tooltip(new SliderTooltipData { IsVisible = true, Placement = TooltipPlacement.Before, ShowOn = TooltipShowOn.Focus }).Limits(new SliderLimitData { Enabled = true, MinStart = 10, MinEnd = 40 }).Render()
            </div>
            <div class='sliderwrap'>
                <label class="userselect">Range Slider With Limits</label>
                @Html.EJS().Slider("range").Min(0).Max(100).Value(ViewData["rangeValue"]).Type(SliderType.Range).Enabled(true).Ticks(new SliderTicksData { Placement = Placement.Before, LargeStep = 20, SmallStep = 5, ShowSmallTicks = true }).Tooltip(new SliderTooltipData { IsVisible = true, Placement = TooltipPlacement.Before, ShowOn = TooltipShowOn.Focus }).Created("created").Limits(new SliderLimitData { Enabled = true, MinStart = 10, MinEnd = 40, MaxStart = 60, MaxEnd = 90}).Render()
            </div>
        </div>
    </div>

    <div class="col-lg-4 property-section property-custom">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">MinStart</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().NumericTextBox("minStart").Value(10).Min(0).Max(100).Step(1).Change("minStartChange").Render()
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">MinEnd</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().NumericTextBox("minEnd").Value(40).Min(0).Max(100).Step(1).Change("minEndChange").Render()
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">MaxStart</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().NumericTextBox("maxStart").Value(60).Min(0).Max(100).Step(1).Change("maxStartChange").Render()
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">MaxEnd</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().NumericTextBox("maxEnd").Value(90).Min(0).Max(100).Step(1).Change("maxEndChange").Render()
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Lock First Handle</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().CheckBox("fixedOne").Change("fixOne").Render()
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Lock Second Handle</div>
                    </td>
                    <td style="width: 50%">
                        @Html.EJS().CheckBox("fixedSecond").Change("fixSecond").Render()
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script type="text/javascript">
        var minrangeObj;
        var rangeObj;
        function created() {
            minrangeObj = document.getElementById('minrange').ej2_instances[0];
            rangeObj = document.getElementById('range').ej2_instances[0];
            if (document.getElementById('right-pane')) {
                document.getElementById('right-pane').addEventListener('scroll', onScroll);
            }
        }

        // Eventlisteners to lock first handle of the both sliders
        function fixOne(args) {
            minrangeObj.limits.startHandleFixed = args.checked;
            rangeObj.limits.startHandleFixed = args.checked;
        }

        // Eventlisteners to lock second handle of the both sliders
        function fixSecond(args) {
            minrangeObj.limits.endHandleFixed = args.checked;
            rangeObj.limits.endHandleFixed = args.checked;
        }

        // Eventlisteners to change limit values for both sliders
        function minStartChange(args) {
            minrangeObj.limits.minStart = args.value;
            rangeObj.limits.minStart = args.value;
        }

        function minEndChange(args) {
            minrangeObj.limits.minEnd = args.value;
            rangeObj.limits.minEnd = args.value;
        }

        function maxStartChange(args) {
            minrangeObj.limits.maxStart = args.value;
            rangeObj.limits.maxStart = args.value;
        }

        function maxEndChange(args) {
            minrangeObj.limits.maxEnd = args.value;
            rangeObj.limits.maxEnd = args.value;
        }

        // Handler used to reposition the tooltip on page scroll
        function onScroll() {
            var slider = [minrangeObj, rangeObj];
            slider.forEach((slider) => {
                slider.refreshTooltip(slider.tooltipTarget);
            });
        }

    </script>




    <style>
        .content-wrapper {
            width: 52%;
            margin: 0 auto;
            min-width: 185px;
        }

        .sliderwrap {
            margin-top: 45px;
        }

        .e-bigger .content-wrapper {
            width: 80%;
        }

        .sliderwrap label {
            padding-bottom: 50px;
            font-size: 13px;
            font-weight: 500;
            margin-top: 15px;
        }

        .userselect {
            -webkit-user-select: none;
            /* Safari 3.1+ */
            -moz-user-select: none;
            /* Firefox 2+ */
            -ms-user-select: none;
            /* IE 10+ */
            user-select: none;
            /* Standard syntax */
        }

        .property-custom td {
            padding: 5px;
        }

        body.fluent2-highcontrast .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick,
        body.fluent2 .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick,
        body.fluent2-dark .sliderwrap .e-tick-before.e-scale.e-h-scale .e-tick {
            top: -5px;
        }
    </style>

}

@section Meta{
                    <meta name="description" content="This example demonstrates the Limits in ASP.NET MVC Range Slider control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the rendering of Slider component with limits. Drag the thumb over the bar for selecting the
            values between assigned limit values. Change the values in the property pane to set different limit values.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The limits are used to limit between certain range. When the limits are assigned, draggable limited area will be in the dark
            shadow color of the current theme. The limits APIs are explained below.
        </p>
        <p>
            <table>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_MinStart" aria-label="minStart">minStart<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to set minimum limit value for first handle.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_MinEnd" aria-label="minEnd">minEnd<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to set maximum limit value for first handle.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_MaxStart" aria-label="maxStart">maxStart<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to set minimum limit value for second handle.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_MaxEnd" aria-label="maxEnd">maxEnd<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to set maximum limit value for first handle.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_StartHandleFixed" aria-label="startHandleFixed">startHandleFixed<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to lock the first handle in the current position.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.SliderLimitData.html#Syncfusion_EJ2_Inputs_SliderLimitData_EndHandleFixed" aria-label="endHandleFixed">endHandleFixed<span class="sr-only">opens in a new tab</span></a>
                    </td>
                    <td>
                        - &nbsp;&nbsp;Used to lock the second handle in the current position.
                    </td>
                </tr>
            </table>
        </p>
        <p> In this demo, Limits with MinRange and range Slider is demonstrated.</p>
        <ul>
            <li>MinRange Slider – In this sample, the minimum and maximum limit of the slider is set to 10 and 40 respectively.</li>
            <li>
                Range Slider – In this sample, the minimum and maximum limit of the first handle is set to 10 and 40 respectively
                and the minimum and maximum limit of the second handle is set to 60 and 90 respectively.
            </li>
        </ul>
        <p>
            For more information, refer to the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.Slider.html#Syncfusion_EJ2_Inputs_Slider_Limits" aria-label="limits">limits<span class="sr-only">opens in a new tab</span></a> section from the documentation.
        </p>
    </div>
}


@section Title{
                    <title>ASP.NET MVC Range Slider Limits Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Limits in ASP.NET MVC Range Slider Control</h1>
                }
