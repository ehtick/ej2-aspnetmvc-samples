@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/goog.js"></script>
<script src="~/Scripts/StockChartData/googl.js"></script>
@section ControlsSection{
    @{
        var series = new[] { "Line", "Hilo", "HiloOpenClose", "Spline", "Candle" };
    }
    <div class="control-section" style="width: auto">
        <div style="display:block">
            @(Html.EJS().StockChart("container").Load("load").Title("Multiple Series").SeriesType(series)
            .PrimaryXAxis(xaxis =>xaxis.MajorGridLines(mg=>mg.Width(0)
            ).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct=>ct.Enable(true)))
            .PrimaryYAxis(yaxis =>yaxis.MajorTickLines(mt=>mt.Color("transparent").Height(0)
            ).LineStyle(ls=>ls.Color("transparent")).CrosshairTooltip(ct=>ct.Enable(true)).Interval(40))
             .Series(sr =>
             {
                 sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline).DataSource("data1").XName("x").YName("close").Name("GOOG").Add();
                 sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline).DataSource("data2").XName("x").YName("close").Name("GOOGL").Add();
             })
            .Crosshair(cr=>cr.Enable(true))
            .LegendSettings(legend => legend.Visible(true))
            .ChartArea(area => area.Border(br=>br.Width(0)))
            .Border(br => br.Width(0))
            .Render())
        </div>
    </div>
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #container {
            display: block;
        }
        #container_stock_border {
            pointer-events: none;
        }
    </style>
     @*custom code end*@
    <script src="~/Scripts/StockChartData/theme-color.js"></script>
    <script>
        var data1 = window.goog;
        var data2 = window.googl;
        var load = function (args) {
            args.stockChart.indicatorType = [];
            args.stockChart.trendlineType = [];
            loadStockChartTheme(args);
            args.stockChart.crosshair.lineType = 'Both';
        }
    </script>
}
  @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Multiple Series in ASP.NET MVC Stock Chart control. Explore here for more details."/>
                }
  @*custom code end*@
@section ActionDescription{
    <p>This sample visualizes the close value of multiple stock. Crosshair show the information about the data and period.</p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure stock chart to visualize the data for multiple stock. Stock Chart supports 6 major types of series namely <code>Line</code>, <code>Spline</code>, <code>Hilo</code>, <code>HiloOpenClose</code>, <code>Hollow Candle</code> and <code>Candle</code>. By using the series dropdown button in period selector you can navigate between the above listed series types.
    </p>
    <p>
        The legend is enabled, and you can use it to toggle the visibility of series in the stock chart. To customize the legend in the stock chart, use the <code>StockChartLegendSettings</code> property.
    </p>
    <p>
        More information about the series type can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/stock-chart/series-types" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Stock Chart Multiple Series Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multiple Series in ASP.NET MVC Stock Chart Control</h1>
                }