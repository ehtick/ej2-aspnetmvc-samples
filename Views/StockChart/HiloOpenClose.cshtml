@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/googl.js"></script>
@section ControlsSection{
    <div class="control-section">
        @(Html.EJS().StockChart("container").Load("load").Title("AAPL Stock Price").TooltipRender("tooltipRender")
        .PrimaryXAxis(xaxis =>xaxis.MajorGridLines(mg=>mg.Width(0)
        ).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct=>ct.Enable(true)))
        .PrimaryYAxis(yaxis =>yaxis.MajorTickLines(mt=>mt.Color("transparent").Height(0)
        ).LineStyle(ls=>ls.Color("transparent")).RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).LabelFormat("n0"))
        .Series(sr =>
        {
            sr.Name("google").Type(Syncfusion.EJ2.Charts.ChartSeriesType.HiloOpenClose).BearFillColor("#2ecd71").BullFillColor("#e74c3d").DataSource("data").XName("x").High("high").Low("low").Open("open").Close("close").Add();
        })
        .Crosshair(cr=>cr.Enable(true))
        .Tooltip(tp => tp.Enable(true).Shared(true).Position(Syncfusion.EJ2.Charts.TooltipPosition.Nearest))
        .ChartArea(area => area.Border(br=>br.Width(0)))
        .Border(br => br.Width(0))
        .Render())
    </div>
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #container {
            display: block;
        }
        #container_stock_border {
            pointer-events: none;
        }
    </style>
     @*custom code end*@
    <script src="~/Scripts/StockChartData/theme-color.js"></script>
    <script>
        var data = window.googl;
        var load = function (args) {
            loadStockChartTheme(args);
        }
        function tooltipRender(args) {
            if (args.text.split('<br/>')[4]) {
                var target = parseFloat(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0]);
                var value = (target / 100000000).toFixed(1) + 'B';
                args.text = args.text.replace(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0], value);
            }
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the OHLC in ASP.NET MVC Stock Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/stock-chart" aria-label="ASP.NET MVC Stock Chart">ASP.NET MVC Stock Chart<span class="sr-only">opens in a new tab</span></a> example visualizes the AAPL stock price with OHLC chart. Tooltip and crosshair show the information about the data and period.</p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the stock chart with <code>HILO Open Close</code> type series. The horizontal lines on the left and the right are used to show the open and close values of the stock, and the vertical line represents both high and low values.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover the chart or tap on it in touch enabled devices.
    </p>
    <p>
        More information about the series type can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/stock-chart/series-types" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
}



@section Title{
                    <title>ASP.NET MVC Stock Chart OHLC Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of OHLC in ASP.NET MVC Stock Chart Control</h1>
                }