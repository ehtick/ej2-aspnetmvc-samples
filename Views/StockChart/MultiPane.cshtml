@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/indicator-data.js"></script>
@section ControlsSection{
    <div class="control-section">
        <div>
            @(Html.EJS().StockChart("container").Load("load").Title("AAPL Historical").TooltipRender("tooltipRender").AxisLabelRender("axisLabelRender")
                    .Rows(row => { row.Height("30%").Add(); row.Height("70%").Add(); })
                    .Series(sr =>
                    {
                         sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle).DataSource("data").YAxisName("yAxis1").Name("Apple Inc").Add();
                        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).DataSource("data").EnableTooltip(false).YName("volume").Name("Volume").Add();
                    }).Tooltip(tl=>tl.Enable(true).Shared(true).Format("High : <b>${point.high}</b><br/>Low :<b>${point.low}</b><br/>Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b><br/>Volume : <b>${point.volume}</b>"))
                    .LegendSettings(leg => leg.Visible(true)).Render())
        </div>
    </div>
    @*custom code start*@
    <style>
        #container {
            display: block;
        }
        #container_stock_border {
            pointer-events: none;
        }
    </style>
    @*custom code end*@
    <script src="~/Scripts/StockChartData/theme-color.js"></script>
    <script>
        var data = window.chartData;
        var load = function (args) {
            args.stockChart.chartArea = { border: { width: 0 } };
            args.stockChart.border = { width: 1 };
            args.stockChart.crosshair.enable = true;
            args.stockChart.axes[0] = {
                name: 'yAxis1', rowIndex: 1, opposedPosition: true, labelPosition: 'Inside',
                tickPosition: 'Inside',
                lineStyle: { color: 'transparent' },
                majorTickLines: { color: 'transparent' }
            };
            args.stockChart.primaryXAxis = { valueType: 'DateTime', majorGridLines: { width: 0 }, crosshairTooltip: { enable: true } };
            args.stockChart.primaryYAxis = {
                lineStyle: { color: 'transparent' },
                majorTickLines: { color: 'transparent', height: 0 }
            };
            loadStockChartTheme(args);
        }

        function tooltipRender(args) {
            if (args.text.split('<br/>')[4]) {
                var target = parseFloat(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0]);
                var value = (target / 100000000).toFixed(1) + 'B';
                args.text = args.text.replace(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0], value);
            }
        }
        function axisLabelRender(args) {
            var text = parseFloat(args.text);
            if (args.axis.name === 'primaryYAxis') {
                args.text = text / 100000000 + 'B';
            }
        }
    </script>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Candlestick and volume in ASP.NET MVC Stock Chart control. Explore here for more details." />
}
@section ActionDescription{
    <p>This <a target="_blank" href="https://www.syncfusion.com/aspnet-mvc-ui-controls/stock-chart" aria-label="ASP.NET MVC Stock Chart">ASP.NET MVC Stock Chart<span class="sr-only">opens in a new tab</span></a> example visualizes the AAPL stock price with Candle chart. Tooltip and crosshair show the information about the data and period.</p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a stock chart for AAPL data, as well as how to use column charts to display data volume. The <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/stock-chart/period-selector" aria-label="Period Selector">Period Selector<span class="sr-only">opens in a new tab</span></a> and <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/stock-chart/range-selector" aria-label="Range Selector">Range Selector<span class="sr-only">opens in a new tab</span></a> can be used to select a range with specified periods.
    </p>
    <p>
        The legend is enabled, and you can use it to toggle the visibility of series in the stock chart. To customize the legend in the stock chart, use the <code>StockChartLegendSettings</code> property.
    </p>
}

@section Title{
    <title>ASP.NET MVC Stock Chart Candlestick and volume Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Candlestick and volume in ASP.NET MVC Stock Chart Control</h1>
}