@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@using Syncfusion.EJ2.DropDowns
@section Meta{
<meta name="description"
    content="This example demonstrates the Show/Hide Totals in ASP.NET MVC Pivot Table control. Explore here for more details." />
}
@section ControlsSection{

    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("500").DataSourceSettings(dataSourceSettings =>
            dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true).ShowGrandTotals(true).GrandTotalsPosition(GrandTotalsPosition.Bottom)
            .DrilledMembers(drilledmembers =>
            {
            drilledmembers.Name("Country").Items((string[])ViewData["drilledMembers"]).Add();
            })
            .FilterSettings(filterSettings =>
            {
            filterSettings.Name("Products").Items((string[])ViewData["filterMembers"]).Type(Syncfusion.EJ2.PivotView.FilterType.Include).Add();
            })
            .FormatSettings(formatsettings =>
                 {
            formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
            })
            .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
            .Columns(columns => { columns.Name("Year").Add(); columns.Name("Order_Source").Caption("Order Source").Add(); })
            .Values(values =>
            {
            values.Name("In_Stock").Caption("In Stock").Add(); values.Name("Sold").Caption("Units Sold").Add();
            values.Name("Amount").Caption("Sold Amount").Add();
            })
            .Filters(filters =>
            {
            filters.Name("Product_Categories").Caption("Product Categories").Add();
            })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).DataBound("dataBound").Render()
        </div>
    </div>
    <div class="col-lg-3 property-section pivot-table-property-section">
        <div id="property" title="Properties" style="width: 100%;height:100%;">
            <div>
                <table class="property-panel-table">
                    <tbody>
                        <tr style="height: 50px">
                            <td style="width: auto">
                                <div class="total-options" style="padding-left: 0; margin-right: 10px;">
                                    Totals:
                                </div>
                            </td>
                            <td style="width: auto">
                                <div style="padding-left: 0;">
                                    @Html.EJS().DropDownList("options").Width("100%").DataSource((IEnumerable<object>)ViewData["summaryOption"]).Value("grandTotals"
                                    ).Change("onChange0").Fields(new DropDownListFieldSettings { Text = "text", Value = "value" }).Render()
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div id="grandsum">
                <table class="property-panel-table">
                    <tbody>
                        <tr>
                            <td>
                                <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                                    Grand totals position
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio5").Label("Top").Name("position").Value("Top").Change("onChange1").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio6").Label("Bottom").Name("position").Value("Bottom").Checked(true).Change("onChange1").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div>
                                    <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                                        Hide grand totals
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio1").Label("Row").Name("Total").Value("Row").Change("onChange").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio2").Label("Column").Name("Total").Value("Column").Change("onChange").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio3").Label("Both").Name("Total").Value("Both").Change("onChange").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio4").Label("None").Name("Total").Value("None").Checked(true).Change("onChange").Render()
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div id="subsum" style="display: none;">
                <table class="property-panel-table">
                    <tbody>
                        <tr>
                            <td>
                                <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                                    Sub-totals position
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio7").Label("Top").Name("position1").Value("Top").Change("onChange3").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio8").Label("Bottom").Name("position1").Value("Bottom").Change("onChange3").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio9").Label("Auto").Name("position1").Value("Auto").Checked(true).Change("onChange3").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div>
                                    <div style="font-weight: 600; font-size: 13px; white-space: nowrap; padding-left: 0px;">
                                        Hide sub-totals
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio10").Label("Row").Name("Total1").Value("Row").Change("onChange2").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio11").Label("Column").Name("Total1").Value("Column").Change("onChange2").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio12").Label("Both").Name("Total1").Value("Both").Change("onChange2").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding-left: 0;">
                                    @Html.EJS().RadioButton("radio13").Label("None").Name("Total1").Value("None").Checked(true).Change("onChange2").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div>
                                    <div style="font-weight: 600; font-size: 13px; white-space: nowrap; padding-left: 0px;">
                                        Hide specific sub-totals
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <div>
                                    @Html.EJS().MultiSelect("values").DataSource((IEnumerable<Object>)ViewData["summaryFields"]).Mode(VisualMode.CheckBox).ShowDropDownIcon(true).ShowClearButton(false
                                    ).EnableSelectionOrder(false).Fields(new MultiSelectFieldSettings { Text = "Name" }).Select("onSelected").Removed("onRemoved").Open("onOpen"
                                    ).Placeholder("Select fields to hide its sub-totals").Render()
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <style>
    #pivotview {
        width: 100%;
        height: 100%;
    }

    .pivot-table-property-section {
        overflow: auto;
    }

    .pivot-table-property-section .property-panel-header {
        padding-bottom: 10px;
    }

    .pivot-table-property-section .e-multiselect {
        padding: 0;
    }

    .pivot-table-property-section .property-panel-table td {
        width: auto;
    }

    .pivot-table-property-section .property-panel-table div {
        padding-left: unset;
    }

    .sb-sample-content-area {
        min-height: 255px !important;
    }

    .control-section {
        min-height: 255px !important;
    }

    .e-multiselect.e-input-group {
        padding: 0;
    }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onRemoved(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            for (var i = 0; i < pivotObj.dataSourceSettings.columns.length; i++) {
                if ((pivotObj.dataSourceSettings.columns[i].name || pivotObj.dataSourceSettings.columns[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.columns[i].showSubTotals = true;
                }
            }
            for (var i = 0; i < pivotObj.dataSourceSettings.rows.length; i++) {
                if ((pivotObj.dataSourceSettings.rows[i].name || pivotObj.dataSourceSettings.rows[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.rows[i].showSubTotals = true;
                }
            }
            pivotObj.refreshData();
        }
        function onSelected(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            for (var i = 0; i < pivotObj.dataSourceSettings.columns.length; i++) {
                if ((pivotObj.dataSourceSettings.columns[i].name || pivotObj.dataSourceSettings.columns[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.columns[i].showSubTotals = false;
                }
            }
            for (var i = 0; i < pivotObj.dataSourceSettings.rows.length; i++) {
                if ((pivotObj.dataSourceSettings.rows[i].name || pivotObj.dataSourceSettings.rows[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.rows[i].showSubTotals = false;
                }
            }
            pivotObj.refreshData();
        }
        function onOpen(args) {
            if (args.popup.element.querySelector(".e-filter-parent")) {
                args.popup.element.querySelector(".e-filter-parent").style.display = 'none';
            }
        }
        function onChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'None') {
                pivotObj.setProperties({ dataSourceSettings: { showGrandTotals: false } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnGrandTotals: true } }, true);
                pivotObj.dataSourceSettings.showGrandTotals = true;
            }
            else {
                pivotObj.setProperties({ dataSourceSettings: { showGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnGrandTotals: true } }, true);
                if (args.value === 'Column') {
                    pivotObj.dataSourceSettings.showColumnGrandTotals = false;
                } else if (args.value === 'Row') {
                    pivotObj.dataSourceSettings.showRowGrandTotals = false;
                } else if (args.value === 'Both') {
                    pivotObj.dataSourceSettings.showGrandTotals = false;
                }
            }
            pivotObj.refreshData();
        }
        function onChange0(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            document.getElementById('grandsum').style.display = 'none';
            document.getElementById('subsum').style.display = 'none';
            if (args.value == 'grandTotals') {
                document.getElementById('grandsum').style.display = '';
            } else if (args.value == 'subTotals') {
                document.getElementById('subsum').style.display = '';
            }
        }
        function onChange1(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'Top') {
                pivotObj.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Bottom' } }, true);
                pivotObj.dataSourceSettings.grandTotalsPosition = 'Top';
            }
            else if (args.value === 'Bottom') {
                pivotObj.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Top' } }, true);
                pivotObj.dataSourceSettings.grandTotalsPosition = 'Bottom';
            }
            pivotObj.refreshData();
        }
        function onChange2(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'None') {
                pivotObj.setProperties({ dataSourceSettings: { showSubTotals: false } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowSubTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnSubTotals: true } }, true);
                pivotObj.dataSourceSettings.showSubTotals = true;
            }
            else {
                pivotObj.setProperties({ dataSourceSettings: { showSubTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowSubTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnSubTotals: true } }, true);
                if (args.value === 'Column') {
                    pivotObj.dataSourceSettings.showColumnSubTotals = false;
                } else if (args.value === 'Row') {
                    pivotObj.dataSourceSettings.showRowSubTotals = false;
                } else if (args.value === 'Both') {
                    pivotObj.dataSourceSettings.showSubTotals = false;
                }
            }
            pivotObj.refreshData();
        }
        function onChange3(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'Top') {
                pivotObj.setProperties({ dataSourceSettings: { subTotalsPosition: 'Top' } }, true);
            }
            else if (args.value === 'Bottom') {
                pivotObj.setProperties({ dataSourceSettings: { subTotalsPosition: 'Bottom' } }, true);
            }
            else if (args.value === 'Auto') {
                pivotObj.setProperties({ dataSourceSettings: { subTotalsPosition: 'Auto' } }, true);
            }
            pivotObj.refreshData();
        }
    </script>
}

@section PreScripts {
<script>
    ej.base.enableRipple(false);
</script>
}

@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates showing and hiding grand totals and sub-totals, as well as change their position in
        rows, columns, or both at runtime. Also, end users can specify and hide sub-totals of specific fields.</p>
</div>
}

@section Description{
<div id="description">
    <p>
        In this sample, you can control the position and visibility of the grand totals and sub-totals by selecting
        options from the Totals drop-down list. The following options will be displayed based on the drop-down
        selection:
    </p>
    <table>
        <tbody>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;width:180px"><code>Grand totals position</code></td>
                <td style="padding: 4px 0;">: Allows to display the grand totals either at top or bottom of the row and
                    column axes by selecting the appropriate radio button options.
                    To display the grand totals at top, set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_GrandTotalsPosition" aria-label="GrandTotalsPosition">
                        GrandTotalsPosition<span class="sr-only">opens in a new tab</span></a> as <b>Top</b>. And, to display the grand
                    totals at bottom, set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_GrandTotalsPosition" aria-label="GrandTotalsPosition">
                        GrandTotalsPosition<span class="sr-only">opens in a new tab</span></a> as <b>Bottom</b>.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;"><code>Hide grand totals</code></td>
                <td style="padding: 4px 0;">: Allows to hide grand totals in row, column, or both by selecting the
                    appropriate radio button options. To hide grand totals in both row and column, set the property<a
                        target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowGrandTotals" aria-label="ShowGrandTotals">
                        ShowGrandTotals<span class="sr-only">opens in a new tab</span></a> as <b>false</b>. To hide the row and column
                    grand totals separately,
                    set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowRowGrandTotals" aria-label="ShowRowGrandTotals">
                        ShowRowGrandTotals<span class="sr-only">opens in a new tab</span></a> and <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowColumnGrandTotals" aria-label="ShowColumnGrandTotals">
                        ShowColumnGrandTotals<span class="sr-only">opens in a new tab</span></a> as <b>false</b>.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;"><code>Sub-totals position</code></td>
                <td style="padding: 4px 0;">: Allows to display the sub-totals at top, bottom, or default position of
                    the row and column axes by selecting the appropriate radio button options.
                    To display the sub-totals at top, set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_SubTotalsPosition" aria-label="SubTotalsPosition">
                        SubTotalsPosition<span class="sr-only">opens in a new tab</span></a> as <b>Top</b>. And, to display the
                    sub-totals at bottom, set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_SubTotalsPosition" aria-label="SubTotalsPosition">
                        SubTotalsPosition<span class="sr-only">opens in a new tab</span></a> as <b>Bottom</b>.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;"><code>Hide sub-totals</code></td>
                <td style="padding: 4px 0;">: Allows to hide sub-totals in row, column, or both by selecting the
                    appropriate radio button options. To hide sub-totals in both row and column, set the property<a
                        target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowSubTotals" aria-label="ShowSubTotals">
                        ShowSubTotals<span class="sr-only">opens in a new tab</span></a> as <b>false</b>. To hide the row and column
                    sub-totals separately,
                    set the property <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowRowSubTotals" aria-label="ShowRowSubTotals">
                        ShowRowSubTotals<span class="sr-only">opens in a new tab</span></a> and <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_ShowColumnSubTotals" aria-label="ShowColumnSubTotals">
                        ShowColumnSubTotals<span class="sr-only">opens in a new tab</span></a> as <b>false</b>.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;"><code>Hide sub-totals for specific field(s)</code></td>
                <td style="padding: 4px 0;">: Allows to hide sub-totals for specific fields in row and column by
                    selecting appropriate fields from the multi-select drop-down.
                    To hide sub-totals for a specific field, set the <a target="_blank"
                        href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewRow.html#Syncfusion_EJ2_PivotView_PivotViewRow_ShowSubTotals" aria-label="ShowSubTotals">
                        ShowSubTotals<span class="sr-only">opens in a new tab</span></a> property as <b>false</b> inside the field definition.</td>
            </tr>
        </tbody>
    </table>
</div>
}

@section Title{
<title>ASP.NET MVC Pivot Table Show/Hide Totals Example - Syncfusion Demos </title>
}
@section Header{
<h1 class='sb-sample-text'>Example of Show/Hide Totals in ASP.NET MVC Pivot Table Control</h1>
}
