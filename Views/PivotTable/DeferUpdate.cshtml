@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Defer Layout Update in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="control-section">
    <div class="content-wrapper">
        @Html.EJS().PivotView("pivotview").Width("99%").Height("620").EnginePopulated("onGridEnginePopulate").GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).AllowDeferLayoutUpdate(true).Locale("en").Render()

        @Html.EJS().PivotFieldList("pivotfieldlist").RenderMode(Mode.Fixed).DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
           .DrilledMembers(drilledmembers =>
           {
               drilledmembers.Name("Country").Items((string[])ViewData["drilledMembers"]).Add();
           })
           .FilterSettings(filterSettings =>
           {
               filterSettings.Name("Products").Items((string[])ViewData["filterMembers"]).Type(FilterType.Include).Add();
           })
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add(); })
           .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
           .Columns(columns => { columns.Name("Year").Add(); columns.Name("Order_Source").Caption("Order Source").Add(); })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add(); values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters => {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           }).AllowLabelFilter(true).AllowValueFilter(true)).Load("onLoad").EnginePopulated("onFieldListEnginePopulate").DataBound("onDataBound").AllowDeferLayoutUpdate(true).AllowCalculatedField(true).Locale("en").Render()
        </div>
    </div>

    <style>
        #pivotview {
            width: 58%;
            height: 100%;
        }

        #pivotfieldlist {
            width: 42%;
            height: 100%;
        }
        .e-pivotview {
            float: left;
        }

        .e-pivotfieldlist {
            float: right;
        }

        .e-pivotfieldlist .e-static {
            width: 100% !important;
        }
    </style>
    <script>
        function onLoad(args) {
            var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
            if (fieldlistObj) {
                if (ej.base.Browser.isDevice) {
                    fieldlistObj.renderMode = 'Popup';
                    fieldlistObj.target = '.control-section';
                    ej.base.setStyleAttribute(document.getElementById('pivotfieldlist'), {
                        'width': 0,
                        'height': 0,
                        'float': 'left',
                        'display': 'none'
                    });
                }
            }
        }
        function onGridEnginePopulate(args) {
            if (!ej.base.Browser.isDevice) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                if (fieldlistObj) {
                    fieldlistObj.update(pivotObj);
                }
            }
        }
        function onFieldListEnginePopulate(args) {
            if (document.getElementById('pivotview')) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                if (fieldlistObj.isRequiredUpdate) {
                    fieldlistObj.updateView(pivotObj);
                }
                pivotObj.notify('ui-update', pivotObj);
                if (!ej.base.Browser.isDevice) {
                    fieldlistObj.notify('tree-view-update', fieldlistObj);
                }
            }
        }
        function onDataBound(args) {
            if (document.getElementById('pivotview')) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                pivotObj.tooltip.destroy();
                if (ej.base.Browser.isDevice) {
                    pivotObj.element.style.width = "100%";
                    pivotObj.allowCalculatedField = true;
                    pivotObj.showFieldList = true;
                }
                pivotObj.refresh();
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates the defer layout update feature of the pivot table. The defer layout update allows users to refresh the pivot table on-demand instead of during every UI interaction.</p>
</div>
}

@section Description{
    <div id="description">
        <p>
            Deferring a layout update can be useful when you need to remove or add multiple fields in a report and you don't want to update the pivot table after each change. Now, you can update a pivot table after performing all changes at the report level in the field list resulting in better performance.
        </p>
        <p>
            In this sample, the <b>Defer Layout Update</b> option can be enabled or disabled via field list UI.
        </p>
        <p>
            In general, this feature can be enabled by setting  <code>AllowDeferLayoutUpdate</code> as true.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Defer Layout Update Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Defer Layout Update in ASP.NET MVC Pivot Table Control</h1>
                }