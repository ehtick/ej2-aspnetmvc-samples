@using Syncfusion.EJ2.PivotView
@using Syncfusion.EJ2.DropDowns
@section Meta{
                    <meta name="description" content="This example demonstrates the Pivot Chart in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-9 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("450").DisplayOption(new PivotViewDisplayOption { View = View.Chart }).ShowFieldList(true).DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false)
            .EnableSorting(true).Rows(rows =>
            {
                rows.Name("Country").Add();
                rows.Name("Products").Add();
            })
            .Columns(columns =>
            {
                columns.Name("Year").Add();
                columns.Name("Order_Source").Caption("Order Source").Add();
            })
            .Values(values =>
            {
                values.Name("Amount").Caption("Sales Amount").Add();
            })
            .FormatSettings(formatsettings =>
            {
                formatsettings.Name("Amount").Format("C").Add();
            })
            .Filters(filters =>
            {
                filters.Name("Product_Categories").Caption("Product Categories").Add();
            })).ChartSettings(chartSettings => chartSettings.Title("Sales Analysis").Load("onChartLoad").ChartSeries(
                chartSeries => chartSeries.Type(ChartSeriesType.Column))
            ).DataBound("dataBound").Render()
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id='property' title='Properties' class='property-panel-table' style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().DropDownList("charttypesddl").DataSource((IEnumerable<object>)ViewData["chartTypes"]).FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto
                            ).Placeholder("Chart Types").Fields(new DropDownListFieldSettings { Text = "Name", Value = "Value" }).Index(1).Change("chartTypesChange").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
            display: block;
        }
        .e-bigger .e-float-input.e-control-wrapper {
        width: 100% !important;
        }
    </style>

    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onChartLoad(args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');
        }
        function chartTypesChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.chartSettings.chartSeries.type = args.value;
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates rendering a pivot chart using pivot data. Users can explore the data through drill-up and drill-down operations by clicking the grouping labels. The field list can also be used to change the report at runtime.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, the pivot table control plots a chart based on the pivot report bound to it. This can be
            achieved by setting the property <code>displayOption.view</code> to <code>Chart</code>. The
            built-in options are:</br></br>

            <code>Table</code> -> Renders pivot table only, which is the default.</br>
            <code>Chart</code> -> Renders pivot chart only.</br>
            <code>Both</code>  -> Renders both pivot table and pivot chart.</br>
        </p>
        <p>
            You can change the chart types using the <b>Chart Types</b> dropdown list separately.
            The chart types can be set using the <code>chartSettings.chartSeries.type</code> property. The built-in chart
            types
            are:</br></br>

            <code>Column</code></br>
            <code>Line</code></br>
            <code>Spline</code></br>
            <code>Bar</code></br>
            <code>Area</code></br>
            <code>StepArea</code></br>
            <code>SplineArea</code></br>
            <code>StackingColumn</code></br>
            <code>StackingArea</code></br>
            <code>StackingBar</code></br>
            <code>StepLine</code></br>
            <code>Pareto</code></br>
            <code>Bubble</code></br>
            <code>Scatter</code></br>
            <code>StackingColumn100</code></br>
            <code>StackingBar100</code></br>
            <code>StackingArea100</code></br>
            <code>Polar</code></br>
            <code>Radar</code></br>
            <code>Pie</code></br>
            <code>Doughnut</code></br>
            <code>Funnel</code></br>
            <code>Pyramid</code></br></br>


            In the sample, the field list option is enabled, through which you can see the result in the chart by altering
            the report dynamically.
            </br>
        </p>
        <p>
            The drill down/up operation in the accumulation charts, such as pie, doughnut, funnel and pyramid, can be performed using the context menu on the click over the appropriate series.
            </br>
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Pivot Chart Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pivot Chart in ASP.NET MVC Pivot Table Control</h1>
                }
