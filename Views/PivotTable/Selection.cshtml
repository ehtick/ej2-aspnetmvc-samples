@using Syncfusion.EJ2.PivotView
@using Syncfusion.EJ2.DropDowns
@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-8 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("400").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>
                )ViewData["Data"]).ExpandAll(true).EnableSorting(true)
                .Rows(rows =>
                {
                    rows.Name("Country").Add();
                    rows.Name("Products").Add();
                })
                .Columns(columns =>
                {
                    columns.Name("Year").Add();
                    columns.Name("Order_Source").Caption("Order Source").Add();
                })
                .Values(values =>
                {
                    values.Name("Sold").Caption("Units Sold").Add();
                    values.Name("Amount").Caption("Sold Amount").Add();
                })
                .FormatSettings(formatsettings =>
                {
                    formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
                })
                .Filters(filters =>
                {
                    filters.Name("Product_Categories").Caption("Product Categories").Add();
                })).GridSettings(new PivotViewGridSettings { ColumnWidth = 120, AllowSelection = true}).Load("onLoad").CellSelected("onCellSelected").DataBound("dataBound").Render()
        </div>
    </div>

    <div class="col-lg-4 property-section pivottable-property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Selection Modes:
                        </div>
                    </td>
                    <td>
                        <div>
                            @Html.EJS().DropDownList("mode").DataSource((IEnumerable<object>)ViewData["modeData"]).FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto
                            ).Index(0).Width("150").Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).Change("modeChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Selection Types:
                        </div>
                    </td>
                    <td>
                        <div>
                            @Html.EJS().DropDownList("type").DataSource((IEnumerable<object>)ViewData["typeData"]).FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto
                            ).Index(1).Width("150").Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).Change("typeChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div>
                            <b>
                                <hr>Event Trace:
                            </b>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="eventarea" style="height: 230px;overflow: auto">
                            <span class="EventLog" id="selection-EventLog" style="word-break: normal;"></span>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        .pivottable-property-section hr {
            margin: 1px 10px 0px 0px;
            border-top: 1px solid #eee;
        }
         .e-bigger .e-float-input.e-control-wrapper {
        width: 100% !important;
    }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onLoad(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.gridSettings.selectionSettings = { mode: 'Cell', type: 'Multiple', cellSelectionMode: 'Box' };
        }
        function onCellSelected(args) {
            document.getElementById('selection-EventLog').innerHTML = '';
            if (args.selectedCellsInfo.length > 0) {
                for (var cnt = 0; cnt < args.selectedCellsInfo.length; cnt++) {
					var cell = args.selectedCellsInfo[cnt];
                    var summMeasure = this.engineModule.fieldList[cell.measure] ? this.engineModule.fieldList[cell.measure].aggregateType + ' of ' +
                        this.engineModule.fieldList[cell.measure].caption : '';
                    appendElement(
                        (cell.columnHeaders == '' ? '' : 'Column Headers: ' + '<b>' + cell.columnHeaders.split('.').join(' - ') + '</b></br>') +
                        (cell.rowHeaders == '' ? '' : 'Row Headers: ' + '<b>' + cell.rowHeaders.split('.').join(' - ') + '</b></br>') +
                        (summMeasure == '' ? '' : 'Measure: ' + '<b>' + summMeasure + '</b></br>') +
                        'Value: ' + '<b>' + cell.currentCell.formattedText + '</b><hr></br>');
                }
            }
        }
        function appendElement(html) {
            var span = document.createElement('span');
            span.innerHTML = html;
            var log = document.getElementById('selection-EventLog');
            log.appendChild(span);
        }
        function modeChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.gridSettings.selectionSettings.mode = args.value;
            pivotObj.renderModule.updateGridSettings();
        }
        function typeChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.gridSettings.selectionSettings.type = args.value;
            pivotObj.renderModule.updateGridSettings();
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates different types of grid cell selection options and an event for getting complete information about the selection. The selection of headers, value cells, and summary cells can be done through mouse and keyboard actions.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            This feature provides interactive support to highlight rows, columns, values, and summary cells that you select.
            Selection can be done through either mouse or keyboard interaction.  To enable selection, set <code>
                allowSelection
            </code> as true.
        </p>
        <p>
            The pivot table supports two types of selection that can be set using
            <code>selectionSettings.type</code> property. They are,
        </p>
        <ul>
            <li>
                <code>Single</code> - Enabled by default. Allows user to select a single row, column, or cell at a time.
            </li>
            <li><code>Multiple</code> - Allows the user to select more than one row, column, or cell at the same time.</li>
        </ul>
        <p>
            Also, there are three modes of selection that can be set using
            <code>selectionSettings.mode</code> property. They are,
        </p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables the complete row selection in a pivot table.</li>
            <li><code>Column</code> - Enables the complete column selection in a pivot table.</li>
            <li><code>Cell</code> - Enables only value and summary cell selection in a pivot table.</li>
            <li><code>Both</code> - Enables both row and column selection in a pivot table.</li>
        </ul>
        <p>
            To perform multiselection, hold the <strong>CTRL</strong> key and click the desired cells.
            To select a range of cells, hold the <strong>SHIFT</strong> key and click the cells.
        </p>
        <p>
            While using pivot table in a touch device, double-tap over a row, column, or other cells.
            This results in a pop-up with a multiselect icon. Now tap the icon to proceed with multiselection.
        </p>
        <p>
            In this demo, pick the selection type and selection mode from the properties panel in order to perform the desired selection process.
            The selected cell information can be seen in the Event Trace part with the help of the
            <code>cellSelected</code> event.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET MVC Pivot Table Control</h1>
                }