@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Value Sorting in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="control-section">
    <div class="content-wrapper">
        @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings =>
           {
               formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
           })
           .Rows(rows =>
           {
               rows.Name("Country").Add();
               rows.Name("Products").Add();
           })
           .Columns(columns =>
           {
               columns.Name("Year").Add();
               columns.Name("Order_Source").Caption("Order Source").Add();
           })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add();
               values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters =>
           {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           })
           .ValueSortSettings(new PivotViewValueSortSettings { ColumnHeaderText= "FY 2022##In Stock", HeaderDelimiter= "##", ColumnSortOrder=Sorting.Descending, RowHeaderText="France", RowSortOrder=Sorting.Ascending })
           ).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).ShowFieldList(true).EnableValueSorting(true).ShowValuesButton(true).DataBound("dataBound").Render()
    </div>
</div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample demonstrates ordering of column and row header values in ascending or descending order. Here, the
            <b>FY 2022 â†’ In Stock</b> column header and the <b>France</b> row header are both ordered by defining
            sort-related settings in code behind.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>This sample demonstrates how to enable sorting for column and row values by simply clicking their headers.
            Repeated clicks toggle the sort direction. This functionality is activated by setting the
            <code>enableValueSorting</code> property to <b>true</b>.</p>
        <p>You can also configure value-based sorting programmatically. To sort a column, specify the target header using
            the <code>columnHeaderText</code> property under <code>valueSortSettings</code>, with individual header levels
            separated by a delimiter defined in the <code>headerDelimiter</code> property. Use <code>columnSortOrder</code>
            to set the sort direction.</p>
        <p>Similarly, to sort a row, provide the header in <code>rowHeaderText</code> and specify the direction using
            <code>rowSortOrder</code>.
            This approach allows precise and independent control over sorting behavior for both columns and rows based on
            the provided headers.</p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Value Sorting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Value Sorting in ASP.NET MVC Pivot Table Control</h1>
                }