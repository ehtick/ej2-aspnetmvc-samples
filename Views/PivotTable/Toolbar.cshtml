@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Toolbar in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg control-section" id="pivot-table-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("450").ShowToolbar(true).ShowFieldList(true).AllowExcelExport(true).AllowNumberFormatting(true).AllowConditionalFormatting(true).AllowPdfExport(true).ShowToolbar(true).AllowCalculatedField(true).DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add(); })
           .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
           .Columns(columns => { columns.Name("Year").Add(); columns.Name("Order_Source").Caption("Order Source").Add(); })
           .Values(values =>
           {
               values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters =>
           {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).DisplayOption(new PivotViewDisplayOption { View = View.Both }).ChartSettings(new PivotViewChartSettings { Title="Sales Analysis" , Load="onChartLoad" }).Toolbar(new List<string>
                () { "New", "Save", "SaveAs", "Rename", "Remove", "Load",
                "Grid", "Chart", "Export", "SubTotal", "GrandTotal", "Formatting", "FieldList"}).SaveReport("saveReport").LoadReport("loadReport").FetchReport("fetchReport").RenameReport("renameReport").RemoveReport("removeReport").NewReport("newReport").ToolbarRender("beforeToolbarRender").DataBound("dataBound").Render()
        </div>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        @@media only screen and (max-width: 400px) {
            #pivot-table-section {
                overflow: auto;
            }
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
                pivotObj.isModified = false;
            }
        }
        function onChartLoad(args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');
        }
        function saveReport(args) {
            var reports = [];
            var isSaved = false;
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reports = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.report && args.reportName && args.reportName !== '') {
                reports.map(function (item) {
                    if (args.reportName === item.reportName) {
                        item.report = args.report;
                        isSaved = true;
                    }
                });
                if (!isSaved) {
                    reports.push(args);
                }
                localStorage.pivotviewReports = JSON.stringify(reports);
            }
        }
        function fetchReport(args) {
            var reportCollection = [];
            var reeportList = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                reeportList.push(item.reportName);
            });
            args.reportName = reeportList;
        }
        function loadReport(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    args.report = item.report;
                }
            });
            if (args.report) {
                pivotObj.dataSourceSettings = JSON.parse(args.report).dataSourceSettings;
            }
        }
        function removeReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            for (var i = 0; i < reportCollection.length; i++) {
                if (reportCollection[i].reportName === args.reportName) {
                    reportCollection.splice(i, 1);
                }
            }
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function renameReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.isReportExists) {
                for (var i = 0; i < reportCollection.length; i++) {
                    if (reportCollection[i].reportName === args.rename) {
                        reportCollection.splice(i, 1);
                    }
                }
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    item.reportName = args.rename;
                }
            });
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function newReport() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.setProperties({
                dataSourceSettings: {
                    columns: [],
                    rows: [],
                    values: [],
                    filters: []
                }
            }, false);
        }
		function beforeToolbarRender(args) {
			args.customToolbar.splice(6, 0, {
				type: 'Separator' 
			});
			args.customToolbar.splice(9, 0, {
				type: 'Separator' 
			});
		}
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the toolbar options of the pivot table. The options include report manipulations like create, save, save as, rename and delete, show or hide subtotals and grand totals, conditional formatting, and exporting in the pivot table and pivot chart.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this example, users can generate a report at runtime, as well as save and load them. Save and load operations
            are performed in localStorage (session storage) using the <b>saveReport</b> and <b>loadReport</b> events. Users can change to
            either pivot table or pivot chart using the toolbar options. Other toolbar options available are:
        </p>
        <table>
            <tr>
                <td style="vertical-align: top;padding: 10px 0;width:230px">
                    <code>Create new report:</code>
                </td>
                <td>Allows user to create new reports at runtime.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Rename report:</code>
                </td>
                <td>Allows user to change current report name dynamically through UI.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Remove report:</code>
                </td>
                <td>Allows user to remove current report from the report collection at runtime.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Save as option:</code>
                </td>
                <td>Allows user to save report locally in browser memory.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Report list:</code>
                </td>
                <td>Allows user to swap between the reports within the report collection.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Pivot Table:</code>
                </td>
                <td>Allows user to view data in cross-tabulation format.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Pivot Chart and its types:</code>
                </td>
                <td>Allows user to view data in graphical format. The chart types include column, bar, line, area, etc. It
                    also has options for showing and hiding legends and displaying chart series of different measures on
                    single and multiple axes.
                </td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Export:</code>
                </td>
                <td>Provides options to save data in PDF, Excel, and CSV document types.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Hide subtotals and grand totals:</code>
                </td>
                <td>Allows user to hide grand totals and subtotals (based on fields) in row and column.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Conditional formatting:</code>
                </td>
                <td>Allows user to customize cells base on certain conditions.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Number formatting:</code>
                </td>
                <td>Allows user to dynamically apply number formatting to value fields.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Field List:</code>
                </td>
                <td>Provides option to alter the report dynamically through UI.</td>
            </tr>
        </table>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Toolbar Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Toolbar in ASP.NET MVC Pivot Table Control</h1>
                }
