@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Hyperlink in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-8 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("600").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>
            )ViewData["Data"]).ExpandAll(true)
            .FormatSettings(formatsettings =>
            {
                formatsettings.Name("Amount").Format("C0").Add();
            })
            .DrilledMembers(drilledmembers =>
            {
                drilledmembers.Name("Country").Items((string[])ViewData["drilledMembers"]).Add();
            })
            .Rows(rows =>
            {
                rows.Name("Country").Add();
                rows.Name("Products").Add();
            })
            .Columns(columns =>
            {
                columns.Name("Year").Add();
            })
            .Values(values =>
            {
                values.Name("In_Stock").Caption("In Stock").Add();
                values.Name("Sold").Caption("Units Sold").Add();
                values.Name("Amount").Caption("Sold Amount").Add();
            })
            .Filters(filters =>
            {
                filters.Name("Product_Categories").Caption("Product Categories").Add();
            })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).HyperlinkSettings(hyperlinksettings => hyperlinksettings.ShowValueCellHyperlink(true).CssClass("e-custom-class")).HyperlinkCellClick("onCellClick").ShowTooltip(false).DataBound("dataBound").Render()
        </div>
    </div>
    <div class="col-lg-4 property-section pivottable-property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Show Hyperlink:
                        </div>
                    </td>
                    <td>
                        <div>
                            @Html.EJS().DropDownList("hyperlinks").Width("100%").Index(0).DataSource((IEnumerable<object>)ViewData["hyperLinkOptions"]
                            ).Value("Value cells").Change("optionsdll").Render()
                        </div>
                    </td>
                </tr>
                <tr class="text1cls" style="height: 50px; display: none">
                    <td colspan="2">
                        <div>
                            Condition based settings:
                        </div>
                    </td>
                </tr>
                <tr class="measurecls" style="height: 50px; display: none">
                    <td>
                        <div>
                            Measures:
                        </div>
                    </td>
                    <td>
                        <div>
                            @Html.EJS().DropDownList("measures").Width("100%").Index(0).DataSource((IEnumerable<object>)ViewData["hyperLinkMeasures"]
                            ).Value("In Stock").Render()
                        </div>
                    </td>
                </tr>
                <tr class="conditioncls" style="height: 50px; display: none">
                    <td>
                        <div>
                            Condition:
                        </div>
                    </td>
                    <td>
                        <div class="conditionscls">
                            @Html.EJS().DropDownList("conditions").Width("100%").Index(0).DataSource((IEnumerable<object>)ViewData["hyperLinkConditions"]
                            ).Value("NotEquals").Change("conditions").Render()
                        </div>
                    </td>
                </tr>
                <tr class="input1cls" style="height: 50px; display: none">
                    <td>
                        <div>
                            Value 1:
                        </div>
                    </td>
                    <td>
                        <div class="value1cls">
                            @Html.EJS().NumericTextBox("value1").Value(0).Width("100%").Placeholder("Example: 400").Render()
                        </div>
                    </td>
                </tr>
                <tr class="input2cls" style="height: 50px; display: none">
                    <td>
                        <div>
                            Value 2:
                        </div>
                    </td>
                    <td>
                        <div class="value2cls">
                            @Html.EJS().NumericTextBox("value2").Value(0).Width("100%").Placeholder("Example: 4000").Render()
                        </div>
                    </td>
                </tr>
                <tr class="text2cls" style="height: 50px; display: none">
                    <td colspan="2">
                        <div>
                            Header based settings:
                        </div>
                    </td>
                </tr>
                <tr class="textinputcls" style="height: 50px; display: none">
                    <td>
                        <div>
                            Header Text:
                        </div>
                    </td>
                    <td>
                        <div class="textcls">
                            @Html.EJS().TextBox("text").Width("100%").Placeholder("Example: 'FY 2022.In Stock'").Render()
                        </div>
                    </td>
                </tr>
                <tr class="updatecls" style="height: 50px; display: none">
                    <td colspan="2">
                        <div style="float:right;margin-right: 4px">
                            @Html.EJS().Button("apply").Content("Apply").IsPrimary(true).Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div><b>
                                <hr>Event Trace:
                            </b>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="eventarea" style="height: 160px;overflow: auto">
                            <span class="EventLog" id="EventLog" style="word-break: normal;"></span>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                    <td colspan="2">
                        <div class="evtbtn" style="float:right;margin-right: 4px;">
                            @Html.EJS().Button("clear").Content("Clear").CssClass("e-small").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .pivottable-property-section table tr td:first-child {
            width: 25%;
        }

        .pivottable-property-section .text1cls,
        .pivottable-property-section .text2cls {
            font-weight: bold;
            margin-top: 20px;
        }

        .pivottable-property-section {
            overflow: auto;
        }

        #EventLog b {
            color: #388e3c;
        }

        .pivottable-property-section hr {
            margin: 1px 10px 10px 0px;
            border-top: 1px solid #eee;
        }

        #EventLog hr {
            margin-bottom: 1px;
        }

        .e-custom-class {
            text-decoration: underline;
        }
        .e-custom-class:hover {
            color: red;
            text-decoration: none;
        }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function optionsdll() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var operatorddl = document.getElementById('conditions').ej2_instances[0];
            var args = document.getElementById('hyperlinks').ej2_instances[0]
            document.querySelector('.text1cls').style.display = 'none';
            document.querySelector('.text2cls').style.display = 'none';
            document.querySelector('.measurecls').style.display = 'none';
            document.querySelector('.conditioncls').style.display = 'none';
            document.querySelector('.input1cls').style.display = 'none';
            document.querySelector('.input2cls').style.display = 'none';
            document.querySelector('.textinputcls').style.display = 'none';
            document.querySelector('.updatecls').style.display = 'none';
            if (args.itemData.value == 'allcells') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: true,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: false,
                    headerText: undefined,
                    conditionalSettings: []
                };
            } else if (args.itemData.value == 'rowheader') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: true,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: false,
                    headerText: undefined,
                    conditionalSettings: []
                };
            } else if (args.itemData.value == 'columnheader') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: true,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: false,
                    headerText: undefined,
                    conditionalSettings: []
                };
            } else if (args.itemData.value == 'valuecells') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: true,
                    showSummaryCellHyperlink: false,
                    headerText: undefined,
                    conditionalSettings: []
                };
            } else if (args.itemData.value == 'summarycells') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: true,
                    headerText: undefined,
                    conditionalSettings: []
                };
            } else if (args.itemData.value == 'conditional') {
                document.querySelector('.text1cls').style.display = '';
                document.querySelector('.measurecls').style.display = '';
                document.querySelector('.conditioncls').style.display = '';
                document.querySelector('.input1cls').style.display = '';
                if (operatorddl.value === 'Between' || operatorddl.value === 'NotBetween') {
                    document.querySelector('.input2cls').style.display = '';
                }
                document.querySelector('.updatecls').style.display = '';
            } else if (args.itemData.value == 'headertext') {
                document.querySelector('.text2cls').style.display = '';
                document.querySelector('.textinputcls').style.display = '';
                document.querySelector('.updatecls').style.display = '';
            }
        }
        
        function conditions() {
            var args = document.getElementById('conditions').ej2_instances[0];
            if (args.value === 'Between' || args.value === 'NotBetween') {
                document.querySelector('.input2cls').style.display = '';
            }
            else {
                document.querySelector('.input2cls').style.display = 'none';
            }
        }
        
        function onCellClick(args) {
            var cell = '';
            if (args.currentCell.className.indexOf('e-stot') > -1 || args.currentCell.className.indexOf('e-gtot') > -1 || args.currentCell.className.indexOf('e-summary') > -1) {
                cell += 'Summary ';
            }
            if ((args.currentCell.querySelector('.e-headercelldiv') && !(args.data).indexObject) ||
                args.currentCell.className.indexOf('e-cellvalue') > -1) {
                cell += 'Value Header ';
            } else if (args.currentCell.parentElement.className.indexOf('e-rowsheader') > -1 || args.currentCell.className.indexOf('e-rowsheader') > -1) {
                cell += 'Row Header ';
            }
            else if (args.currentCell.className.indexOf('e-columnsheader') > -1 ||
                args.currentCell.className.indexOf('e-pivotcell-container') > -1) {
                cell += 'Column Header ';
            }
            else if (args.currentCell.className.indexOf('e-valuescontent') > -1) {
                cell += 'Value ';
            }
            if (args.currentCell.querySelector('a') &&
            (args.currentCell.querySelector('a').innerText === 'France' || args.currentCell.querySelector('a').innerText === 'Germany')) {
                var country = args.currentCell.querySelector('a').innerText;
                args.currentCell.querySelector('a').setAttribute('data-url',(country === 'France' ?
                'https://en.wikipedia.org/wiki/France' : 'https://en.wikipedia.org/wiki/Germany'));
                args.cancel = false;
            } else {
                appendElement('<b>' + cell + '</b>' +' cell click event called<hr>');
            }
        };
        document.getElementById('apply').onclick = function () {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var optionsdll = document.getElementById('hyperlinks').ej2_instances[0];
            var measuresddl = document.getElementById('measures').ej2_instances[0];
            var operatorddl = document.getElementById('conditions').ej2_instances[0];
            var valueInput1 = document.getElementById('value1').ej2_instances[0];
            var valueInput2 = document.getElementById('value2').ej2_instances[0];
            var textInput = document.getElementById('text').ej2_instances[0];
            if (optionsdll.itemData.value === 'conditional') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: false,
                    headerText: undefined,
                    conditionalSettings: [
                        {
                            measure: measuresddl.itemData.value,
                            conditions: operatorddl.value,
                            value1: valueInput1.value,
                            value2: valueInput2.value
                        }
                    ]
                };
            } else if (optionsdll.itemData.value === 'headertext') {
                pivotObj.hyperlinkSettings = {
                    showHyperlink: false,
                    showRowHeaderHyperlink: false,
                    showColumnHeaderHyperlink: false,
                    showValueCellHyperlink: false,
                    showSummaryCellHyperlink: false,
                    headerText: textInput.value,
                    conditionalSettings: []
                };
            }
        };

        document.getElementById('clear').onclick = function () {
            document.getElementById('EventLog').innerHTML = '';
        };

        function appendElement(html) {
            var span = document.createElement('span');
            span.innerHTML = html;
            var log = document.getElementById('EventLog');
            log.insertBefore(span, log.firstChild);
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
       <p>This sample demonstrates showing hyperlink options in row headers, column headers, value cells, and summary cells in the pivot table. Also, hyperlink options can be enabled for specific headers and value cells based on the applied condition.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, hyperlinks are enabled in cells based on the options selected from the <b>Show Hyperlink</b>
            drop-down list.
            The following options are available for setting the hyperlinks:
        </p>
        <table>
            <tr>
                <td style="vertical-align: top;padding: 10px 0;">
                    <code>All cells :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to all cells.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Row headers :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to row headers.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Column headers :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to column headers.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Value cells :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to value cells.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Summary cells :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to summary cells.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Condition based option :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to value and summary cells based on the applied condition like less than, greater than, equals, etc.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Header based option :</code>
                </td>
                <td>Allows to set the visibility of hyperlink to specific row/column based on the given header text.</td>
            </tr>
        </table>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Hyperlink Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Hyperlink in ASP.NET MVC Pivot Table Control</h1>
                }
