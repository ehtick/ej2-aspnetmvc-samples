@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Grouping in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-8 control-section" id="pivot-table-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("450").ShowGroupingBar(true).Load("onLoad").DataSourceSettings(dataSourceSettings => dataSourceSettings.ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").Add();
               formatsettings.Name("Sold").Format("N0").Add();
               formatsettings.Name("Date").Type("date").Format("dd/MM/yyyy-hh:mm a").Add();
           })
           .Rows(rows => { rows.Name("Date").Add(); })
           .Columns(columns => { columns.Name("Product_ID").Caption("Product ID").Add(); columns.Name("Products").Add(); })
           .Values(values =>
           {
               values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140, ColumnRender = "beforeColumnsRender" }).DataBound("dataBound").Render()
        </div>
    </div>
    <div class="col-lg-4 property-section pivot-table-property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Group Date by:
                        </div>
                    </td>
                    <td style="padding-bottom: 16px">
                        <div class="datecls">
                            @Html.EJS().MultiSelect("dategroup").Mode(Syncfusion.EJ2.DropDowns.VisualMode.CheckBox).DataSource((IEnumerable<object>)ViewData["groupData"]
                            ).ShowDropDownIcon(true).EnableSelectionOrder(true).PopupWidth("150px").Width("150px").Placeholder("Select Toolbar Items").Value((IEnumerable<object>)ViewData["selectedGroups"]
                            ).FilterBarPlaceholder("Search group").Select("onSelect").Removed("onRemoved").Render()
                        </div>
                    </td>
                </tr>
                <tr class="input2cls" style="height: 50px;">
                    <td>
                        <div>
                            Group Product ID by:
                        </div>
                    </td>
                    <td style="padding-bottom: 16px">
                        <div class="numbercls">
                            @Html.EJS().NumericTextBox("numbergroup").Width("150").Format("###").Min(1).Max(10).Value(4
                            ).Placeholder("Example: 4").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td></td>
                    <td>
                        <div style="float:right;margin-right: 4px">
                            @Html.EJS().Button("group-apply").Content("Apply").IsPrimary(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }

        @@media only screen and (max-width: 400px) {
            #pivot-table-section {
                overflow: auto;
            }
        }

        .pivot-table-property-section {
            overflow: auto;
        }

            .pivot-table-property-section .e-multiselect {
                padding: 0;
            }
    </style>
    <script src="~/Scripts/pivotData/data-source.js"></script>
    <script type="text/javascript">
        var selectedGroups = ['Years', 'Months', 'Days'];
        var groupData = ['Years', 'Quarters', 'Months', 'Days'];
        var isInitialRender = true;

        function onSelect(args) {
            applyGroupSettings(args);
        }
        function onRemoved(args) {
            applyGroupSettings(args);
        }

        function applyGroupSettings(args) {
            if (args.name === 'select') {
                if (selectedGroups.indexOf(args.itemData) === -1) {
                    selectedGroups.push(args.itemData);
                }
            } else {
                if (selectedGroups.indexOf(args.itemData) > -1) {
                    var index = selectedGroups.indexOf(args.itemData);
                    selectedGroups.splice(index, 1);
                }
            }
        }

        document.getElementById('group-apply').onclick = function () {
            var groupSettings = [];
            var numberGroup = document.getElementById('numbergroup').ej2_instances[0];
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (selectedGroups.length > 0) {
                groupSettings.push({ name: 'Date', type: 'Date', groupInterval: selectedGroups });
            }
            if (numberGroup.value > 1) {
                groupSettings.push({ name: 'Product_ID', type: 'Number', rangeInterval: numberGroup.value });
            }
            pivotObj.dataSourceSettings.groupSettings = groupSettings;
        };

        function onLoad(args) {
            var date;
            var data = window.Group_Data;
            var products = ['', 'Bottles and Cages', 'Cleaners', 'Fenders', 'Mountain Bikes', 'Road Bikes', 'Touring Bikes', 'Gloves', 'Jerseys', 'Shorts', 'Vests'];
            var amount = [0, 2, 3, 8, 60, 75, 65, 3, 5, 4, 2];
            for (var ln = 0, lt = data.length; ln < lt; ln++) {
                date = new Date(data[ln].Date.toString());
                data[ln].Date = date.toString();
                data[ln].Products = products[data[ln].Product_ID - 1000];
                data[ln].Sold = data[ln].Sold * (date.getFullYear() === 2021 ? 3 : date.getFullYear() === 2022 ? 4 : date.getFullYear() === 2023 ? 2 : 5);
                data[ln].Amount = ((date.getFullYear() === 2024 ? 2 : 0) + data[ln].Sold) * amount[data[ln].Product_ID - 1000];
            }
            args.pivotview.setProperties({
                dataSourceSettings: {
                    dataSource: ej.base.extend([], data, null, true), groupSettings: [{ name: 'Date', type: 'Date', groupInterval: ['Years', 'Months', 'Days'] },
                    { name: 'Product_ID', type: 'Number', rangeInterval: 4 }]
                }
            }, true);
        }
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }

        function beforeColumnsRender(args) {
            if (args.dataSourceSettings.rows.length > 3 && args.columns[0].width <= 250) {
                args.columns[0].width = 285;
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates grouping dates in year, quarter, month, etc., and number types in ranges like 1–5, 6–10, etc. in row and column headers of the pivot table.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, the date type can be separated and showcased individually as year, quarter, month, or day by selecting the appropriate option from the
            <b>Group Date by</b> drop-down list. Also, numbers can be grouped by entering the appropriate value in the
            <b>Group Product ID by</b> by giving a range number in the the numeric text box.
        </p>
        <p>
            Grouping can be applied through code-behind using the
            <code>groupSettings</code> object in the pivot table along with the following properties:
        </p>
        <table>
            <tr>
                <td style="vertical-align: top;padding: 10px 0;width: 130px">
                    <code>name :</code>
                </td>
                <td>Specifies the normal field.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>type :</code>
                </td>
                <td>
                    Specifies the field type for applying group settings.
                    For example, date-formatted fields should be in "Date" type and number-formatted fields should be in "Number" type.
                </td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>groupInterval :</code>
                </td>
                <td>Specifies the interval for date fields in years, quarters, months, etc.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>rangeInterval :</code>
                </td>
                <td>Specifies the interval value to group the number field.</td>
            </tr>
        </table>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Grouping Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Grouping in ASP.NET MVC Pivot Table Control</h1>
                }