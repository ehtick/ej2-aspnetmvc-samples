@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView

@section ControlsSection{

    <div class="col-lg-9 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add(); })
           .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
           .Columns(columns => { columns.Name("Year").Add(); columns.Name("Quarter").Add(); })
           .Values(values => { values.Name("Sold").Caption("Units Sold").Add(); values.Name("Amount").Caption("Sold Amount").Add(); })).ShowFieldList(true).GridSettings(new PivotViewGridSettings { ColumnWidth = 140, AllowReordering = true, AllowResizing = true,  AllowTextWrap = true }).DataBound("dataBound").Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().CheckBox("reorder").Checked(true).Label("Allow Reordering").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().CheckBox("resize").Checked(true).Label("Allow Resizing").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().CheckBox("autowrap").Checked(false).Label("Allow Text Wrap").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 70%;padding-right: 10px">
                        <div id="linesddl">
                            <input type="text" tabindex="1" id="gridlines">
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
    </style>
    <script>
        var isInitialRender = true;
        var lines = [
            { id: 'Default', type: 'Default' },
            { id: 'Both', type: 'Both' },
            { id: 'None', type: 'None' },
            { id: 'Horizontal', type: 'Horizontal' },
            { id: 'Vertical', type: 'Vertical' }
        ];
        var gridlines = new ej.dropdowns.DropDownList({
            placeholder: 'GridLines',
            floatLabelType: 'Auto',
            dataSource: lines,
            fields: { text: 'type', value: 'id' },
            value: 'Both',
            change: function (e) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                pivotObj.gridSettings.gridLines = e.value;
            },
        });
        gridlines.appendTo('#gridlines');
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.event.target.id === 'reorder') {
                pivotObj.gridSettings.allowReordering = args.checked;
            }
            else if (args.event.target.id === 'resize') {
                pivotObj.gridSettings.allowResizing = args.checked;
            }
            else {
                pivotObj.gridSettings.allowTextWrap = args.checked;
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>
           This sample demonstrates the visibility of gridlines and text wrap along with user interactions like reordering and resizing
           columns. You can change the visibility and user interaction settings through the options available in the properties
           panel.
       </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The
            <code>gridLines</code> property is used to control the line visibility that separates the rows and columns. The grid control allows us
            to display the following grid lines:
        </p>
        <ui>
            <li>
                <code>Default</code> - Shows the Horizontal line.
                <br>
            </li>
            <li>
                <code>None</code> - Shows no line.
                <br>
            </li>
            <li>
                <code>Both</code> - Shows both Horizontal and Vertical lines.
                <br>
            </li>
            <li>
                <code>Horizontal</code> - Shows the Horizontal line.
                <br>
            </li>
            <li>
                <code>Vertical</code> - Shows the Vertical line.
                <br>
                <br>
            </li>
        </ui>

        <p>
            <strong>Auto wrap</strong> cell content can be enabled using the
            <code>allowTextWrap</code>property of the grid. Setting this property will wrap cell text on multiple lines. This feature is useful to view
            the cell content when it exceeds the cell width. Also this property will wrap the text in both content cell and
            header cells.
        </p>
        <p>
            <strong>Reordering</strong> can be enabled by setting the
            <code>allowReordering</code> property as true. Reordering can be done by dragging and dropping the column header from one index to another index
            within the Grid. The location in which the column is to be placed will be indicated by two arrow symbols.
        </p>
        <p>
            <strong>Resizing:</strong> A grid column can be resized by clicking and dragging at the right edge of the columnï¿½s header.
            To enable column resize behavior, set the
            <code>allowResizing</code> property as true.
        </p>
    </div>
}
