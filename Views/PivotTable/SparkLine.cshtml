@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta {
    <meta name="description" content="This example demonstrates the SparkLine in ASP.NET MVC Pivot Table control. Explore here for more details." />
}

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("PivotView_sparkline").Width("100%").Height("450").ShowTooltip(false).DataBound("onDataBound").DataSourceSettings(dataSourceSettings => dataSourceSettings
            .DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
            .FormatSettings(formatsettings =>
            {
                formatsettings.Name("Amount").Format("C0").Add();
            })
            .Rows(rows =>
            {
                rows.Name("Region").Add();
                rows.Name("Product").Add();
            })
            .Columns(columns =>
            {
                columns.Name("Year").Add();
            })
            .Values(values =>
            {
                values.Name("Amount").Add();
            })
            .DrilledMembers(drilledmembers =>
            {
                drilledmembers.Name("Region").Items(ViewData["drilledMembers"] as string[]).Add();
            })).GridSettings(new Syncfusion.EJ2.PivotView.PivotViewGridSettings
            {
                ColumnWidth = 110,
                RowHeight = 70,
                ColumnRender = "columnRender",
                HeaderCellInfo = "headerCellInfo",
                QueryCellInfo = "queryCellInfo"
            }).Render()
        </div>
    </div>

    <style>
        .sb-sample-content-area {
            min-height: 255px !important;
        }

        .control-section {
            min-height: 255px !important;
        }

        .e-columnsheader .e-input-group {
            margin-top: 20px;
        }
    </style>
    <script>
        var chartType = 'Column';
        var isDropDownExist = true;
        var chartData = ['Line', 'Column', 'Area', 'WinLoss'];
        var obj = {};
        var sparkline;
        function columnRender(args) {
            args.columns[0].width = 175;
            for (var i = 1; i < args.columns.length - 1; i++) {
                args.columns[i].width = 140;
            }
            args.columns[args.columns.length - 1].width = 500;
        }
        function headerCellInfo(args) {
            if (args.cell && args.cell.column && args.cell.column.customAttributes &&
                args.cell.column.customAttributes.cell.type == 'grand sum') {
                var input = document.createElement('input');
                input.type = 'text';
                input.tabIndex = 1;
                input.id = 'grandTotal_dropdown';
                args.node.style.textAlign = 'right';
                args.node.querySelector('.e-pivotcell-container').appendChild(input);
                args.node.querySelector('.e-headertext').style.alignSelf = 'unset';
                args.node.querySelector('.e-headertext').innerText = 'Total Sales Comparison';
                isDropDownExist = true;
            }
        }
        function queryCellInfo(args) {
            var colIndex = Number(args.cell.getAttribute('aria-colindex')) - 1;
            if (args.data[colIndex].isGrandSum && args.data[colIndex].columnHeaders == '') {
                args.cell.innerText = '';
                var div = document.createElement('div');
                div.id = 'chart' + args.data[colIndex].rowIndex;
                div.style.marginTop = '20px';
                args.cell.appendChild(div);

                var data = [];
                for (var i = 1; i < Object.keys(args.data).length - 1; i++) {
                    var object = {
                        x: i,
                        xval: args.data[i].columnHeaders,
                        yval: args.data[i].actualValue,
                    };
                    data.push(object);
                }
                obj[args.data[colIndex].rowIndex] = data;
            }
        }
        function onDataBound() {
            var pivotObj = document.getElementById('PivotView_sparkline').ej2_instances[0];
            if (isDropDownExist) {
                isDropDownExist = false;
                var chartTypeDropDown = new ej.dropdowns.DropDownList({
                    floatLabelType: 'Auto',
                    dataSource: chartData,
                    value: chartType,
                    width: 200,
                    change: function (args) {
                        chartType = args.value;
                        pivotObj.refreshData();
                    },
                });
                chartTypeDropDown.appendTo('#grandTotal_dropdown');
            }
            var keys = Object.keys(obj);
            for (var i = 0; i < Object.keys(obj).length; i++) {
                sparkline = new ej.charts.Sparkline({
                    height: '30px',
                    lineWidth: 1,
                    type: chartType,
                    valueType: 'Category',
                    dataSource: obj[keys[i]],
                    xName: 'xval',
                    yName: 'yval',
                    markerSettings: {
                        visible: ['High', 'Low'],
                        size: 3,
                    },
                    highPointColor: 'blue',
                    lowPointColor: 'red',
                    tiePointColor: 'pink',
                    tooltipSettings: {
                        format: '${xval}: $ ${yval}',
                        visible: true,
                        trackLineSettings: {
                            visible: true,
                            color: '#033e96',
                            width: 1
                        }
                    },
                });
                sparkline.appendTo('#chart' + keys[i]);
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription {
    <div id="action-description">
        <p>
            This sample shows how to embed sparkline charts in Pivot Table cells to visually highlight trends and comparisons
            in sales data. You can choose different sparkline types Line, Column, Area, or WinLoss directly from the grand
            total header cell to analyze performance metrics at a glance.
        </p>
    </div>
}

@section Description {
    <div id="description">
        <p>
            This sample demonstrates how to embed <a target="_blank"
                                                     href="https://ej2.syncfusion.com/aspnetmvc/documentation/sparkline/getting-started/">Sparkline</a> charts within the
            Pivot Table's grand total cells to visually summarize yearly sales performance across different regions.
        </p>
        <p>
            The charts are rendered by capturing relevant cell values during the <a target="_blank"
                                                                                    href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/row-and-column#querycellinfo">QueryCellInfo</a>
            event and inserting the sparklines after the Pivot Table is fully rendered via the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.pivotview.pivotview.html#Syncfusion_EJ2_PivotView_PivotView_DataBound">DataBound</a> event.
        </p>
        <p>
            A built-in dropdown in the grand total column header allows dynamic switching between Sparkline types at
            runtime:
        </p>
        <ul>
            <li><code>Line</code> - Displays trends with a continuous line.</li>
            <li><code>Column</code> - Shows values as vertical bars for easy comparison.</li>
            <li><code>Area</code> - Highlights magnitude with a filled line chart.</li>
            <li><code>WinLoss</code> - Visualizes binary outcomes without exposing exact values.</li>
        </ul>
        <p>
            Embedding the chart-type selector within the header keeps the interface compact and intuitive, enabling seamless
            visual analysis with minimal performance overhead.
        </p>
        <br />
        <p>
            More information on QueryCellInfo can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/row-and-column#querycellinfo">
                documentation section
            </a>.
        </p>
    </div>
}

@section Title {
    <title>ASP.NET MVC Pivot Table SparkLine Example - Syncfusion Demos </title>
}

@section Header {
    <h1 class='sb-sample-text'>Example of SparkLine in ASP.NET MVC Pivot Table Control</h1>
}