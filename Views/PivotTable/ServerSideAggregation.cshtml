@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@using Syncfusion.EJ2.Navigations

@section Meta{
                    <meta name="description" content="This example demonstrates the server-side pivot engine Functionalities in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("450").DataSourceSettings(dataSourceSettings => dataSourceSettings.Url("https://ej2services.syncfusion.com/aspnet/development/api/pivot/post").Mode(Syncfusion.EJ2.PivotView.RenderMode.Server).ExpandAll(false).EnableSorting(true)
            .DrilledMembers(drilledmembers =>
            {
                drilledmembers.Name("Country").Items((string[])ViewData["drilledMembers"]).Add();
            }).FieldMapping(fields =>
            {
                fields.Name("Product_Categories").GroupName("Product Details").Add();
                fields.Name("Order_Source").GroupName("Product Details").Add();
            })
            .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").Add(); formatsettings.Name("Sold").Format("N0").Add(); })
            .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); }).Columns(columns => { columns.Name("Year").Caption("Production Year").Add(); })
            .Values(values => { values.Name("Sold").Caption("Unit Sold").Add(); values.Name("Amount").Caption("Sold Amount").Add(); })).GridSettings(new PivotViewGridSettings { ColumnWidth = 120, Layout = GridLayout.Tabular }).Toolbar(new List<string>
                () { "Export", "FieldList" }).DataBound("onDataBound").ShowGroupingBar(true).ShowFieldList(true).AllowDataCompression(true).AllowExcelExport(true).AllowPdfExport(true).ShowToolbar(true).ToolbarRender("beforeToolbarRender").BeforeExport("beforeExport").Render()
        </div>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        
        .sb-sample-content-area {
            min-height: 255px !important;
        }

        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var isInitialRender = true;
        function onDataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (ej.base.Browser.isDevice && pivotObj && pivotObj.enableRtl) {
                document.querySelector('.control-section').classList.add('e-rtl');
            }
            if (document.querySelector('#grid_menu .e-menu-item') == null) {
                var menuItems = [
                    {
                        iconCss: 'e-toolbar-grid e-icons',
                        items: [
                            { text: 'Compact Layout', id: 'Compact' },
                            { text: 'Tabular Layout', id: 'Tabular' },
                        ],
                    },
                ];
                new ej.navigations.Menu(
                    { items: menuItems, select: gridToolbarClicked },
                    '#grid_menu'
                );
            }
        }
        function beforeToolbarRender(args) {
            args.customToolbar.splice(2, 0, {
                template: '<ul id="grid_menu"></ul>',
                id: 'custom_toolbar'
            });
            args.customToolbar.splice(1, 0, {
                type: 'Separator'
            });
        }
        function beforeExport(args) {
            if (args.excelExportProperties) {
                getExcelExportProperties(args.excelExportProperties);
            } else if (args.pdfExportProperties) {
                getPdfExportProperties(args.pdfExportProperties);
            }
        }
        function gridToolbarClicked(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (pivotObj && pivotObj.gridSettings && pivotObj.gridSettings.layout !== args.item.id && (args.item.id == 'Compact' || args.item.id == 'Tabular')) {
                pivotObj.setProperties({
                    gridSettings: {
                        layout: args.item.id
                    },
                    displayOption: {
                        view: 'Both', primary: 'Table'
                    },
                }, true);
                pivotObj.refresh();
            }
        }
        function getExcelExportProperties(excelExportProperties) {
        excelExportProperties.header = {
            headerRows: 7,
            rows: [
                {
                    index: 1,
                    cells: [
                        { index: 1, colSpan: 13, value: 'INVOICE', style: { fontColor: '#C25050', fontSize: 25, hAlign: 'Center', bold: true } }
                    ]
                },
                {
                    index: 3,
                    cells: [
                        { index: 1, colSpan: 3, value: 'Adventure Traders', style: { fontColor: '#C67878', fontSize: 15, bold: true } },
                        { index: 10, colSpan: 2, value: 'INVOICE NUMBER', style: { fontColor: '#C67878', bold: true } },
                        { index: 12, colSpan: 2, value: 'DATE', style: { fontColor: '#C67878', bold: true } }
                    ]
                },
                {
                    index: 4,
                    cells: [
                        { index: 1, colSpan: 3, value: '2501 Aerial Center Parkway' },
                        { index: 10, colSpan: 2, value: 2034 },
                        { index: 12, colSpan: 2, value: new Date() }
                    ]
                },
                {
                    index: 5,
                    cells: [
                        { index: 1, colSpan: 3, value: 'Tel +1 888.936.8638 Fax +1 919.573.0306' },
                        { index: 10, colSpan: 2, value: 'CUSTOMER ID', style: { fontColor: '#C67878', bold: true } },
                        { index: 12, colSpan: 2, value: 'TERMS', style: { fontColor: '#C67878', bold: true } }
                    ]
                },
                {
                    index: 6,
                    cells: [
                        { index: 10, colSpan: 2, value: 564 },
                        { index: 12, colSpan: 2, value: 'Net 30 days' }
                    ]
                }
            ]
        };
        excelExportProperties.footer = {
            footerRows: 3,
            rows: [
                {
                    index: 2,
                    cells: [
                        { colSpan: 13, value: 'Thank you for your business!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }
                    ]
                },
                {
                    index: 3,
                    cells: [
                        { colSpan: 13, value: '!Visit Again!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }
                    ]
                }
            ]
        };
    }
    
    function getPdfExportProperties(pdfExportProperties) {
        pdfExportProperties.header = {
            fromTop: 0,
            height: 130,
            contents: [
                {
                    type: 'Text',
                    value: 'INVOICE',
                    position: { x: 250, y: 50 },
                    style: { textBrushColor: '#C25050', fontSize: 19 },
                },
            ],
        };
        pdfExportProperties.footer = {
            fromBottom: 0,
            height: 130,
            contents: [
                {
                    type: 'Text',
                    value: 'Thank you for your business!',
                    position: { x: 250, y: 50 },
                    style: { textBrushColor: '#C67878', fontSize: 13 },
                },
            ],
        };
    }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample shows how to use a server-side pivot engine to fetch and display summarized data in the Pivot Table.
        It includes export options for Excel, CSV, and PDF with headers and footers, and a layout switcher to toggle
        between Compact and Tabular views at runtime.</p>
    </div>
}

@section Description{
    <div id="description">
    <p>
        The Pivot Table's server-side pivot engine (external pivot engine) uses the Syncfusion package <a
        target="_blank" href="https://www.nuget.org/packages/Syncfusion.Pivot.Engine/" aria-label="Syncfusion.Pivot.Engine"> Syncfusion.Pivot.Engine<span class="sr-only">opens in a new tab</span></a> to
        gather data from the data source and perform all pivot operations such as <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/aggregation/#aggregation" aria-label="Aggregation">
            Aggregation<span class="sr-only">opens in a new tab</span></a>, <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/filtering/#filtering" aria-label="Filtering">
            Filtering<span class="sr-only">opens in a new tab</span></a>, <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/sorting/#sorting" aria-label="Sorting">
            Sorting<span class="sr-only">opens in a new tab</span></a>, <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/grouping/#grouping" aria-label="Grouping">
            Grouping<span class="sr-only">opens in a new tab</span></a>, and more on a separate hosted server and only paged
        data is sent to the pivot table viewport via web service.
        The <a target="_blank"
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotViewDataSourceSettings.html#Syncfusion_EJ2_PivotView_PivotViewDataSourceSettings_Url" aria-label="DataSourceSettings">
            DataSourceSettings-&gt;Url<span class="sr-only">opens in a new tab</span></a> property allows this web service URL to be
        connected to the pivot table.
    </p>
    <p>
        In this demo, the Pivot Table is rendered using an external server-side engine, which significantly enhances
        performance when handling large datasets. By offloading data processing to the server, client-side rendering becomes
        faster and more efficient—ensuring a smoother user experience even with complex or high-volume data.
    </p>
    <p>
        For further performance improvements when working with large data volumes, we recommend enabling <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/virtual-scrolling">
            virtualization</a> or <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/paging">
            paging</a> features.
    </p>
    <p>
        The built-in toolbar includes export options for Excel, CSV, and PDF documents. These export features support
        adding headers and footers, enabling enriched document formatting and presentation.
    </p>
    <p>
        Additionally, a custom toolbar menu is provided to switch between <strong>Compact</strong> and
        <strong>Tabular</strong> layouts at runtime, offering flexibility in how the summarized data is displayed.
    </p>
    <br />
    <p>
        More information about server-side aggregation can be found in this <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetmvc/documentation/pivot-table/server-side-pivot-engine#connecting-pivot-table-to-server-side-pivot-engine" aria-label="documentation section" >
            documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Pivot Table server-side pivot engine Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of server-side pivot engine in ASP.NET MVC Pivot Table Control</h1>
                }