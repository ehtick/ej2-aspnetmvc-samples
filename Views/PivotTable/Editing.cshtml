@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Editing in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("290").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings =>
           {
               formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
           })
           .Rows(rows =>
           {
               rows.Name("Country").Add();
               rows.Name("Product_Categories").Caption("Product Categories").Add();
               rows.Name("Products").Add();
           })
           .Columns(columns =>
           {
               columns.Name("Year").Add();
               columns.Name("Quarter").Add();
               columns.Name("Order_Source").Caption("Order Source").Add();
           })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add();
               values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           ).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).EditSettings(new PivotViewCellEditSettings { AllowEditing= true, AllowAdding= true, AllowDeleting= true, Mode= EditMode.Normal }).ShowTooltip(false).DataBound("dataBound").Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().RadioButton("inline").Label("Inline Editing").Name("EditOperation").Checked(true).Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().RadioButton("batch").Label("Batch Editing").Name("EditOperation").Checked(false).Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().RadioButton("dialog").Label("Dialog Editing").Name("EditOperation").Checked(false).Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            @Html.EJS().RadioButton("cc").Label("Command Columns").Name("EditOperation").Checked(false).Change("onChange").Render()
                        </div>
                    </td>
                </tr>                
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var isInitialRender = true;
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onChange(args) {
            var id = args.event.target.id;
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (id === 'inline') {
                pivotObj.editSettings.allowCommandColumns = false;
                pivotObj.editSettings.mode = "Normal";
            }
            else if (id === 'batch') {
                pivotObj.editSettings.allowCommandColumns = false;
                pivotObj.editSettings.mode = "Batch";
            }
            else if (id === 'dialog') {
                pivotObj.editSettings.allowCommandColumns = false;
                pivotObj.editSettings.mode = "Dialog";
            }
            else {
                pivotObj.editSettings.allowCommandColumns = true;
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
      <p>This sample demonstrates CRUD operations performed over the raw items of any value cell in a pivot table. Different types of cell editing options are provided to make editing simpler.</p>
    </div>
}

@section Description{
    <div id="description">
      <p>
        In the sample, the raw items of any value cell can be viewed in a drill-through dialog by double-clicking the
        cell. CRUD operations can be performed by double-clicking the cells or using toolbar options. The following
        CRUD operations can be performed through toolbar operations for normal and batch edits:
      </p>
    <ul>
        <li><code>Add</code> - To add new record, click <code>Add</code> in the toolbar.</li>
        <li><code>Edit</code> - To edit record, double click a cell.</li>
        <li><code>Delete</code> - To delete a record, click <code>Delete</code> in the toolbar after selected a row.</li>
        <li><code>Update</code>,<code>Cancel</code> - You can save or discard changes by clicking <code>Update</code>
            or <code>Cancel</code> in
            the toolbar, respectively.</li>
    </ul>
    <p>This CRUD operations can be configured in a pivot table using <code>editSettings</code> in code behind. There are also
        different modes to manipulate the data source.</p>
      <p>The available modes are:</p>
      <ul>
        <li>
          <code>Normal</code> - Editing by row.
        </li>
        <li>
          <code>Batch</code> - Editing individual cells and bulk updating.
        </li>
        <li>
          <code>Dialog</code> - Editing by row with a dialog option.
        </li>
        <li>
          <code>Command Columns</code> - An additional column appends to the data grid with icons to perform CRUD
          operations. Editing using cell double-click is restricted here.
        </li>
      </ul>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Editing Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Editing in ASP.NET MVC Pivot Table Control</h1>
                }