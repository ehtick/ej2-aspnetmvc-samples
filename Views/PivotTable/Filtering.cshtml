@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@using Syncfusion.EJ2.DropDowns
@section Meta{
                    <meta name="description" content="This example demonstrates the Default Filtering in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-8 control-section" style="overflow:auto">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>
                )ViewData["Data"]).ExpandAll(false).EnableSorting(true)
                .FormatSettings(formatsettings =>
                {
                formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
                })
                .Rows(rows =>
                {
                rows.Name("Country").Add();
                rows.Name("Products").Add();
                })
                .Columns(columns =>
                {
                columns.Name("Year").Add();
                columns.Name("Order_Source").Caption("Order Source").Add();
                })
                .Values(values =>
                {
                values.Name("In_Stock").Caption("In Stock").Add();
                values.Name("Sold").Caption("Units Sold").Add();
                values.Name("Amount").Caption("Sold Amount").Add();
                })
                .Filters(filters =>
                {
                filters.Name("Product_Categories").Caption("Product Categories").Add();
                })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).DataBound("onDataBound").Render()
        </div>
    </div>
    <div class="col-lg-4 property-section pivottable-property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Fields:
                        </div>
                    </td>
                    <td>
                        <div>
                            @Html.EJS().DropDownList("fields").DataSource((IEnumerable<object>)ViewData["fieldsData"]).Width("98%").Index(0).Change("onFieldChange").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Members:
                        </div>
                    </td>
                    <td style="padding-bottom: 16px">
                        <div class="valuecls">
                            @Html.EJS().MultiSelect("values").DataSource((IEnumerable<object>)ViewData["filterValues"]).Mode(Syncfusion.EJ2.DropDowns.VisualMode.CheckBox
                            ).ShowDropDownIcon(true).ShowClearButton(false).EnableSelectionOrder(true).Placeholder("Select members").Select("onSelect").Removed("onRemoved"
                            ).Fields(new MultiSelectFieldSettings() { Text = "Member" }).Open("onOpen").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Filter Type:
                        </div>
                    </td>
                    <td>
                        <div style="margin-top:-5px">
                            @Html.EJS().DropDownList("type").DataSource((IEnumerable<object>)ViewData["typeData"]).Width("98%").Index(1).Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td></td>
                    <td>
                        <div style="float:right;margin-right: 4px">
                            @Html.EJS().Button("apply-btn").Content("Apply").IsPrimary(true).Disabled(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .e-pivottable .e-static {
            width: 80% !important;
        }
        .e-disabled {
            display: none !important;
        }
        .valuecls {
            margin-top: 13px;
        }
        .material .valuecls {
            margin-top: 8px;
        }
        .e-multiselect.e-input-group {
            padding: 0px !important;
            width: 98% !important;
        }
        .material .e-multiselect.e-input-group {
            width: 100% !important;
        }
        .pivottable-property-section table tr td:first-child {
            width: 20%;
        }
        .pivottable-property-section {
            overflow: auto;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var isInitialRender = true;
        var fieldCollections = {};
        var filterCollections = {};
        var isInitial = true;
        var type = ['Include', 'Exclude'];
        var values = [];
        var fields = ['Country', 'Products', 'Year'];
        function onDataBound(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitial) {
                var fieldCnt = fields.length - 1;
                while (fieldCnt > -1) {
                    var members = Object.keys(pivotObj.engineModule.fieldList[fields[fieldCnt]].members);
                    var memberCnt = members.length - 1;
                    var memberColl = [];
                    while (memberCnt > -1) {
                        memberColl.push({ Member: members[memberCnt], Checked: members[memberCnt] + '_' + false });
                        memberCnt--;
                    }
                    fieldCollections[fields[fieldCnt]] = memberColl;
                    fieldCnt--;
                }
                values = fieldCollections[fields[0]];
                if (document.getElementById('values').ej2_instances) {
                    var valuesddl = document.getElementById('values').ej2_instances[0];
                    valuesddl.dataSource = values;
                    valuesddl.dataBind();
                }
                isInitial = false;
            }
			for (var i = 0, filters = pivotObj.dataSourceSettings.filterSettings; i < filters.length; i++) {
                var field = filters[i];
                filterCollections[field.name] = field;
            }
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
        function onSelect(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            applyBtn.disabled = false;
            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + true);
        }
        function onRemoved(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + false);
            setApplyBtnState();
        }
        function onOpen(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            if(args.popup.element.querySelector(".e-filter-parent")) {
                args.popup.element.querySelector(".e-filter-parent").style.display = 'none';
            }
        }
        function onFieldChange(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            valuesddl.dataSource = fieldCollections[args.value.toString()];
            valuesddl.value = getSelectedMembers(args.value.toString());
            if (filterCollections[args.value.toString()]) {
                typeddl.value = filterCollections[args.value.toString()].type;
            }
            valuesddl.dataBind();
            typeddl.dataBind();
        }
        function getSelectedMembers(field) {
            var membersColl = [];
            var members = fieldCollections[field];
            var memLength = members.length - 1;
            while (memLength > -1) {
                if (members[memLength]['Checked'] === members[memLength]['Member'] + '_' + true) {
                    membersColl.push(members[memLength]['Member'].toString());
                }
                memLength--;
            }
            return membersColl;
        }
        function setMemberCheckedState(field, member, checkedState) {
            var members = fieldCollections[field];
            var memLength = members.length - 1;
            while (memLength > -1) {
                if (members[memLength]['Member'] === member) {
                    members[memLength]['Checked'] = checkedState;
                    break;
                }
                memLength--;
            }
        }
        function setApplyBtnState() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            var fieldArray = ['Country', 'Products', 'Year'];
            var loopCount = fieldArray.length - 1;
            var isSelected = false;
            var isFiltersAvail = false;
            while (loopCount > -1) {
                if (getSelectedMembers(fieldArray[loopCount]).length > 0) {
                    isSelected = true;
                    break;
                }
                if (pivotObj.dataSourceSettings.filterSettings &&
                    pivotObj.dataSourceSettings.filterSettings[loopCount] &&
                    pivotObj.dataSourceSettings.filterSettings[loopCount].items.length > 0) {
                    isFiltersAvail = true;
                }
                loopCount--;
            }
            applyBtn.disabled = (!isSelected && isFiltersAvail) ? isSelected : !isSelected;
        }
        function updateFilterType(fieldName) {
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            if (fieldsddl.itemData === fieldName) {
                return typeddl.itemData;
            } else if (filterCollections[fieldName]) {
                return filterCollections[fieldName].type;
            } else {
                return 'Exclude'
            }
        }
        document.getElementById('apply-btn').onclick = function () {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            //You can set your filter settings here.
            var filterItems0 = getSelectedMembers(fields[0]);
            var filterItems1 = getSelectedMembers(fields[1]);
            var filterItems2 = getSelectedMembers(fields[2]);
            pivotObj.dataSourceSettings.filterSettings = [
                { name: fields[0], items: getSelectedMembers(fields[0]), type: updateFilterType(fields[0]) },
                { name: fields[1], items: getSelectedMembers(fields[1]), type: updateFilterType(fields[1]) },
                { name: fields[2], items: getSelectedMembers(fields[2]), type: updateFilterType(fields[2]) },
            ];
            if (filterItems0.length === 0 && filterItems1.length === 0 && filterItems2.length === 0) {
                applyBtn.disabled = true;
            }
        }
        document.addEventListener('DOMContentLoaded', function () {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            valuesddl.dataSource = values;
            valuesddl.dataBind();
        });
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates filtering row and column headers either by including or excluding them from the pivot table.</p>
	</div>
}

@section Description{
	<div id="description">
		<p>In this sample, any field can be selected from
			<b>Fields</b> dropdown list along with its members from be subsequent
			<b>Members</b> dropdown list and finally select whether to include or exclude them from filtering. It can be achieved
			using the
			<code>name</code> and
			<code>items</code> options inside the
			<code>filterSettings</code> property in the pivot table.
		</p>
	</div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Default Filtering Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Filtering in ASP.NET MVC Pivot Table Control</h1>
                }