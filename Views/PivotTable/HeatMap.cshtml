@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
            <meta name="description" content="This example demonstrates the HeatMap in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("PivotView-Heatmap").Width("100%").Height("500").EnginePopulated("enginePopulated").AggregateCellInfo("aggregateCellInfo").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewData["Data"]).ExpandAll(true).EnableSorting(false).ShowColumnSubTotals(false)
            .FormatSettings(formatsettings => { formatsettings.Name("SoldAmount").Format("C0").Add(); })
            .GroupSettings(groupSettings => { groupSettings.Name("Year").Type(GroupType.Number).RangeInterval(2).Add(); })
            .ValueSortSettings(new PivotViewValueSortSettings { HeaderDelimiter = " - " })
            .Rows(rows => { rows.Name("Year").Add(); })
            .Columns(columns => { columns.Name("ProductType").Add(); columns.Name("Product").Add(); })
            .Values(values => { values.Name("SoldAmount").Caption("Sold Amount").Add(); })).GridSettings(gridSettings => gridSettings.ColumnWidth(120).RowHeight(35)).CellTemplate("${getCellContent(data)}").DataBound("dataBound").Render()
        </div>
    </div>

    <style>

    #PivotView-Heatmap .e-collapse {
        display: none;
    }

    #PivotView-Heatmap {
        width: 100%;
        height: 100%;
    }

    .sb-sample-content-area {
        min-height: 255px !important;
    }

    .control-section {
        min-height: 255px !important;
    }
    
    .range1 {
        background-color: #fb6262 !important;
        border-color: #f26666 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range2 {
        background-color: #ff6c6c !important;
        border-color: #ff6c6c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range3 {
        background-color: #ff8474 !important;
        border-color: #ff8474 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range4 {
        background-color: #ffa474 !important;
        border-color: #ffa474 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range5 {
        background-color: #ffac7c !important;
        border-color: #ffac7c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range6 {
        background-color: #ffcc7c !important;
        border-color: #ffcc7c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range7 {
        background-color: #ffe484 !important;
        border-color: #ffe484 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range8 {
        background-color: #f8e484 !important;
        border-color: #f8e484 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range9 {
        background-color: #e0dc84 !important;
        border-color: #e0dc84 !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range10 {
        background-color: #b8d47c !important;
        border-color: #b8d47c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range11 {
        background-color: #a8d47c !important;
        border-color: #a8d47c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range12 {
        background-color: #8bc97d !important;
        border-color: #8bc97d !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range13 {
        background-color: #68bc7c !important;
        border-color: #68bc7c !important;
        font-weight: 500;
        color: black !important;
        text-shadow: 0px 0px black;
    }

    .range14 {
        background-color: #66bb71 !important;
        color: black !important;
        font-weight: 500;
        border-color: #66bb71 !important;
        text-shadow: 0px 0px black;
    }
    </style>
    <script>
        var isInitialRender = true;
        var colourScheme = ['range1', 'range2', 'range3', 'range4', 'range5', 'range6', 'range7', 'range8', 'range9',
        'range10', 'range11', 'range12', 'range13', 'range14'];
        var minValue = 0;
        var maxValue = 0;
        function getCellContent(args) {
            if (args != null && args.cellInfo) {
                if (args.cellInfo.axis === 'value') {
                    if (args.cellInfo.axis === 'value' && !args.cellInfo.isGrandSum) {
                        args.targetCell.classList.add(cellColour(args.cellInfo.value));
                    }
                    args.targetCell.querySelector('.e-cellvalue').innerText = '$' + (args.cellInfo.value / 1000).toFixed(1) + 'K';
                }
            }
            return "";
        }
        function aggregateCellInfo(args) {
            if (args.rowCellType !== "grandTotal" && args.columnCellType !== "grandTotal") {
                minValue = (minValue < args.value && minValue !== 0) ? minValue : args.value;
                maxValue = maxValue > args.value ? maxValue : args.value;
            }
        }
        function cellColour(value) {
            var percentage = (maxValue - minValue) / colourScheme.length;
            var colourIndex = Math.round((value - minValue) / percentage);
            return colourScheme[colourIndex];
        }
        function enginePopulated() {
            minValue = minValue - 1000;
            maxValue = maxValue + 1000;
        }
        function dataBound() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitialRender && pivotObj.element.querySelector('.e-valuescontent')) {
                pivotObj.layoutRefresh();
                isInitialRender = false;
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            In this sample, we show you how to visualize the bound data by making the pivot table cells look like a HeatMap.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The Pivot Table provides custom styles for each cell's display with the help of the <a target="_blank"
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_QueryCellInfo" aria-label="QueryCellInfo">
            QueryCellInfo<span class="sr-only">opens in a new tab</span></a> event. Using the <a target="_blank" 
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_QueryCellInfo" aria-label="QueryCellInfo">
            QueryCellInfo<span class="sr-only">opens in a new tab</span></a> event in this sample, we are representing the product-specific monthly sales revenue of the 
            goods sold by an online retailer in a year in the form of a heatmap-like appearance. Each pivot table cell was customized
            by calculating the lowest and highest values via the <a target="_blank"
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.PivotView.PivotFieldList.html#Syncfusion_EJ2_PivotView_PivotFieldList_EnginePopulated" aria-label="EnginePopulated">
            EnginePopulated<span class="sr-only">opens in a new tab</span></a> event and applying a color scheme based on their range.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Pivot Table HeatMap Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of HeatMap in ASP.NET MVC Pivot Table Control</h1>
                }
