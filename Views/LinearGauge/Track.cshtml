@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12"
                 style="display: flex;justify-content: center; align-items: center;">
                <div style="margin: auto;padding: 10px;">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <div id='horizontal' style="padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center">Horizontal</div>
                                </td>
                                <td>
                                    <div id='vertical' style="padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center">Vertical</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <pre style="background-color: inherit; border:hidden"></pre>
        <div id="containerBox" style="float: left;padding: 4%;"></div>
        <div id='containerDefault' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearDefault").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Default axis").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true).Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")))
            .Pointers(pointer => pointer.Width(0).Add())
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
        </div>
        <div id='containerEdge' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearEdge").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Edge style").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Container(container => container.Width(20).RoundedCornerRadius(10).Type(Syncfusion.EJ2.LinearGauge.ContainerType.RoundedRectangle).Border(border => border.Width(1))).Axes(axes => 
            axes.Minimum(0).Maximum(100).OpposedPosition(true).Line(line => line.Width(0)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).UseRangeColor(true))
            .Pointers(pointer => pointer.Width(0).Add())
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
        </div>
        <div id='containerRange' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearRange").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Range color for axis").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes =>
            axes.Minimum(0).Maximum(100).OpposedPosition(true).Line(line => line.Width(0)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).UseRangeColor(true))
            .Pointers(pointer => pointer.Width(0).Add())
            .Ranges(range =>
            {
                range.Start(0).End(30).StartWidth(5).EndWidth(5).Color("#F45656").Offset("-5").Add();
                range.Start(30).End(60).StartWidth(5).EndWidth(5).Color("#FFC93E").Offset("-5").Add();
                range.Start(60).End(100).StartWidth(5).EndWidth(5).Color("#0DC9AB").Offset("-5").Add();
            })
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
        </div>
        <div id='containerInversed' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearInversed").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Inversed axis").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true).IsInversed(true).Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")))
            .Pointers(pointer => pointer.Width(0).Add())
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
        </div>
        <div id='containerOpposed' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearOpposed").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Opposed axis").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true).Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside))
            .Pointers(pointer => pointer.Width(0).Add())
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
    </div>
    <script type="text/javascript">
        var linearDefaultGauge, linearEdgeGauge, linearRangeGauge, linearInversedGauge, linearOpposedGauge;
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            if (sender.gauge.element.id === 'linearDefault') {
                linearDefaultGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearEdge') {
                linearEdgeGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearRange') {
                linearRangeGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearInversed') {
                linearInversedGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearOpposed') {
                linearOpposedGauge = sender.gauge;
            }
        }
        
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('horizontal').addEventListener('click', function () {
                document.getElementById('containerBox').style.padding = "0%";
                document.getElementById('containerDefault').className = document.getElementById('containerEdge').className =
                    document.getElementById('containerRange').className = document.getElementById('containerInversed').className =
                    document.getElementById('containerOpposed').className = "col-xs-12 col-sm-12 col-lg-12 col-md-12";
                linearDefaultGauge.width = linearEdgeGauge.width = linearRangeGauge.width = linearInversedGauge.width = linearOpposedGauge.width = '450px';
                linearDefaultGauge.height = linearEdgeGauge.height = linearRangeGauge.height = linearInversedGauge.height = linearOpposedGauge.height = '150px';
                linearDefaultGauge.orientation = linearEdgeGauge.orientation = linearRangeGauge.orientation = linearInversedGauge.orientation = linearOpposedGauge.orientation = "Horizontal";
                document.getElementById('horizontal').style.color = "white";
                document.getElementById('horizontal').style.backgroundColor = "#0074E3";
                    document.getElementById('vertical').style.color = "black";
                    document.getElementById('vertical').style.backgroundColor = "white";

                    });
        document.getElementById('vertical').addEventListener('click', function () {
            document.getElementById('containerBox').style.padding = "4%";
            document.getElementById('containerDefault').className = document.getElementById('containerEdge').className =
                document.getElementById('containerRange').className = document.getElementById('containerInversed').className =
                document.getElementById('containerOpposed').className = "col-xs-4 col-sm-4 col-lg-2 col-md-2";
            linearDefaultGauge.width = linearEdgeGauge.width = linearRangeGauge.width = linearInversedGauge.width = linearOpposedGauge.width = '150px';
            linearDefaultGauge.height = linearEdgeGauge.height = linearRangeGauge.height = linearInversedGauge.height = linearOpposedGauge.height = '350px';
            linearDefaultGauge.orientation = linearEdgeGauge.orientation = linearRangeGauge.orientation = linearInversedGauge.orientation = linearOpposedGauge.orientation = "Vertical";
            document.getElementById('vertical').style.color = "white";
            document.getElementById('vertical').style.backgroundColor = "#0074E3";
                document.getElementById('horizontal')['style']['color'] = "black";
                document.getElementById('horizontal')['style']['backgroundColor'] = "white";

        });
        });
        
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the basic axis, its edge style, range color for axis, inversed and opposed axis.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Track in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure axis in the linear gauge. The 
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeContainer.html#Syncfusion_EJ2_LinearGauge_LinearGaugeContainer_RoundedCornerRadius" aria-label="RoundedCornerRadius">
                RoundedCornerRadius<span class="sr-only">opens in a new tab</span></a>,
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeLabel.html#Syncfusion_EJ2_LinearGauge_LinearGaugeLabel_UseRangeColor" aria-label="UseRangeColor">
                UseRangeColor<span class="sr-only">opens in a new tab</span></a>,
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeAxis.html#Syncfusion_EJ2_LinearGauge_LinearGaugeAxis_IsInversed" aria-label="IsInversed">
                IsInversed<span class="sr-only">opens in a new tab</span></a>, and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeAxis.html#Syncfusion_EJ2_LinearGauge_LinearGaugeAxis_OpposedPosition" aria-label="OpposedPosition">OpposedPosition<span class="sr-only">opens in a new tab</span></a> properties can be used to set the edge style, range color for axis, inversed and opposed axis respectively.
</p>
        <p>
            More information on the axis can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/axis" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}
@section Title{
    <title>ASP.NET MVC Linear Gauge Track Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Track in ASP.NET MVC Linear Gauge Control</h1>
}