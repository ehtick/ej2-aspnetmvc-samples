@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        @Html.EJS().LinearGauge("container").AxisLabelRender("axisLabelRender").Load("onGaugeLoad").Background("Transparent").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Axes(axes =>
        axes.Minimum(5).Maximum(20).OpposedPosition(true)
        .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit").Size("16px")).Offset(20))
        .Pointers(pointer =>
        {
            pointer.Width(25).Height(25).Value(5).Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Image).ImageUrl(@Url.Content("~/Content/LinearGauge/tick-icon.png")).Add();
            pointer.Width(25).Height(25).Value(10).Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Image).ImageUrl(@Url.Content("~/Content/LinearGauge/tick-icon.png")).Add();
            pointer.Width(25).Height(25).Value(15).Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Image).ImageUrl(@Url.Content("~/Content/LinearGauge/tick-icon.png")).Add();
            pointer.Width(15).Height(25).Value(20).Color("#D1D9DD").Placement(Syncfusion.EJ2.LinearGauge.Placement.Center).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).Offset("-13").Add();
        }).Ranges(range =>
        {
            range.Start(5).End(10).StartWidth(5).EndWidth(5).Color("#1FAC8A").Add();
            range.Start(10).End(15).StartWidth(5).EndWidth(5).Color("#1FAC8A").Add();
            range.Start(15).End(20).StartWidth(5).EndWidth(5).Color("#D1D9DD").Add();
        }).MajorTicks(majorTick => majorTick.Interval(5).Height(0)).MinorTicks(minorTick => minorTick.Height(0)).Add()).Render()
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        function axisLabelRender(args) {
            if (args.text == "5")
                args.text = "Ordered";
            else if (args.text == "10")
                args.text = "Packed";
            else if (args.text == "15")
                args.text = "Shipped";
            else if (args.text == "20")
                args.text = "Delivered";
            else
                args.text = " ";
        }

        function onGaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@

        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows a linear gauge that resembles a step progress bar and indicates shipment status.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Step Progress Bar in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>

            In this example, you can see how to render and configure a new step progress bar using the linear gauge. This can be accomplished by combining axis, multiple pointers, and multiple ranges.
        </p>
        <p>
            More information on the linear gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/getting-started" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@section Title{
    <title>ASP.NET MVC Linear Gauge Step Progress Bar Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Step Progress Bar in ASP.NET MVC Linear Gauge Control</h1>
}