@using Syncfusion.EJ2
@section ControlsSection{
    <style>
        #container {
            width: 100%;
            display: table;
            margin: 0 auto;
        }
    </style>
    <div class="control-section">
        <div id="outer" style="width:100%">
            @Html.EJS().LinearGauge("container").Load("onGaugeLoad").AnimationDuration(3500).Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Background("Transparent").Container(container => 
            container.Width(30).BackgroundColor("#D6D6D6").RoundedCornerRadius(20).Type(Syncfusion.EJ2.LinearGauge.ContainerType.RoundedRectangle)).Annotations(annotation => 
            annotation.AxisIndex(0).AxisValue(10).X(0).Y(0).ZIndex("1").Content("<div style='font-size: 15px;color: white;margin-top: 30px;margin-left:50%'>41%</div>").Add()).Axes(axes => 
            axes.Minimum(0).Maximum(100).Line(line => line.Width(0)).LabelStyle(labelStyle => labelStyle.Font(font => font.Size("0px")))
            .Pointers(pointer => pointer.Width(30).Height(30).Value(41).Color("#2196F3").RoundedCornerRadius(20).Type(Syncfusion.EJ2.LinearGauge.Point.Bar).Add())
            .MajorTicks(majorTick => majorTick.Interval(10).Height(0).Color("transparent")).MinorTicks(minorTick => minorTick.Height(0).Interval(1).Color("transparent")).Add()).Render()
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        function onGaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows a linear gauge that resembles a progress bar and indicates a task completion rate of 41%.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Progress Bar in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>

            In this example, you can see how to render and configure a new progress bar using the linear gauge. This can be accomplished by combining axis, pointer, and annotation.
        </p>
        <p>
            More information on the linear gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/getting-started" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@section Title{
    <title>ASP.NET MVC Linear Gauge Progress Bar Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Progress Bar in ASP.NET MVC Linear Gauge Control</h1>
}