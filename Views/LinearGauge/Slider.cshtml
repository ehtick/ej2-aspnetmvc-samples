@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section" style="min-height: 290px;">
        <div style="justify-content: center; display: flex; align-items: center;">
            @Html.EJS().LinearGauge("enableSliderGauge").Load("gaugeLoad").DragMove("dragMoveSlider").Background("Transparent").Width("450px").Height("150px").Format("N0").Tooltip(tooltip => 
            tooltip.Enable(true).ShowAtMousePosition(true).TextStyle(textStyle => textStyle.FontFamily("inherit"))).Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Title("Enabled").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5).Color("#C2DEF8")).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Offset(10))
            .Pointers(pointer =>
            {
                pointer.Width(5).Height(5).Value(50).Color("#0074E3").Placement(Syncfusion.EJ2.LinearGauge.Placement.Center).Type(Syncfusion.EJ2.LinearGauge.Point.Bar).Offset("12").Add();
                pointer.Width(15).Height(15).Value(50).Color("#0074E3").Placement(Syncfusion.EJ2.LinearGauge.Placement.Center).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).EnableDrag(true).Offset("-10").Add();
            }).MajorTicks(majorTick => majorTick.Interval(20).Height(0).Width(0)).MinorTicks(minorTick => minorTick.Height(0).Interval(10)).Add()).Render()
        </div>
        <div style="justify-content: center; display: flex; align-items: center;">
            @Html.EJS().LinearGauge("disableSliderGauge").Load("gaugeLoad").Background("Transparent").Width("450px").Height("150px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Title("Disabled").TitleStyle(textStyle => 
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5).Color("#E0E0E0")).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Offset(10))
            .Pointers(pointer =>
            {
            pointer.Width(5).Height(5).Value(50).Color("#ADADAD").Placement(Syncfusion.EJ2.LinearGauge.Placement.Center).Type(Syncfusion.EJ2.LinearGauge.Point.Bar).Offset("12").Add();
            pointer.Width(15).Height(15).Value(50).Color("#ADADAD").Placement(Syncfusion.EJ2.LinearGauge.Placement.Center).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).EnableDrag(false).Offset("-10").Add();
            }).MajorTicks(majorTick => majorTick.Interval(20).Height(0).Width(0)).MinorTicks(minorTick => minorTick.Height(0).Interval(10)).Add()).Render()
        </div>
    </div>

    <script type="text/javascript">
        var enableSliderGauge;
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            if (sender.gauge.element.id === 'enableSliderGauge') {
                enableSliderGauge = sender.gauge;
            }
        }
        function dragMoveSlider(sender) {
            if (sender.pointerIndex == 1) {
                enableSliderGauge.setPointerValue(0, 0, sender.currentValue);
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how to create a slider by utilizing the functionalities available in the linear gauge.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Slider in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>

            In this example, you can see how to render and configure a new slider in the linear gauge. This can be accomplished by combining axis, range, and pointer. The pointer has been made interactive, so the value changes as you drag it.
        </p>
        <p>
            More information on the linear gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/getting-started" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@section Title{
    <title>ASP.NET MVC Linear Gauge Slider Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Slider in ASP.NET MVC Linear Gauge Control</h1>
}