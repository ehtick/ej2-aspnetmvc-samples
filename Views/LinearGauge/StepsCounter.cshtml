@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        @Html.EJS().LinearGauge("defaultContainerGauge").Load("defaultContainerGaugeLoad").AnimationDuration(3500).Background("Transparent").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Axes(axes =>
        axes.Minimum(0).Maximum(12000).OpposedPosition(true).Line(line => line.Width(30)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")))
        .Pointers(pointer => pointer.Width(40).Height(40).Value(8446).Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).Offset("-40").MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Image).ImageUrl(@Url.Content("~/Content/LinearGauge/step-count.png")).Add())
        .Ranges(range => range.Start(0).End(8456).StartWidth(30).EndWidth(30).Color("#0DC9AB").Offset("0").Add())
        .MajorTicks(majorTick => majorTick.Interval(12000).Height(10).Width(1)).MinorTicks(minorTick => minorTick.Height(0)).Add()).Render()
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        var textColor = '#000000';
        function defaultContainerGaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            textColor = sender.gauge.theme.indexOf('Dark') > -1 || sender.gauge.theme.indexOf('HighContrast') > -1 ? '#FFFFFF' : '#000000';
            sender.gauge.annotations = [
                {
                    axisIndex: 0, axisValue: 12000, x: 10, y: 0, zIndex: '1',
                    content: "<div style='width: 70px;'> <p align='center' style='font-size: 10px; margin-left: 56px; margin-top: 18px; font-weight: 400; color: ${ " + textColor + "}; '>STEPS</p> <p align='center'' style='font-size: 23px; margin-top: -15px; margin-left: 46px; color: #0DC9AB; font-weight: 600;'>8456</p></div>"
                },
                {
                    axisIndex: 0, axisValue: 0, x: 0, y: -100, zIndex: '1',
                    content: "<div style='width: 145px; font-size: 19px; margin-left: 142px; color: " + textColor + ";'> Sun, 7 February </div>"
                }
            ];
        }

    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows a linear gauge displaying the number of steps taken by a person in a day.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Steps Counter in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure a linear gauge to look like a steps counter. This can be accomplished by combining axis, range, pointer and annotations.
        </p>
        <p>
            More information on the linear gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/getting-started" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@section Title{
    <title>ASP.NET MVC Linear Gauge Steps Counter Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Steps Counter in ASP.NET MVC Linear Gauge Control</h1>
}