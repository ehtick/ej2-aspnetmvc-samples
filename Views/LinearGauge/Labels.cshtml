@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12" style="display: flex;justify-content: center; align-items: center;">
                <div style="margin: auto;padding: 10px;">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <div id='horizontal' style="padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center">Horizontal</div>
                                </td>
                                <td>
                                    <div id='vertical' style="padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center">Vertical</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <pre style="background-color: inherit; border:hidden"></pre>
        <div id="containerBox">
            <div id='containerone' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                @Html.EJS().LinearGauge("customLabels").Load("gaugeLoad").AnimationDuration(3500).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Custom labels").TitleStyle(textStyle =>
                textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(5).Maximum(20).OpposedPosition(true)
                .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Format("${value}")).Pointers(pointer => pointer.Width(0).Add())
                .MajorTicks(majorTick => majorTick.Interval(5).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(2.5)).Add()).Render()
            </div>
            <div id='containertwo' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                @Html.EJS().LinearGauge("textLabels").AxisLabelRender("axisLabelRender").Load("gaugeLoad").Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Text labels").TitleStyle(textStyle =>
                textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(5).Maximum(20).OpposedPosition(true)
                .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Offset(10))
                .Pointers(pointer =>
                {
                    pointer.Width(15).Height(15).Value(20).Color("#0DC9AB").Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).Offset(7).Add();
                    pointer.Width(15).Height(15).Value(15).Color("#0DC9AB").Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).Offset(7).Add();
                    pointer.Width(15).Height(15).Value(10).Color("#0DC9AB").Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).Offset(7).Add();
                    pointer.Width(15).Height(15).Value(5).Color("#E5E7EB").Placement(Syncfusion.EJ2.LinearGauge.Placement.Near).MarkerType(Syncfusion.EJ2.LinearGauge.MarkerType.Circle).Offset(7).Add();
                }).Ranges(range =>
                {
                    range.Start(10).End(15).StartWidth(5).EndWidth(5).Color("#0DC9AB").Add();
                    range.Start(15).End(20).StartWidth(5).EndWidth(5).Color("#0DC9AB").Add();
                })
                .MajorTicks(majorTick => majorTick.Interval(5).Height(0).Width(1)).MinorTicks(minorTick => minorTick.Height(0).Interval(2.5)).Add()).Render()
            </div>
            <div id='containerthree' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                @Html.EJS().LinearGauge("labelOffset").Load("gaugeLoad").AnimationDuration(3500).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Label offset").TitleStyle(textStyle =>
                textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
                .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Offset(5)).Pointers(pointer => pointer.Width(0).Add())
                .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
            </div>
            <div id='containerfour' class="col-xs-5 col-sm-5 col-lg-3 col-md-3" style="display: flex;justify-content: center; align-items: center;">
                @Html.EJS().LinearGauge("labelCustomization").Load("gaugeLoad").AnimationDuration(3500).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Label customization").TitleStyle(textStyle =>
                textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
                .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit").Color("#F93106")).Offset(5)).Pointers(pointer => pointer.Width(0).Add())
                .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1)).MinorTicks(minorTick => minorTick.Height(3).Interval(10)).Add()).Render()
            </div>
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        var customLabelsGauge, textLabelsGauge, labelOffsetGauge, labelCustomizationGauge;
        function axisLabelRender(sender) {
            if (sender.text == "20")
                sender.text = "Ordered";
            else if (sender.text == "15")
                sender.text = "Packed";
            else if (sender.text == "10")
                sender.text = "Shipped";
            else if (sender.text == "5")
                sender.text = "Delivered";
            else
                sender.text = " ";
        }
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            if (sender.gauge.element.id === 'customLabels') {
                customLabelsGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'textLabels') {
                if (sender.gauge.theme === 'FluentDark' || sender.gauge.theme === 'Fluent2Dark' || sender.gauge.theme == 'Fluent2HighContrast') {
                    sender.gauge.axes[0].pointers[3].color = '#292827';
                } else if (sender.gauge.theme === 'Bootstrap5Dark') {
                    sender.gauge.axes[0].pointers[3].color = '#343A40';
                } else if (sender.gauge.theme === 'TailwindDark') {
                    sender.gauge.axes[0].pointers[3].color = '#374151';
                } else if (sender.gauge.theme === 'Tailwind3Dark') {
                    sender.gauge.axes[0].pointers[3].color = '#282F3C';
                } else if (sender.gauge.theme === 'Material3Dark') {
                    sender.gauge.axes[0].pointers[3].color = '#938F99';
                }
                textLabelsGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'labelOffset') {
                labelOffsetGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'labelCustomization') {
                labelCustomizationGauge = sender.gauge;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('horizontal').addEventListener('click', function () {
                customLabelsGauge.width = textLabelsGauge.width = labelOffsetGauge.width = labelCustomizationGauge.width = '450px';
                customLabelsGauge.height = textLabelsGauge.height = labelOffsetGauge.height = labelCustomizationGauge.height = '150px';
                customLabelsGauge.orientation = textLabelsGauge.orientation = labelOffsetGauge.orientation = labelCustomizationGauge.orientation = "Horizontal";
                document.getElementById('horizontal').style.color = "white";
                document.getElementById('horizontal').style.backgroundColor = "#0074E3";
                document.getElementById('vertical').style.color = "black";
                document.getElementById('vertical').style.backgroundColor = "white";
                document.getElementById('containerone').className = document.getElementById('containertwo').className =
                    document.getElementById('containerthree').className = document.getElementById('containerfour').className = "col-xs-12 col-sm-12 col-lg-12 col-md-12";

            });
            document.getElementById('vertical').addEventListener('click', function () {
                customLabelsGauge.width = textLabelsGauge.width = labelOffsetGauge.width = labelCustomizationGauge.width = '150px';
                customLabelsGauge.height = textLabelsGauge.height = labelOffsetGauge.height = labelCustomizationGauge.height = '350px';
                customLabelsGauge.orientation = textLabelsGauge.orientation = labelOffsetGauge.orientation = labelCustomizationGauge.orientation = "Vertical";
                document.getElementById('vertical').style.color = "white";
                document.getElementById('vertical').style.backgroundColor = "#0074E3";
                document.getElementById('horizontal')['style']['color'] = "black";
                document.getElementById('horizontal')['style']['backgroundColor'] = "white";
                document.getElementById('containerone').className = document.getElementById('containertwo').className =
                    document.getElementById('containerthree').className = document.getElementById('containerfour').className = "col-xs-5 col-sm-5 col-lg-3 col-md-3";

            });
        });
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the various options for customizing the axis labels, such as styling, formatting, replacing text, and setting offset in the linear gauge.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Labels in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure axis labels in the linear gauge. The properties in the
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeLabel.html" aria-label="LabelStyle">
                LabelStyle
            <span class="sr-only">opens in a new tab</span></a> can be used to style, format, and offset the label, while the label's text can be changed dynamically via the
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/events#axislabelrender" aria-label="AxisLabelRender">AxisLabelRender<span class="sr-only">opens in a new tab</span></a> event.
        </p>
        <p>
            More information on the axis labels can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/axis#labels-customization" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}
@section Title{
    <title>ASP.NET MVC Linear Gauge Labels Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Labels in ASP.NET MVC Linear Gauge Control</h1>
}
