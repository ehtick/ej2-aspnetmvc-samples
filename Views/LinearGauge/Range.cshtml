@using Syncfusion.EJ2
@section ControlsSection{
    <style>
        td {
            width: 40%;
        }
    </style>
    <div class="control-section">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12"
                 style="display: flex;justify-content: center; align-items: center;">
                <div style="margin: auto;padding: 10px;">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <div id='horizontal' style="padding:6px;cursor:pointer;width:86px;color:black;font-size:15px;border:1px solid #0074E3;background-color:white;text-align:center">Horizontal</div>
                                </td>
                                <td>
                                    <div id='vertical' style="padding:6px;cursor:pointer;width:86px;color:white;font-size:15px;border:1px solid #0074E3;background-color: #0074E3;text-align:center">Vertical</div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <pre style="background-color: inherit; border:hidden"></pre>
        <div id="containerBox" style="float: left;padding: 4%;"></div>
        <div id='containerone' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearDefault").Load("gaugeLoad").AnimationDuration(5000).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Default").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside))
            .Pointers(pointer => pointer.Width(0).Add()).Ranges(range => range.Start(0).End(100).StartWidth(10).EndWidth(10).Color("#F45656").Offset("5").Add())
            .MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
        <div id='containertwo' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearExponential").Load("gaugeLoad").AnimationDuration(5000).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Exponential").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Pointers(pointer => pointer.Width(0).Add())
            .Ranges(range => { 
                range.Start(0).End(50).StartWidth(2).EndWidth(15).Color("#F45656").Offset("5").Add(); 
                range.Start(50).End(100).StartWidth(15).EndWidth(50).Color("#F45656").Offset("5").Add(); 
            }).MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
        <div id='containerthree' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearConcave").Load("gaugeLoad").AnimationDuration(5000).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Concave").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Pointers(pointer => pointer.Width(0).Add())
            .Ranges(range =>
            {
                range.Start(0).End(50).StartWidth(50).EndWidth(20).Color("#F45656").Offset("5").Add();
                range.Start(50).End(100).StartWidth(20).EndWidth(50).Color("#F45656").Offset("5").Add();
            }).MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
        <div id='containerfour' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearGradient").Load("gaugeLoad").AnimationDuration(5000).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Gradient shader").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside))
            .Pointers(pointer => pointer.Width(0).Add()).Ranges(range => range.Start(0).End(100).StartWidth(50).EndWidth(50).Offset("5")
            .Add()).MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
        <div id='containerfive' class="col-xs-4 col-sm-4 col-lg-2 col-md-2" style="display: flex;justify-content: center; align-items: center;">
            @Html.EJS().LinearGauge("linearMultiple").Load("gaugeLoad").AnimationDuration(3500).Background("Transparent").Width("150px").Height("350px").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Vertical).Title("Multiple ranges").TitleStyle(textStyle =>
            textStyle.FontFamily("inherit").FontWeight("499")).Axes(axes => axes.Minimum(0).Maximum(100).OpposedPosition(true)
            .Line(line => line.Width(5)).LabelStyle(labelStyle => labelStyle.Font(font => font.FontFamily("inherit")).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Pointers(pointer => pointer.Width(0).Add())
            .Ranges(range =>
            {
                range.Start(0).End(30).StartWidth(50).EndWidth(50).Color("#FB7D55").Offset("5").Add();
                range.Start(30).End(65).StartWidth(50).EndWidth(50).Color("#ECC85B").Offset("5").Add();
                range.Start(65).End(100).StartWidth(50).EndWidth(50).Color("#6FC78A").Offset("5").Add();
            }).MajorTicks(majorTick => majorTick.Interval(20).Height(7).Width(1).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).MinorTicks(minorTick => minorTick.Height(3).Interval(10).Position(Syncfusion.EJ2.LinearGauge.Position.Outside)).Add()).Render()
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script type="text/javascript">
        var linearDefaultGauge, linearExponentialGauge, linearConcaveGauge, linearGradientGauge, linearMultipleGauge;
        var rangeLinearGradient = {
            startValue: '0%',
            endValue: '100%',
            colorStop: [
                { color: '#FB7D55', offset: '0%', opacity: 1 },
                { color: '#ECC85B', offset: '50%', opacity: 1 },
                { color: '#6FC78A', offset: '100%', opacity: 1 }]
        };
        function gaugeLoad(sender) {
            @* custom code start *@
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            if (sender.gauge.element.id === 'linearDefault') {
                linearDefaultGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearExponential') {
                linearExponentialGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearConcave') {
                linearConcaveGauge = sender.gauge;
            }
            if (sender.gauge.element.id === 'linearGradient') {
                linearGradientGauge = sender.gauge;
                linearGradientGauge.axes[0].ranges[0].linearGradient = rangeLinearGradient;
            }
            if (sender.gauge.element.id === 'linearMultiple') {
                linearMultipleGauge = sender.gauge;
            }
        }
        
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('horizontal').addEventListener('click', function () {
                linearDefaultGauge.width = linearExponentialGauge.width = linearConcaveGauge.width = linearGradientGauge.width = linearMultipleGauge.width = '450px';
                linearDefaultGauge.height = linearExponentialGauge.height = linearConcaveGauge.height = linearGradientGauge.height = linearMultipleGauge.height = '150px';
                linearDefaultGauge.orientation = linearExponentialGauge.orientation = linearConcaveGauge.orientation = linearGradientGauge.orientation = linearMultipleGauge.orientation = "Horizontal";
                document.getElementById('horizontal').style.color = "white";
                document.getElementById('horizontal').style.backgroundColor = "#0074E3";
                    document.getElementById('vertical').style.color = "black";
                    document.getElementById('vertical').style.backgroundColor = "white";
                    document.getElementById('containerone').className = document.getElementById('containertwo').className =
                        document.getElementById('containerthree').className = document.getElementById('containerfour').className =
                        document.getElementById('containerfive').className = "col-xs-12 col-sm-12 col-lg-12 col-md-12";
                    document.getElementById('containerBox').style.padding = "0%";

            });
            document.getElementById('vertical').addEventListener('click', function () {
                linearDefaultGauge.width = linearExponentialGauge.width = linearConcaveGauge.width = linearGradientGauge.width = linearMultipleGauge.width = '150px';
                linearDefaultGauge.height = linearExponentialGauge.height = linearConcaveGauge.height = linearGradientGauge.height = linearMultipleGauge.height = '350px';
                linearDefaultGauge.orientation = linearExponentialGauge.orientation = linearConcaveGauge.orientation = linearGradientGauge.orientation = linearMultipleGauge.orientation = "Vertical";
                document.getElementById('vertical').style.color = "white";
                document.getElementById('vertical').style.backgroundColor = "#0074E3";
                    document.getElementById('horizontal')['style']['color'] = "black";
                    document.getElementById('horizontal')['style']['backgroundColor'] = "white";
                    document.getElementById('containerone').className = document.getElementById('containertwo').className =
                        document.getElementById('containerthree').className = document.getElementById('containerfour').className =
                        document.getElementById('containerfive').className = "col-xs-4 col-sm-4 col-lg-2 col-md-2";
                    document.getElementById('containerBox').style.padding = "4%";

            });
        });

    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the various customization options for the linear gauge's range. For example, an exponential appearance, a gradient color, and a multiple range.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Range in ASP.NET MVC Linear Gauge control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure ranges in the linear gauge. The
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeRange.html" aria-label="Ranges">
                Ranges
            <span class="sr-only">opens in a new tab</span></a> and
            <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.LinearGauge.LinearGaugeRange.html#Syncfusion_EJ2_LinearGauge_LinearGaugeRange_LinearGradient" aria-label="linearGradient">linearGradient<span class="sr-only">opens in a new tab</span></a> are used to display multiple ranges, perform range customization, and apply gradient colors, respectively.
        <p>
            More information on the ranges can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/linear-gauge/ranges" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@section Title{
    <title>ASP.NET MVC Linear Gauge Range Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Range in ASP.NET MVC Linear Gauge Control</h1>
}