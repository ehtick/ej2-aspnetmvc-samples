@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <h4 align="center" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;">Inflation vs Goods Consumers</h4>
        <div id="container" align="center">
            @(Html.EJS().RangeNavigator("container").Height("120").LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside)
                    .ValueType(Syncfusion.EJ2.Charts.RangeValueType.Logarithmic).Interval(1)
                    .LabelIntersectAction(Syncfusion.EJ2.Charts.RangeLabelIntersectAction.None)
                    .Series(sr =>
                    {
                        sr.XName("x").YName("y").Width(2).Type(Syncfusion.EJ2.Charts.RangeNavigatorType.StepLine).Add();
                    }).Tooltip(tl => tl.Enable(true)).Load("load").Changed("changed").LabelRender("renderLabel").TooltipRender("renderTooltip").Render()
            )
        </div>
        <div id="chartcontainer" align="center">
            @(Html.EJS().Chart("chart")
            .Series(sr =>
            {
                sr.XName("x")
                   .YName("y")
                   .Width(2).Type(Syncfusion.EJ2.Charts.ChartSeriesType.StepArea).Marker(mr=>mr.Visible(true)).Animation(animation=>animation.Enable(false)).Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.Title("Number of Goods Consumers").Interval(1).CrosshairTooltip(ct=>ct.Enable(false)).MajorGridLines(mg=>mg.Width(0))
                      .ValueType(Syncfusion.EJ2.Charts.ValueType.Logarithmic)
                      .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)

              )
              .ChartArea(ca => ca.Border(br=>br.Width(0)))
              .PrimaryYAxis(yaxis =>
                  yaxis.Title("Inflation").Minimum(0).Maximum(100).MajorTickLines(mt=>mt.Width(0))
                        .LabelFormat("{value}%").LineStyle(ls=>ls.Width(0)))
                        .Crosshair(cr => cr.Enable(false).LineType(Syncfusion.EJ2.Charts.LineType.Vertical))
                        .Height("350")
                        .Load("chartload").Render()
            )


        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
        #material-gradient-chart stop {
            stop-color: #00bdae;
        }

        #fabric-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #bootstrap4-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #highcontrast-gradient-chart stop {
            stop-color: #79ECE4;
        }

        #tailwind-gradient-chart stop {
            stop-color: #5A61F6;
        }

        #tailwind3-gradient-chart stop {
            stop-color: #2F4074;
        }

        #bootstrap5-gradient-chart stop {
            stop-color: #FD7E14;
        }

        #materialdark-gradient-chart stop {
            stop-color: #9ECB08;
        }

        #fabricdark-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrapdark-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #tailwinddark-gradient-chart stop {
            stop-color: #8B5CF6;
        }

        #tailwind3dark-gradient-chart stop {
            stop-color: #8029F1;
        }

        #bootstrap5dark-gradient-chart stop {
            stop-color: #FD7E14;
        }

        #fluent-gradient-chart stop {
            stop-color: #1AC9E6;
        }

        #fluentdark-gradient-chart stop {
            stop-color: #1AC9E6;
        }
        
        #material3-gradient-chart stop {
            stop-color: #6355C7;
        }
            
        #material3dark-gradient-chart stop {
            stop-color: #4EAAFF;
        }

        #fluent2-gradient-chart stop {
            stop-color: #6200EE;
        }

        #fluent2highcontrast-gradient-chart stop {
            stop-color: #9BB449;
        }

        #fluent2dark-gradient-chart stop {
            stop-color: #9BB449;
        }

        .chart-gradient stop[offset="0"] {
            stop-opacity: 0.9;
        }

        .chart-gradient stop[offset="1"] {
            stop-opacity: 0.3;
        }
    </style>
<svg style="height: 0">
    <defs>
        <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="materialdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabricdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrapdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwinddark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluentdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>
    <script src="~/Scripts/range-navigator/theme-color.js"></script>
    <script>
        var zoomFactor, zoomPosition;
        var data = [];
        var max = 100;
        for (var i = 0; i < 100; i++) {
            data.push({
                x: Math.pow(10, i * 0.1),
                y: Math.floor(Math.random() * (80 - 30 + 1)) + 30
            });
        }        
        var load = function (args) {
            loadRangeNavigatorTheme(args);
            var theme = args.rangeNavigator.theme;
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.series[0].dataSource = data;
            args.rangeNavigator.value = [4, 6];
            args.rangeNavigator.series[0].border = { width: 2, color: borderColor[themesList.indexOf(theme.toLowerCase())] };
            args.rangeNavigator.series[0].fill = 'url(#' + theme.toLowerCase() + '-gradient-chart)';
        }
        var chartload = function (args) {
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            loadChartTheme(args);
            var theme = args.chart.theme;
            args.chart.series[0].dataSource = data;
            args.chart.series[0].border = { width: 2, color: borderColor[themesList.indexOf(theme.toLowerCase())] };
            args.chart.series[0].fill = 'url(#' + theme.toLowerCase() + '-gradient-chart)';
        }
        var changed = function (args) {
            zoomFactor = args.zoomFactor;
            zoomPosition = args.zoomPosition;
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.dataBind();
            }
        }
        var renderLabel = function (args) {
            args.text = (+args.text).toExponential().toLocaleUpperCase();
        }
        var renderTooltip = function (args) {
            args.text = [(+(+args.text).toFixed(1)).toExponential(1).toString().toLocaleUpperCase()];
        }
    </script>
}
             @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Logarithmic Scale in ASP.NET MVC Range Selector control. Explore here for more details."/>
                }
             @*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates rendering logarithmic axis in the range navigator.
    </p>
}
@section Description{
    <p>
        Logarithmic axis uses logarithmic scale and it is very useful in visualizing when the data has values with both lower order of magnitude (eg: 10^-6) and higher order of magnitude (eg: 10^6). 
        To render Logarithmic axis, set <code>valueType</code> to <code>Logarithmic</code>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Range Selector Logarithmic Scale Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Logarithmic Scale in ASP.NET MVC Range Selector Control</h1>
                }