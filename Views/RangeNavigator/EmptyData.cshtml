@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section" align="center">
    <div id="Sample">
        <div class="row" align="center">
            <h4 id="days" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;">AAPL 2012-2015</h4>
            <div id="container">
                @(Html.EJS().RangeNavigator("container")
                    .LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside)
                    .ValueType(Syncfusion.EJ2.Charts.RangeValueType.DateTime)
                    .Series(sr =>
                    {
                        sr.XName("x").YName("open")
                        .Width(2).Type(Syncfusion.EJ2.Charts.RangeNavigatorType.Area).Add();
                    })
                    .Tooltip(tl => tl.Enable(true).DisplayMode(Syncfusion.EJ2.Charts.TooltipDisplayMode.Always))
                    .MajorGridLines(mg=>mg.Width(0)).MajorTickLines(mt => mt.Width(0))
                    .Load("load").Changed("changed").Render()
                )
            </div>
            <div id="chartcontainer">
                @(Html.EJS().Chart("chart")
            .Series(sr =>
            {
                sr.XName("x")
                   .YName("open")
                   .Name("AAPL")
                   .Animation(animation=>animation.Enable(false))
                   .Width(2).Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area).Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.CrosshairTooltip(ct=>ct.Enable(true)).MajorGridLines(mg => mg.Width(0))
                      .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
                      .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)

              )
              .ChartArea(ca => ca.Border(br => br.Width(0)))
              .PrimaryYAxis(yaxis =>
                  yaxis.Minimum(40).Maximum(140).Interval(20).LabelFormat("${value}").MajorTickLines(mt => mt.Width(0))
                        .LineStyle(mt => mt.Width(0)))
                        .Tooltip(tl => tl.Enable(true).Shared(true))
                        .Height("350").LegendSettings(lg => lg.Visible(false))
                        .Load("chartload").Render()
                )
            </div>
        </div>
    </div>
</div>

    <style>
    #control-container {
        padding: 0px !important;
    }

    #material-gradient-chart stop {
        stop-color: #00bdae;
    }

    #fabric-gradient-chart stop {
        stop-color: #4472c4;
    }

    #bootstrap-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #bootstrap4-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #highcontrast-gradient-chart stop {
        stop-color: #79ECE4;
    }

    #tailwind-gradient-chart stop {
        stop-color: #5A61F6;
    }

    #tailwind3-gradient-chart stop {
        stop-color: #2F4074;
    }

    #bootstrap5-gradient-chart stop {
        stop-color: #FD7E14;
    }

    #materialdark-gradient-chart stop {
        stop-color: #9ECB08;
    }

    #fabricdark-gradient-chart stop {
        stop-color: #4472c4;
    }

    #bootstrapdark-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #tailwinddark-gradient-chart stop {
        stop-color: #8B5CF6;
    }

    #tailwind3dark-gradient-chart stop {
        stop-color: #8029F1;
    }

    #bootstrap5dark-gradient-chart stop {
        stop-color: #FD7E14;
    }

    #fluent-gradient-chart stop {
        stop-color: #1AC9E6;
    }

    #fluentdark-gradient-chart stop {
        stop-color: #1AC9E6;
    }
    
    #material3-gradient-chart stop {
        stop-color: #6355C7;
    }
        
    #material3dark-gradient-chart stop {
        stop-color: #4EAAFF;
    }

    #fluent2-gradient-chart stop {
        stop-color: #6200EE;
    }

    #fluent2highcontrast-gradient-chart stop {
        stop-color: #9BB449;
    }

    #fluent2dark-gradient-chart stop {
        stop-color: #9BB449;
    }

    .chart-gradient stop[offset="0"] {
        stop-opacity: 0.9;
    }

    .chart-gradient stop[offset="1"] {
        stop-opacity: 0.3;
    }

</style>
<svg style="height: 0">
    <defs>
        <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="materialdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabricdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrapdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwinddark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluentdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>
    <script src="~/scripts/datasource.js"></script>
    <script src="~/Scripts/range-navigator/theme-color.js"></script>
    <script>
        var chartData = chartData;
        var zoomFactor, zoomPosition;
        var data = [];
        var startDate = new Date(2012, 4, 2);
        for (var i = 0; i <= 250; i++) {
            data.push(chartData[i]);
            if (i > 45 && 50 > i) {
                (data[i]).open = null;
            } else if (i > 95 && 100 > i) {
                (data[i]).open = null;
            } else if (i > 145 && 150 > i) {
                (data[i]).open = null;
            } else if (i > 195 && 200 > i) {
                (data[i]).open = null;
            } else if (i > 245 && 250 > i) {
                (data[i]).open = null;
            }
        }        
        
        var load = function (args) {
            var theme = loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.series[0].dataSource = data;
            args.rangeNavigator.series[0].border = { width: 2, color: borderColor[themesList.indexOf(args.rangeNavigator.theme.toLowerCase())] };
            args.rangeNavigator.series[0].fill = 'url(#' + args.rangeNavigator.theme.toLowerCase() + '-gradient-chart)';
            args.rangeNavigator.value = [new Date('2013-12-27'), new Date('2015-03-23')];
        }
        var chartload = function (args) {
            var theme = loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.series[0].dataSource = data;
            args.chart.series[0].border = { width: 2, color: borderColor[themesList.indexOf(args.chart.theme.toLowerCase())] };
            args.chart.series[0].fill = 'url(#' + args.chart.theme.toLowerCase() + '-gradient-chart)';
            args.chart.zoomFactor = zoomFactor;
            args.chart.zoomPosition = zoomPosition;
        }
        var changed = function (args) {
            zoomFactor = args.zoomFactor;
            zoomPosition = args.zoomPosition;
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.dataBind();
            }

        }
    </script>
}
             @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Empty Points in ASP.NET MVC Range Selector control. Explore here for more details."/>
                }
             @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates the functionality of empty points in the range navigator series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render empty points. Tooltip is enabled in this example, to see the tooltip in action, click the selected range or tap a point in touch enabled devices.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Range Selector Empty Points Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Empty Points in ASP.NET MVC Range Selector Control</h1>
                }