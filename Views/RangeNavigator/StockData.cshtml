@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
       <div style="width:90%">
        <div id="stockRange" style="text-align:left; font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:14px;">
            <div id="title" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:14px;">AAPL 2012-2015</div>
            <div id="close" style="font-size:10px">
                <div id="value" style="float: left;">1,095.32</div>
                <div id="inc" style="float: left; color: green;">&nbsp;&nbsp;&nbsp;+11.49 (+1.06%)</div>
            </div>
        </div>
      </div>
        <br />
        <div id="rangecontainer" align="center">
            @(Html.EJS().RangeNavigator("container")
                    .DisableRangeSelector(true).PeriodSelectorSettings(ps => ps.Position(Syncfusion.EJ2.Charts.PeriodSelectorPosition.Top)
                  .Periods(periods =>
                  {
                      periods.Text("1M").Interval(1).IntervalType(Syncfusion.EJ2.Charts.RangeIntervalType.Months).Add();
                      periods.Text("3M").Interval(3).IntervalType(Syncfusion.EJ2.Charts.RangeIntervalType.Months).Add();
                      periods.Text("6M").Interval(6).IntervalType(Syncfusion.EJ2.Charts.RangeIntervalType.Months).Add();
                      periods.Text("YTD").Add();
                      periods.Text("1Y").Interval(1).Add();
                      periods.Text("2Y").Interval(2).Selected(true).Add();
                      periods.Text("All").Add();
                  }))
                    .ValueType(Syncfusion.EJ2.Charts.RangeValueType.DateTime).XName("x").YName("close")
                    .Load("load").Changed("changed").Loaded("loaded").Render()
            )
        </div>
        <div id="chartcontainer" align="center">
            @Html.EJS().Chart("chart").Rows(rows =>
       {
           rows.Height("30%").Add();
           rows.Height("70%").Add();
       }).Axes(ax =>
       {
           ax.Name("secondary")
           .OpposedPosition(true).RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
           .MajorTickLines(mt=>mt.Width(0)).MajorGridLines(mg => mg.Width(0))
           .LineStyle(ls => ls.Width(0)).Add();
       }
           ).Annotations(an =>
           {
               an.Content("<div id='annotation'></div>").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Pixel).X("15%").Y("20%").Region(Syncfusion.EJ2.Charts.Regions.Chart).Add();
           }).Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle)
               .XName("x").YName("y").High("high").Low("low")
               .Open("open").Close("close").Volume("volume")
               .BearFillColor("#2ecd71").BullFillColor("#e74c3d").Name("Apple Inc").Width(2).Add();
               series.YAxisName("secondary").Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
              .XName("x").YName("volume").Width(2).Add();
           }).Indicators(id =>
           {
               id.Fill("#6063ff").MacdType(Syncfusion.EJ2.Charts.MacdType.Both)
               .MacdPositiveColor("#2ecd71").MacdNegativeColor("#e74c3d")
               .Fill("#6063ff")
               .FastPeriod(8).SlowPeriod(5).Period(3)
               .Type(Syncfusion.EJ2.Charts.TechnicalIndicators.Tma)
               .SeriesName("Apple Inc").Add();
           }).ZoomSettings(zn => zn.EnableMouseWheelZooming(true).Mode(Syncfusion.EJ2.Charts.ZoomMode.X).ToolbarItems(ViewData["toolbaritems"])).Crosshair(cr => cr.LineType(Syncfusion.EJ2.Charts.LineType.Both).Enable(true)
           ).PrimaryXAxis(px => px.CrosshairTooltip(ct=>ct.Enable(true)).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).MajorGridLines(mg => mg.Width(0))
             ).PrimaryYAxis(py => py.RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).CrosshairTooltip(ct=>ct.Enable(true)).RowIndex(1).OpposedPosition(true).LabelFormat("n0").Title("Price").LineStyle(ls => ls.Width(0)).PlotOffset(25)
             ).Height("350").ChartArea(area => area.Border(br=>br.Color("whitesmoke").Width(1))).Tooltip(tl => tl.Enable(true).Shared(true)).LegendSettings(lg => lg.Visible(false)).Load("chartload").AxisRangeCalculated("rangeCalculated").Loaded("chartloaded").AxisLabelRender("axislabelrender").PointRender("pointrender").ChartMouseMove("chartmousemove").ChartMouseLeave("chartmouseleave").TooltipRender("tooltiprender").Margin(mr=>mr.Top(0)).Render()
        </div>
        </div>

    <style>
        #control-container {
            padding: 0px !important;
        }        
        #chart_tooltip {
            opacity: 0;
        }

        #chart_HorizontalLine,
        #chart_VerticalLine {
            stroke-dasharray: 2
        }
    </style>
<script src="~/Scripts/stock-chart-data.js"></script>
    <script src="~/Scripts/range-navigator/theme-color.js"></script>
    <script>
        var chartData = chartData;
        var chartData1 = chartData;
        var index = 0;
        var zoomFactor, zoomPosition;        
        var annotationString = '<div id="annotation" style="line-height: 18px;' +
                                ' font-size: 13px;background: #fff; opacity:0.9; color: #464e56; ' +
                                ' box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px;' +
                                ' border-radius: 3px">';
        var pointColors = [];
        var load = function (args) {
            loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.rangeNavigator.dataSource = chartData;
            args.rangeNavigator.periodSelectorSettings.height = document.body.className.indexOf('e-bigger') > -1 ? 56 : 42;
        }
        var loaded = function (args) {
            if (!ej.base.Browser.isDevice && document.getElementById('container_Secondary_Element')) {
                document.getElementById('container_Secondary_Element').style.transform = 'translate(13%)';
            }
            var range = document.getElementById('container').ej2_instances[0];
            var value = range.svgObject.getBoundingClientRect().left - range.element.getBoundingClientRect().left;
            document.getElementById('stockRange').style.transform = 'translateX(' + (value - 10) + 'px)';          

        }
        var rangeCalculated = function (args) {
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                chart.setAnnotationValue(0, '<div></div>');
            }
        }
        var chartloaded = function (args) {
            var labels = (args.chart.axisCollections[0]).visibleLabels;
            var maxValue = args.chart.axisCollections[0].visibleRange.max;
            if (args.chart.primaryXAxis.stripLines.length === 1) {
                for (var i = 0; i < labels.length; i += 2) {
                    args.chart.primaryXAxis.stripLines.push({
                        start: new Date(labels[i].value), end: labels[i + 1] ? new Date(labels[i + 1].value) : new Date(maxValue),
                        zIndex: 'Behind', border: { width: 0, color: 'transparent' }, rotation: null,
                        opacity: 0.7, textStyle: {}, text: '', color: 'whitesmoke', visible: true
                    });
                }
                args.chart.refresh();
            }
        }
        var chartload = function (args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.series[0].dataSource = chartData1;
            args.chart.series[1].dataSource = chartData1;
            args.chart.tooltip.format = '${point.x}<br/>High : <b>${point.high}</b><br/>Low :' +
                ' <b>${point.low}</b><br/>Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b><br/>Volume : <b>${point.volume}</b>';
        }
        var changed = function (args) {
            zoomFactor = args.zoomFactor;
            zoomPosition = args.zoomPosition;
            var data = chartData.filter(function (datavalue) {
                return (datavalue['x'].getTime() >= args.start.getTime() &&
                    datavalue['x'].getTime() <= args.end.getTime());
            });
         //  chartData1 = data;
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.primaryXAxis.zoomPosition = 0;
                chart.primaryXAxis.zoomFactor = 1;
                chart.series[1].animation.enable = false;
                chart.primaryXAxis.stripLines = [{ visible: true }];
                chart.indicators[0].animation.enable = false;
                pointColors = [];
                chartData1 = data;
                chart.series[0].dataSource = data;
                chart.series[1].dataSource = data;
                chart.refresh();
                chart.setAnnotationValue(0, '<div id="annotation"></div>');
            }
        }
        var axislabelrender = function (args) {
            if (args.axis.name === 'secondary') {
                args.text = Math.round((args.value / 10000000)) + 'B';
            }
            else if (args.axis.orientation === 'Vertical') {
                args.text = '$' + Math.round(args.value);
            }
        }
        var tooltiprender = function (args) {
            var chart = document.getElementById('chart').ej2_instances[0];
            if (args.series.type === 'Candle') {
                var text = args.text.split('<br/>');
                var html = "<table><thead>" + text[0] + "</thead>";
                for (var i = 1; i < text.length; i++) {
                    var value = text[i].split(':');
                    if (i === text.length - 1) {
                        html += "<tr><td style='opacity:0.5'>" + value[0] + "</td><td style='padding-left: 5px;'>" +
                            Math.round(((+value[1].split("</b>")[0].split("<b>")[1]) / 10000000)) + "B";
                    }
                    else {
                        html += "<tr><td style='opacity:0.5'>" + value[0] + "</td><td style='padding-left: 5px;'>$" +
                            (+value[1].split(" <b>")[1].split("</b>")[0]).toFixed(2) + "</td></tr>";
                    }
                }
                html += '</table>';
                chart.setAnnotationValue(0, "<div id='annotation' style='line-height: 18px; font-size: 13px;background: #fff; opacity:0.9; color: #464e56; " +
                    " box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px; border-radius: 3px'>" + html +
                    "</div>");
            }
            args.text = '';
        }
        var pointrender = function (args) {
            if (args.series.type === 'Candle') { pointColors.push(args.fill); } else {
                args.fill = pointColors[args.point.index];
            }
        }
        var chartmouseleave = function (args) {
            removeSecondaryElement();
        }
        var chartmousemove = function (args) {
            var chart = document.getElementById('chart').ej2_instances[0];
            if (!ej.charts.withInBounds(args.x, args.y, chart.chartAxisLayoutPanel.seriesClipRect)) {
                removeSecondaryElement();
            }
        }
        function removeSecondaryElement() {
            setTimeout(function () {
                if (ej.charts.getElement("annotation")) {
                    ej.base.remove(ej.charts.getElement("annotation"));
                }
            }, 2000);
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Stock Chart in ASP.NET MVC Range Selector control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a stock chart with MACD indicator.
        Period Selector shows the information about the stock chart range values with out range navigator.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Period Selector.
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Range Selector Stock Chart Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stock Chart in ASP.NET MVC Range Selector Control</h1>
                }