@using Syncfusion.EJ2.Popups
@using Syncfusion.EJ2

@section ControlsSection{
    <div id="predefinedDialogCustomization" class="col-lg-12 control-section">
        @Html.EJS().Button("alertBtn").Content("Alert").CssClass("e-warning").Render()
        @Html.EJS().Button("confirmBtn").Content("Confirm").CssClass("e-success").Render()
        @Html.EJS().Button("promptBtn").Content("Prompt").IsPrimary(true).Render()
        <span id="statusText"></span>
    </div>
}
@section PreScripts {
    <script>
        var dialogObj;
        var alertBtn = new ej.buttons.Button({});
        alertBtn.appendTo('#alertBtn');
        document.getElementById('alertBtn').onclick = function () {
            document.getElementById("statusText").style.display = "none";
            dialogObj = ej.popups.DialogUtility.alert({
                title: '',
                content: '<div class="new" style="display: flex;flex-direction: column;align-items: center;"><p><span class="circle-border"><span class="e-icons e-check" style="font-size: 30px; color: green; font-weight: 700;"></span></span></p><p><b style="font-size:25px; font-weight: 500 !important;">Good job!</b></p><p>You clicked the button!</p></div>',
                okButton: { text: 'OK', click: alertOkAction.bind(this) },
                position: { X: 'center', Y: 'center' },
                width: '240px',
                closeOnEscape: true
            });
        };
        function alertOkAction() {
            dialogObj.hide();
            document.getElementById("statusText").innerHTML = "The user closed the Alert dialog.";
            document.getElementById("statusText").style.display = "block";
        }

        var confirmBtn = new ej.buttons.Button({});
        confirmBtn.appendTo('#confirmBtn');
        document.getElementById('confirmBtn').onclick = function () {
            document.getElementById("statusText").style.display = "none";
            dialogObj = ej.popups.DialogUtility.confirm({
                title: ' Delete file',
                content: '<p ><span class= "e-icons e-changes-reject" style="float: left;padding-right: 10px;font-size: 25px;display: inline;"></span>Are you sure you want to permanently delete this file?</p><p class="fileEdit"><span class= "e-icons e-image" style="font-size: 50px;"></span><span>failed personas.png<br/>Item type:PNG File<br/>Dimenstion: 1384 * 782<br/>Size:374 KB<br/>Original Location: C:/Users/Images</span></p>',
                okButton: { text: 'YES', click: confirmOkAction.bind(this) },
                cancelButton: { text: 'No', click: confirmCancelAction.bind(this) },
                position: { X: 'center', Y: 'center' },
                width: '420px',
                closeOnEscape: true
            });
        };
        var confirmOkAction = function () {
            dialogObj.hide();
            document.getElementById("statusText").innerHTML = " The user confirmed the dialog box";
            document.getElementById("statusText").style.display = "block";
        };
        var confirmCancelAction = function () {
            dialogObj.hide();
            document.getElementById("statusText").innerHTML = "The user canceled the dialog box.";
            document.getElementById("statusText").style.display = "block";
        };
        var promptBtn = new ej.buttons.Button({});
        promptBtn.appendTo('#promptBtn');
        document.getElementById('promptBtn').onclick = function () {
            document.getElementById("statusText").style.display = "none";
            dialogObj = ej.popups.DialogUtility.confirm({
                title: 'Join Wi-Fi network',
                content: '<table class="Table"><tbody><tr><td>SSID: <b>AndroidAP</b></td></tr><tr> <td>Password:</td> </tr> <tr> <td> <span class="e-input-group"> <input type="password" id="password" name="Required" class="e-input"> </span> </td> </tr> </tbody> </table> ',
                okButton: { text: 'OK', click: promptOkAction.bind(this) },
                cancelButton: { click: promptCancelAction.bind(this) },
                position: { X: 'center', Y: 'center' },
                width: '240px',
                closeOnEscape: true
            });
        };
        function promptOkAction() {
            dialogObj.hide();
            document.getElementById("statusText").innerHTML = " The user confirmed the dialog box";
            document.getElementById("statusText").style.display = "block";
        }
        function promptCancelAction() {
            dialogObj.hide();
            document.getElementById("statusText").innerHTML = "The user canceled the prompt dialog";
            document.getElementById("statusText").style.display = "block";
        }

    </script>
    <style>
        #predefinedDialogCustomization {
            padding: 25px 0 0 15px;
            height: 100%;
            min-height: 350px;
        }

            #predefinedDialogCustomization #statusText {
                font-size: 16px;
                margin-top: 20px;
            }

            #predefinedDialogCustomization .e-btn {
                margin-left: 5px;
            }

        .fileEdit {
            display: flex;
            justify-content: space-evenly;
            padding: 20px 0 0 50px;
        }

        .Table {
            line-height: 2.0;
        }

        .e-alert-dialog .e-footer-content {
            display: flex;
            justify-content: center;
        }

        .circle-border {
            align-items: center;
            justify-content: center;
            display: flex;
            color: green;
            width: 60px;
            height: 60px;
            border: 5px solid rgb(215,215,215);
            border-radius: 50%;
        }

        .e-changes-reject {
            display: inline;
            float: left;
            font-size: 40px;
            padding-right: 10px;
        }
    </style>
}
@section ActionDescription{
    <div id="action-description">
        <p>This example demonstrates how to customize the content of the predefined Alert, Confirm and Prompt dialogs. Three buttons have been added to this example, click one of them to open the relevant dialog box.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The predefined dialog is used to display messages such as supplemental content like graphics, text, and interactive content like form components within a web page. It can use the <code>
                content
            </code> property to load customized content.
            The content property accepts both string and HTML elements as content.
        </p>
        <p>
            <b>See also</b>
        </p>
        <ul>
            <li>
                <a target="_blank"
                   href="https://ej2.syncfusion.com/aspnetmvc/documentation/dialog/how-to/render-a-dialog-using-utility-functions" aria-label="Customization of predefined dialogs">
                    Customization of predefined dialogs
                <span class="sr-only">opens in a new tab</span></a>
            </li>
        </ul>
    </div>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC Predefined Dialogs control. Explore here for more details." />
}

@*custom code end*@
@section Title{
    <title>
        ASP.NET MVC Predefined Dialogs Customization Example - Syncfusion Demos
    </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Customization in ASP.NET MVC Predefined Dialogs Control</h1>
}
