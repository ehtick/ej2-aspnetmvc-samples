@section ControlsSection{
    <div class="control-pane">
        <div class="control-section">
            <div class="top-right-button">
                @Html.EJS().Button("json-btn").CssClass("e-btn e-custom-btn").Content("Import JSON").Render()
            </div>
            <div class="row">
                <div class="col-lg-12 control-section">
                    <div class="App">
                        @Html.EJS().Dialog("dialog").Width("700px").Height("420px").IsModal(true).Header("JSON").Visible(false).CloseOnEscape(true).ShowCloseIcon(true).BeforeOpen("dialogOpen").ContentTemplate(@<form>
                            <textarea class="json-content-area" id="json-content-area"></textarea>
                            <span id="dlgSpan" style="visibility: hidden;">Invalid Query</span>
                        </form>).AnimationSettings(e => e.Effect(Syncfusion.EJ2.Popups.DialogEffect.Zoom).Duration(400).Delay(0)).Buttons(btn =>
                              {
                                  btn.Click("cancelClick").ButtonModel(ViewData["Cancelbtn"]).Add();
                                  btn.Click("importClick").ButtonModel(ViewData["ImportBtn"]).Add();
                              }).Render()
                    </div>
                    @Html.EJS().QueryBuilder("querybuilder").Columns(col =>
                    {
                    col.Field("EmployeeID").Label("Employee ID").Type("number").Add();
                    col.Field("FirstName").Label("First Name").Type("string").Add();
                    col.Field("TitleOfCourtesy").Label("Title Of Courtesy").Type("boolean").Values(new List<string> { "Mr.", "Mrs." }).Add();
                    col.Field("Title").Label("Title").Type("string").Add();
                    col.Field("HireDate").Label("Hire Date").Type("date").Format("dd/MM/yyyy").Add();
                    col.Field("Country").Label("Country").Type("string").Add();
                    col.Field("City").Label("City").Type("string").Add();
                    }).Rule((Syncfusion.EJ2.QueryBuilder.QueryBuilderRule)ViewData["rule"]).DataSource(ViewData["dataSource"]).Created("createdControl").RuleChange("updateRule").Render()

                    <div id="json-preview" class="e-query-json-preview">
                        <div style="border: none; width: 100% ">
                            <label style="padding: 10px">JSON</label>
                            <div class="copy-tooltip" style="display: none" id="copy-json">
                                @Html.EJS().Tooltip("Tooltip").OpensOn("Click").Content("Copied to clipboard").ContentTemplate(@<div class="e-icons e-copy"></div>).Render()
                            </div>
                        </div>
                        <div readonly id="json-texarea" class="e-json-content">
                            <pre class="e-pre-content"></pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC Query Builder control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the Query Builder control showing how to import and export a query in JSON format. The query preview can be showcased in the tab control, and the query can be imported to Query Builder using the Import button.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Query Builder control is used to create or edit filters. You can edit filters by changing the fields. In this demo features export and import of queries in JSON format is showcased.
            For Common Expression Language (CEL) output, use the "cel" format. CEL is used for validating data.
            For Spring Expression Language (SpEL) output, use the "spel" format. The Spring Expression Language (SpEL) is a powerful expression language that supports querying and manipulating an object graph at runtime.
        </p>
        <p>In mobile mode, the control is shown vertically.</p>
        <p>
            More information about Query Builder can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/aspnetmvc/documentation/query-builder/getting-started" aria-label="documentation section">
                documentation section
            <span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@*custom code start*@
<style>
    .e-query-builder {
        margin: 0 auto;
    }

    .e-query-json-preview {
        margin-bottom: 20px !important;
        margin-top: 20px !important;
        border: 1px solid #e5e7eb;
        border-radius: 4px;
        height: 330px;
    }

    .top-right-button {
        height: 32px;
    }

    .top-right-button {
        float: right;
    }

    .e-query-json-preview .copy-tooltip {
        position: unset;
        margin-top: 10px;
        float: right;
        height: 32px;
        width: 32px;
        cursor: pointer;
        background: #f4f4f4;
        border-radius: 2px;
        margin: 10px 10px 0 10px;
    }

        .e-query-json-preview .copy-tooltip.e-control.e-tooltip:hover {
            background: #D8D8D8;
        }


    .e-query-json-preview .copy-tooltip {
        position: unset;
        margin-top: 10px;
        float: right;
        height: 32px;
        width: 32px;
        cursor: pointer;
        background: #f4f4f4;
        border-radius: 2px;
    }

    .e-query-json-preview .e-icons.e-copy {
        padding-left: 3px;
        padding-top: 4px;
        color: rgba(0, 0, 0, .54);
        float: right;
        font-size: 25px;
        padding-right: 5px;
        padding-top: 4px;
        color: rgba(0, 0, 0, .54);
    }

    .e-query-json-preview .e-json-content {
        margin: 10px;
        border: none;
        height: 83%;
        width: 98%;
    }

    .e-query-json-preview .CodeMirror {
        height: 280px !important;
    }

    #json-btn {
        margin-left: 15px;
    }

    #mongo-btn {
        margin-left: 15px;
    }

    #sql-btn {
        margin-left: 15px;
    }

    .json-content-area {
        height: 240px !important;
        width: 99% !important;
        overflow-x: hidden;
        margin: 10px !important;
        padding: 10px !important;
    }
    
    #dlgSpan.error {
        color: red;
        padding-left: 20px;
    }

    .e-pre-content {
        height: 220px;
        background: transparent;
        border: none;
    }

    @@media only screen and (max-width: 700px) {
        .e-query-json-preview .e-json-content {
            width: 95%;
        }
    }

    .fluent-dark .json-content-area,
    .bootstrap5\.3-dark .json-content-area,
    .bootstrap-dark .json-content-area,
    .material3-dark .e-query-json-preview .e-icons.e-copy,
    .material-dark .json-content-area,
    .tailwind-dark .json-content-area,
    .fabric-dark .json-content-area,
    .bootstrap5-dark .json-content-area,
    .fluent2-dark .json-content-area,
    .fluent2-highcontrast .json-content-area {
        background-color: #1f1f1f;
    }

    .fluent-dark .e-query-json-preview .e-icons.e-copy,
    .bootstrap5-dark .e-query-json-preview .e-icons.e-copy,
    .material-dark .e-query-json-preview .e-icons.e-copy,
    .material3-dark .e-query-json-preview .e-icons.e-copy,
    .fabric-dark .e-query-json-preview .e-icons.e-copy,
    .tailwind-dark .e-query-json-preview .e-icons.e-copy,
    .bootstrap5\.3-dark .e-query-json-preview .e-icons.e-copy,
    .highcontrast .e-query-json-preview .e-icons.e-copy,
    .fluent2-dark .e-query-json-preview .e-icons.e-copy,
    .fluent2-highcontrast .e-query-json-preview .e-icons.e-copy {
        padding-bottom: 3px;
        color: white;
        background-color: black;
    }

    .tailwind3-dark #json-content-area,
    .tailwind3-dark .e-query-json-preview .e-json-content {
        background: transparent;
    }

    .tailwind3-dark .e-query-json-preview .e-pre-content {
        color: white;
    }
</style>@*custom code end*@
<script>
    var content = "";
    var textAreacontent = document.getElementsByClassName('e-json-content');
    function createdControl() {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
         if(ej.base.Browser.isDevice) {
            qbObj.summaryView = true;
         }
         updateRule();
    }


    function updateRule() {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        var validRule = qbObj.getValidRules(qbObj.rule);
        content = JSON.stringify(validRule, null, 4);
        document.querySelector('.e-json-content .e-pre-content').textContent = content;
        hljs.highlightBlock(document.querySelector('.e-json-content'));
    }

    function dialogOpen() {
        var dlgContentElement = document.getElementById('json-content-area');
        var errorElem = document.getElementById('dlgSpan');
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        if (dlgContentElement) {
            var validRule = qbObj.getValidRules(qbObj.rule);
            content = JSON.stringify(validRule, null, 4);
            dlgContentElement.value = content;
            errorElem.style.visibility = 'hidden';
            if (errorElem.classList.contains("error")) {
                errorElem.classList.remove("error");
            }
        }
    }

    function importClick() {
        try {
            let textAreacontent = document.getElementById('json-content-area');
            var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
            qbObj.setRules(JSON.parse(textAreacontent.value));
            updateRule();
            var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
            dialogObj.hide();
        } catch (error) {
            var errorElem = document.getElementById('dlgSpan');
            if (!errorElem.classList.contains("error")) {
                errorElem.style.visibility = 'visible';
                errorElem.classList.add("error");
            }
        }
    }

    function cancelClick() {
        var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
        dialogObj.hide();
    }


</script>

@section Scripts {
    <script>
        var previewElement = document.getElementById('json-preview');
        var copyJsonTooltip = document.getElementById('copy-json');
        document.getElementById("json-btn").onclick = function () {
            var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
            dialogObj.show();
        }

        previewElement.addEventListener('mouseenter', function () {
            var elem = document.getElementsByClassName("copy-tooltip");
            elem[0].style.display = 'block';
        });

        previewElement.addEventListener('mouseleave', function () {
            var elem = document.getElementsByClassName("copy-tooltip");
            elem[0].style.display = 'none';
        });

        copyJsonTooltip.addEventListener('click', function (args) {
            navigator.clipboard.writeText(content);
            setTimeout(function () {
                ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip').close();
            }, 1000);
        });
    </script>
}

@section Title{
    <title>ASP.NET MVC Query Builder Default Functionalities Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC Query Builder Control</h1>
}
