@helper RenderTooltip()
{
    @Html.EJS().Tooltip("Tooltip").OpensOn("Click").Content("Copied to clipboard").ContentTemplate(@<div class="e-icons e-copy"></div>).Render()
}
@helper RenderJsonTooltip()
{
    @Html.EJS().Tooltip("JsonTooltip").OpensOn("Click").Content("Copied to clipboard").ContentTemplate(@<div class="e-icons e-copy"></div>).Render()
}
@section ControlsSection{
    <div class="control-pane">
        <div class="control-section">
            <div class="top-right-element">
                @Html.EJS().DropDownButton("element").CssClass("e-caret-hide").Content("Import").Select("onSelect").Items(ViewData["items"]).Render()

            </div>
            <div class="row">
                <div class="col-lg-12 control-section">
                    <div class="App">
                        @Html.EJS().Dialog("dialog").Width("700px").Height("420px").IsModal(true).Header("JSON").Visible(false).CloseOnEscape(true).ShowCloseIcon(true).BeforeOpen("dialogOpen").ContentTemplate(@<form>
                            <textarea class="content-area" id="content-area"></textarea>
                            <span id="dlgSpan" style="visibility: hidden;">Invalid Query</span>
                        </form>).AnimationSettings(e => e.Effect(Syncfusion.EJ2.Popups.DialogEffect.Zoom).Duration(400).Delay(0)).Buttons(btn =>
                    {
                    btn.Click("cancelClick").ButtonModel(ViewData["Cancelbtn"]).Add();
                    btn.Click("importClick").ButtonModel(ViewData["ImportBtn"]).Add();
                    }).Render()

                    </div>
                    @Html.EJS().QueryBuilder("querybuilder").Columns(col =>
                    {
                    col.Field("EmployeeID").Label("Employee ID").Type("number").Add();
                    col.Field("FirstName").Label("First Name").Type("string").Add();
                    col.Field("LastName").Label("Last Name").Type("string").Add();
                    col.Field("Age").Label("Age").Type("number").Add();
                    col.Field("IsDeveloper").Label("Is Developer").Type("boolean").Add();
                    col.Field("PrimaryFramework").Label("Primary Framework").Type("string").Add();
                    col.Field("HireDate").Label("Hire Date").Type("date").Format("MM/dd/yyyy").Add();
                    col.Field("Country").Label("Country").Type("string").Add();
                    }).DataSource(ViewData["dataSource"]).Rule((Syncfusion.EJ2.QueryBuilder.QueryBuilderRule)ViewData["rule"]).RuleChange("updateRule").AllowDragAndDrop(true).Render()

                    <div class="e-query-preview">
                        @(Html.EJS().Tab("defaultTab").Created("tabCreated").Selected("changeTab")
                        .ContentTemplate(
                        @<div>
                            <div class="e-tab-header">
                                <div>SQL</div>
                                <div>JSON</div>
                            </div>
                            <div class="e-content">
                                <div>
                                    <div class="preview-content">
                                        <div class="e-preview-options">
                                            <label>Format Info:</label>
                                            @Html.EJS().RadioButton("radio1").Label("Inline").Name("state").CssClass("e-custom-radio-btn").Checked(true).Value("Inline").Change("change").Render()
                                            @Html.EJS().RadioButton("radio2").Label("Parameter").Name("state").CssClass("e-custom-radio-btn").Value("Parameter").Change("change").Render()
                                            @Html.EJS().RadioButton("radio3").Label("Named Parameter").Name("state").CssClass("e-custom-radio-btn").Value("NamedParameter").Change("change").Render()
                                            <div class="copy-tooltip" style="display: none"  id="copy-sql">
                                                @RenderTooltip()
                                            </div>
                                        </div>
                                        <div readonly class="e-text-area-content e-sql-content">
                                            <pre class="e-pre-content"></pre>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <div class="preview-content">
                                        <div class="e-preview-options">
                                            <div class="copy-tooltip" style="display: none" id="copy-json">
                                                @RenderJsonTooltip()
                                            </div>
                                        </div>
                                         <div readonly class="e-text-area-content e-json-content">
                                            <pre class="e-pre-content"></pre>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        ).Render()
                        )
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Drag and Drop Functionalities in ASP.NET MVC Query Builder control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the drag and drop support of the Query Builder control.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the Query Builder includes a drag-and-drop feature that allows you to move rules or groups to different positions. You can enable or disable this feature using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/syncfusion.ej2.querybuilder.querybuilder.html#Syncfusion_EJ2_QueryBuilder_QueryBuilder_AllowDragAndDrop" aria-label="AllowDragAndDrop">
            AllowDragAndDrop</a> property. 
        </p>
        <p>In mobile mode, the control is shown vertically.</p>
        <p>
            More information about Query Builder can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/aspnetmvc/documentation/query-builder/getting-started" aria-label="documentation section">
                documentation section
            </a>.
        </p>
    </div>
}

@*custom code start*@
<style>
    .e-query-builder {
        margin: 0 auto;
    }

    .e-custom-radio-btn {
        margin-left: 20px;
    }
    .e-query-preview {
        margin-top: 20px !important;
        border: 1px solid #e5e7eb;
        border-radius: 4px;
        height: 300px;
        margin-bottom: 10px;
    }

    .e-query-preview .e-tab {
        height: 200px;
    }

    .e-query-preview .e-tab .e-content {
        margin: 10px;
    }

    .e-query-preview .e-preview-options {
        padding: 10px;
    }

    .e-query-preview .e-radio-option {
        margin-left: 20px;
    }

    .e-query-preview .copy::before {
        content: '\e77c';
        font-size: 25px;
    }

    .e-query-preview .copy-tooltip {
        height: 32px;
        width: 32px;
        position: absolute;
        cursor: pointer;
        right: 12px;
        top: 12px;
        background: #f4f4f4;
        border-radius: 2px;
    }

    .e-query-preview .copy-tooltip.e-control.e-tooltip:hover {
        background: #D8D8D8;
    }

    .e-query-preview .e-icons.e-copy {
        padding-left: 3px;
        padding-top: 4px;
        color: rgba(0, 0, 0, .54);
        float: right;
        font-size: 25px;
        padding-right: 5px;
        padding-top: 4px;
        color: rgba(0, 0, 0, .54);
    }

    .e-query-preview .copy-tooltip {
        position: unset;
        margin-top: 10px;
        float: right;
        height: 32px;
        width: 32px;
        cursor: pointer;
        background: #f4f4f4;
        border-radius: 2px;
    }

    .e-query-preview .CodeMirror {
        height: 180px !important;
    }

    .e-query-builder .query-template-control .cndtnbtn.e-control.e-dropdownlist.e-lib.e-input {
        padding-left: 10px;
    }

    .e-query-builder .query-template-control span.e-custom-group-btn {
        max-width: 100px;
        border-radius: 5px !important;
        border-width: 1px !important;
    }

    .e-query-preview .preview-content {
        margin-top: 10px;
    }

    .e-query-preview .e-sql-content,
    .e-query-preview .e-json-content,
    .e-query-preview .e-cel-content,
    .e-query-preview .e-spel-content {
        margin: 10px;
        border: none;
        height: 180px;
        width: 98%;
    }

    .e-query-preview .e-json-content {
        height: 220px;
    }

    .e-query-preview .e-text-area-content:focus-visible {
        outline: none;
    }

    .e-query-preview .preview {
        margin-top: 20px;
    }

    .content-area {
        height: 240px !important;
        width: 99% !important;
        overflow-x: hidden;
        margin: 10px !important;
        padding: 10px !important;
    }

    .e-text-area-content {
        margin: 10px;
        overflow: auto;
        border: none;
        width: 96%;
    }

    .e-text-area-content:focus-visible {
        outline: none;
    }

    .parent-container {
        display: flex;
        outline: none !important;
    }

    .child {
        border-radius: 4px;
        padding: 10px;
        margin: 5px;
    }

    .left-content {
        border: 1px solid #ccc;
        width: 250px;
    }

    .right-content {
        width: 100%;
    }

    .bottom-right-content {
        margin-top: 25px;
    }

    .left-header {
        font-weight: 700;
    }

    .property {
        margin-top: 10px;
    }

    .e-text-area-content {
        margin: 10px !important;
        overflow: auto;
        border: none;
        width: 96%;
    }

    .e-text-area-content:focus-visible {
        outline: none;
    }

    .top-right-element {
        padding-right: 20px;
        height: 32px;
    }

    .top-right-element .e-dropdown-btn {
        float: right;
    }

    .container-fluid {
        padding-left: 10px;
        padding-right: 10px;
    }

    #dlgSpan.error {
        color: red;
        padding-left: 20px;
    }

    .e-pre-content {
        background: transparent;
        border: none;
    }

    @@media only screen and (max-width: 700px) {
        .e-query-preview .e-sql-content,
        .e-query-preview .e-json-content {
            height: 160px;
        }

        .e-query-preview .copy-tooltip {
           display: block !important;
        }
    }

    .highcontrast .e-query-json-preview .e-icons.e-copy,
    .fluent2-dark .e-query-preview .e-icons.e-copy,
    .fluent2-highcontrast .e-query-preview .e-icons.e-copy {
        padding-bottom: 3px;
        color: white;
        background-color: black;
    }

    .tailwind3-dark #content-area,
    .tailwind3-dark .e-query-preview .e-text-area-content {
        background: transparent;
    }

    .tailwind3-dark .e-query-preview .e-pre-content {
        color: white;
    }
</style>
@*custom code end*@
<script>
    var content = "";
    var queryType = "inline";
    var currentIndex = 0;

    function tabCreated() {
        setTimeout(function () {
            updateSQLContentTemplate();
        }, 100);
    }

    function changeTab(args) {
        currentIndex = args.selectedIndex;
        setTimeout(function () {
            updateContentTemplate();
        }, 100);
    }

    function updateSQLContentTemplate() {
        content = updateSQLContent();
        sqlElement.value = content;
        sqlElement.style.display = 'block';
    }
    function updateJsonContentTemplate() {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        var validRule = qbObj.getValidRules(qbObj.rule);
        const jsonValue = JSON.stringify(validRule, null, 4);
        jsonElement.value = jsonValue;
        document.querySelector('.e-json-content .e-pre-content').textContent = content;
        hljs.highlightBlock(document.querySelector('.e-json-content'));
        jsonElement.style.display = 'block';
    }
    function updateSQLContent() {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        var qbrule = qbObj.getValidRules(qbObj.rule);
        switch (queryType) {
            case 'inline':
                content = qbObj.getSqlFromRules(qbrule);;
                break;
            case 'parameter':
                content = convertParameterSql(qbrule);
                break;
            default:
                content = convertNamedParameterSql(qbrule);
                break;
        }
        document.querySelector('.e-sql-content .e-pre-content').textContent = content;
        hljs.highlightBlock(document.querySelector('.e-sql-content'));
        return content;
    }

    function convertParameterSql(qbrule) {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        content = JSON.stringify(qbObj.getParameterizedSql(qbrule), null, 4);
        return content;
    }
    function convertNamedParameterSql(qbrule) {
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        content = JSON.stringify(qbObj.getParameterizedNamedSql(qbrule), null, 4);
        return content;
    }


    function updateRule() {
        updateContentTemplate();
    }

    function updateContentTemplate() {
        switch (currentIndex) {
            case 0:
                updateSQLContentTemplate();
                break;
            case 1:
                updateJsonContentTemplate();
                break;
        }
    }


    function change(args) {
        queryType = args.value.toLowerCase();
        updateSQLContentTemplate();

    };

    function onSelect(args) {
        var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        var validRule = qbObj.getValidRules(qbObj.rule);
        switch (args.item.text) {
            case 'Import Inline Sql':
                currentvalue.value = qbObj.getSqlFromRules(validRule);
                currentvalue.rule = 'sql';
                dialogObj.header = "SQL";
                dialogObj.show();
                break;
            case 'Import Parameter Sql':
                currentvalue.value = JSON.stringify(qbObj.getParameterizedSql(validRule), null, 4);
                currentvalue.rule = 'parameter';
                dialogObj.header = "Parameter SQL";
                dialogObj.show();
                break;
            case 'Import Named Parameter Sql':
                currentvalue.value = JSON.stringify(qbObj.getParameterizedNamedSql(validRule), null, 4);
                currentvalue.rule = 'namedparameter';
                dialogObj.header = "NamedParameter SQL";
                dialogObj.show();
                break;
            default:
                break;
        }
    }

    function dialogOpen() {
        var dlgContentElement = document.getElementById('content-area');
        var errorElem = document.getElementById('dlgSpan');
        var qbObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        if (dlgContentElement) {
            dlgContentElement.value = currentvalue.value;
            errorElem.style.visibility = 'hidden';
            if (errorElem.classList.contains("error")) {
                errorElem.classList.remove("error");
            }
        }
    }

    function importClick() {
        try{
            let textAreacontent = document.getElementById('content-area');
            if (currentvalue.rule != "sql") {
                var textAreaValue = JSON.parse(textAreacontent.value);
            }
            var qryBldrObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
            switch (currentvalue.rule) {
                case 'namedparameter':
                    qryBldrObj.setParameterizedNamedSql(JSON.parse(textAreacontent.value));
                    break;
                case 'parameter':
                    qryBldrObj.setParameterizedSql(JSON.parse(textAreacontent.value));
                    break;
                case 'sql':
                    qryBldrObj.setRulesFromSql(textAreacontent.value, true);
                    break;
                default:
                    break;
            }
            updateRule();
            var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
            dialogObj.hide();
        } catch (error) {
            var errorElem = document.getElementById('dlgSpan');
            if (!errorElem.classList.contains("error")) {
                errorElem.style.visibility = 'visible';
                errorElem.classList.add("error");
            }
        }
    }

    function cancelClick() {
        var dialogObj = ej.base.getComponent(document.getElementById("dialog"), 'dialog');
        dialogObj.hide();
    }


</script>


@section Scripts {
<script>
    var previewElement = document.getElementsByClassName("preview-content")[0];
    var sqlElement = document.getElementsByClassName('e-sql-content')[0];
    var jsonElement = document.getElementsByClassName('e-json-content')[0];
    var dlgContentElement = document.getElementById('content-area');
    var sqlPreviewElement = document.getElementsByClassName("preview-content")[0];
    var monogPreviewElement = document.getElementsByClassName("preview-content")[1];
    var copyJsonTooltip = document.getElementById('copy-json');
    var copySQLTooltip = document.getElementById('copy-sql');
    var currentvalue = {
        value: "",
        rule: ""
    };

    sqlPreviewElement.addEventListener('mouseenter', function () {
        var elem = document.getElementsByClassName("copy-tooltip");
        elem[0].style.display = 'block';
    });

    sqlPreviewElement.addEventListener('mouseleave', function () {
        var elem = document.getElementsByClassName("copy-tooltip");
        elem[0].style.display = 'none';
    });

    copySQLTooltip.addEventListener('click', function (args) {
        navigator.clipboard.writeText(content);
        setTimeout(function () {
            ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip').close();
        }, 1000);
    });

    monogPreviewElement.addEventListener('mouseenter', function () {
        var elem = document.getElementsByClassName("copy-tooltip");
        elem[1].style.display = 'block';
    });

    monogPreviewElement.addEventListener('mouseleave', function () {
        var elem = document.getElementsByClassName("copy-tooltip");
        elem[1].style.display = 'none';
    });

    copyJsonTooltip.addEventListener('click', function (args) {
        navigator.clipboard.writeText(content);
        setTimeout(function () {
            ej.base.getComponent(args.target.closest('.e-tooltip'), 'tooltip').close();
        }, 1000);
    });
</script>
}

@section Title{
    <title>ASP.NET MVC Query Builder Drag and Drop Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Drag and Drop in ASP.NET MVC Query Builder Control</h1>
}
