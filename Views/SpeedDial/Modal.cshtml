@using Syncfusion.EJ2
@using Syncfusion.EJ2.Buttons
@section ControlsSection{
    <div class="control-section">
        <div id="target" class="speeddial-modal-target custom-index">
            @Html.EJS().SpeedDial("Default").HtmlAttributes(new Dictionary<string, object>() { { "title", "Menu" } }).Target("#target").OpenIconCss("e-icons e-justify").CloseIconCss("e-icons e-close").Modal(true).Position(FabPosition.BottomCenter).Items((List<SpeedDialItem>)ViewData["datasource"]).Render()
        </div>
    </div>
}
<style>
    .speeddial-modal-target {
        min-height: 350px;
        position: relative;
    }

    .speeddial-modal-target .e-fab.e-btn.e-fab-bottom {
        bottom: 50px;
    }

    .custom-index {
        z-index: 500 !important;
    }
</style>

@section Meta{
    <meta name="description" content="This example demonstrates the Modal in ASP.NET MVC Button control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            The following sample demonstrates the modal popup of a speed dial. Click the button to open action items and click the overlay to close the action items.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Speed Dial enables modal popup mode when the <code>Modal</code> property is set. When this mode is enabled, an overlay is added to prevent background interaction and actions are closed when the overlay is click.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC Speed Dial Modal Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Modal in ASP.NET MVC Speed Dial Control</h1>
}
