@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Maps("container").TitleSettings(title => title.Text("Cyber Attack Map of United States").TextStyle(new MapsFont { Size = "16px" })).Load("Load").Loaded("Loaded").Layers(layer =>
   {
       layer.MarkerSettings(new List<MapsMarker>
       {
           new MapsMarker { Visible = true, Height = 15, Width = 15, AnimationDuration = 0 },
           new MapsMarker { Visible = true, Height = 15, Width = 15, AnimationDuration = 0 },
       }).NavigationLineSettings(new List<MapsNavigationLine>
       {
           new MapsNavigationLine { Visible = true, Angle = -0.3, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 15.758401, 39.864171 }, Longitude = new double[] { 101.155642, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = 0.4, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 57.725612, 39.864171 }, Longitude = new double[] { -101.802160, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.2, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 39.634177, 39.864171 }, Longitude = new double[] { 42.410740, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.1, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 22.860388, 39.864171 }, Longitude = new double[] { 79.739066, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.1, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { -24.763753, 39.864171 }, Longitude = new double[] { 134.852191, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.4, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 34.611098, 39.864171 }, Longitude = new double[] { 104.189872, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.8, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { -12.354844, 39.864171 }, Longitude = new double[] { -49.017709, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.4, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 3.450682, 39.864171 }, Longitude = new double[] { -72.943141, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.7, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 62.448268, 39.864171 }, Longitude = new double[] { 97.251835, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.3, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 65.931163, 39.864171 }, Longitude = new double[] { -45.812820, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.2, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { -21.206222, 39.864171 }, Longitude = new double[] { 17.122018, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.2, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 35.839969, 39.864171 }, Longitude = new double[] { 137.904641, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.2, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 46.582184, 39.864171 }, Longitude = new double[] { 2.232903, -100.854833 } },
           new MapsNavigationLine { Visible = true, Angle = -0.2, Color = "#ffffb3", DashArray = "5.1", Latitude = new double[] { 0.390617, 39.864171 }, Longitude = new double[] { 37.893734, -100.854833 } }
       }).ShapeSettings(new MapsShapeSettings { Fill = "#FFFFE0", Border = (new MapsBorder { Color = "#D2691E", Width = 0.5, Opacity = 1 }) })
         .ShapeData(ViewData["shapeData"]).Add();
   }).Render()
    </div>
    <div id="template" style="display:none">
        <div class="pulse-css">
            <br />
            <div class="name">{{:name}}</div>
        </div>
    </div>
    <div id="parent_template" style="display:none">
        <div class="parent_css">
            <br />
            <div class="name" style="margin-left: -10px; margin-top: -2px">United States</div>
        </div>
    </div>
    <style>
        #container {
            display: table;
            margin: 0 auto;
        }

        .name {
            margin-top: -6px;
            margin-left: -6px;
            font-size: 12px;
            color: black;
            text-shadow: 0px 1px 1px lightgray;
            font-weight: 500
        }        
        @@keyframes dash {
            from {
                stroke-dashoffset: 1000;
                stroke-width: 1px;
                stroke: #D2691E;
            }

            to {
                stroke-dashoffset: 0;
                stroke-width: 1px;
            }

            40% {
                opacity: 0.7;
            }

            50%,
            100% {
                opacity: 0;
            }
        }

        .pulse-css {
            width: 12px;
            height: 12px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            border-radius: 10px;
            background: #D2691E;
            position: relative;
            animation-delay: 5s;
        }

            .pulse-css:before,
            .pulse-css:after {
                content: '';
                width: 9px;
                height: 9px;
                -webkit-border-radius: 10px;
                -moz-border-radius: 10px;
                border-radius: 10px;
                background-color: #D2691E;
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                margin: auto;
                transform: scale(0.5);
                animation: pulse-css1 2s linear infinite;
            }

        .parent_css {
            width: 13px;
            height: 13px;
            background: #D2691E;
            position: relative;
            animation-delay: 5s;
        }

            .parent_css:before,
            .parent_css:after {
                content: '';
                width: 9px;
                height: 9px;
                background-color: #D2691E;
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                margin: auto;
                transform: scale(0.5);
                animation: pulse-css1 3s linear infinite;
            }

        @@keyframes pulse-css1 {
            0% {
                transform: scale(0.5);
                opacity: 0;
            }

            50% {
                opacity: 0.2;
            }

            90%,
            100% {
                transform: scale(5);
                opacity: 0;
            }
        }
    </style>
    <script>
        var dataFirst = true;
        function Load(args) {
            @* custom code start *@
            var theme = themeName ? themeName : 'Material';
            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            @* custom code end *@
            if (dataFirst) {
                args.maps.layers[0].markerSettings[0].dataSource = [
                    { latitude: 15.758401, longitude: 101.155642, name: 'Thailand' },
                    { latitude: 57.725612, longitude: -101.802160, name: 'Canada' },
                    { latitude: 39.634177, longitude: 42.410740, name: 'Turkey' },
                    { latitude: 22.860388, longitude: 79.739066, name: 'India' },
                    { latitude: -24.763753, longitude: 134.852191, name: 'Australia' },
                    { latitude: 34.611098, longitude: 104.189872, name: 'China' },
                    { latitude: -12.354844, longitude: -49.017709, name: 'Brazil' },
                    { latitude: 3.450682, longitude: -72.943141, name: 'Colombia' },
                    { latitude: 62.448268, longitude: 97.251835, name: 'Russia' },
                    { latitude: 65.931163, longitude: -45.812820, name: 'Greenland' },
                    { latitude: -21.206222, longitude: 17.122018, name: 'Namibia' },
                    { latitude: 35.839969, longitude: 137.904641, name: 'Japan' },
                    { latitude: 46.582184, longitude: 2.232903, name: 'France' },
                    { latitude: 0.390617, longitude: 37.893734, name: 'Kenya' }
                ];
                args.maps.layers[0].markerSettings[0].template = '#template';
                args.maps.layers[0].markerSettings[1].dataSource = [{
                    latitude: 39.864171,
                    longitude: -100.854833
                }];
                args.maps.layers[0].markerSettings[1].template = '#parent_template';
                dataFirst = false;
            }
        }
        function Loaded(args) {
            @* custom code start *@
            var lines = args.maps.layers[0].navigationLineSettings;
            var animation = function (i) {
                var line = document.getElementById('container_LayerIndex_0_NavigationIndex_' + i + '_Line0');
                var marker = document.getElementById('container_LayerIndex_0_MarkerIndex_0_dataIndex_' + i);
                if (line) {
                    line.style.strokeDasharray = '1000';
                    line.style.strokeDashoffset = '1000';
                    if (i < 4) {
                        line.style.animation = marker.style.animation = 'dash 5s linear 0s infinite';
                        marker.style.visibility = 'hidden';
                        setTimeout(function () {
                            marker.style.visibility = 'visible';
                        }, 0);
                    }
                    else if (i < 8) {
                        line.style.animation = marker.style.animation = 'dash 6s linear 2s infinite';
                        marker.style.visibility = 'hidden';
                        setTimeout(function () {
                            marker.style.visibility = 'visible';
                        }, 2000);
                    }
                    else if (i < 12) {
                        line.style.animation = marker.style.animation = 'dash 6s linear 4.5s infinite';
                        marker.style.visibility = 'hidden';
                        setTimeout(function () {
                            marker.style.visibility = 'visible';
                        }, 4500);
                    }
                    else {
                        line.style.animation = marker.style.animation = 'dash 5s linear 7s infinite';
                        marker.style.visibility = 'hidden';
                        setTimeout(function () {
                            marker.style.visibility = 'visible';
                        }, 7000);
                    }
                }
            };
            for (var i = 0; i < lines.length; i++) {
                animation(i);
            }
            @* custom code end *@
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample depicts a cyberattack map, which displays the cyberattacks and threats from various countries to the USA.

        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Cyber Attack Map in ASP.NET MVC Maps control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to dynamically display a navigation line with linear animation. Marker
            templates are added to denote the source and destination locations. Any custom HTML element can be used as a
            marker.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            The maps component features are segregated into individual modules by feature. To use marker template, inject
            the <code>Marker</code> module using the <code>Maps.Inject(Marker)</code> method, and use the navigation lines
            by injecting the <code>NavigationLine</code> module.

        </p>
    </div>
}



@section Title{
                    <title>ASP.NET MVC Maps Cyber Attack Map Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Cyber Attack Map in ASP.NET MVC Maps Control</h1>
                }