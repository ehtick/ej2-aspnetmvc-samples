@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@section ControlsSection{
    <div class="control-section">
        <div id="outer" style="width:100%">
            @Html.EJS().Maps("container").Load("mapsLoad").TitleSettings(title => title.Text("Australia cities weather detail").TextStyle(new MapsFont{ Size = "16px", Opacity = 1 })).Layers(layer =>
        {
            layer.MarkerSettings(new List<MapsMarker> { 
                new MapsMarker() {Visible = true, Height = 30, Width = 30 },
                new MapsMarker() {Visible = true, Height = 30, Width = 30 },
                new MapsMarker() {Visible = true, Height = 30, Width = 30 },
                new MapsMarker() {Visible = true, Height = 30, Width = 30 },
                new MapsMarker() {Visible = true, Height = 30, Width = 30 },
                new MapsMarker() {Visible = true, Height = 30, Width = 30 }}).ShapeSettings(new MapsShapeSettings{ Autofill = true, Palette = (string[])ViewData["palette"] }).ShapeDataPath("name").ShapeData(ViewData["shapeData"]).Add();
        }).Render()
        </div>
    </div>
    <style>
        #container {
            display: table;
            margin: 0 auto;
        }

        .markerTemplate {
            height: 30px;
            width: 30px;
            display: block;
            margin: auto;
            font-size: 14px;
        }
    </style>
    <script>
        function mapsLoad(args) {
            var theme = themeName ? themeName : 'Material';
            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            args.maps.layers[0].markerSettings[0].template = '<div id="marker1"><img class="markerTemplate" alt="weather clear" src="@Url.Content("~/Content/Maps/weather-clear.png")"/>' +
                '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[0].dataSource = [ { Name: 'Perth', latitude: -31.950527, longitude: 115.860457, Temperature: 31.6 } ];
            args.maps.layers[0].markerSettings[1].template = '<div id="marker1"><img class="markerTemplate" alt="weather cloud" src="@Url.Content("~/Content/Maps/weather-clouds.png")"/>' +
                '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[1].dataSource = [ { Name: 'Adelaide', latitude: -34.928499, longitude: 138.600746, Temperature: 28.5 } ];
            args.maps.layers[0].markerSettings[2].template = '<div id="marker1"><img class="markerTemplate" alt="weather clear" src="@Url.Content("~/Content/Maps/weather-clear.png")"/>' +
                '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[2].dataSource = [ { Name: 'Townsville', latitude: -19.2589635, longitude: 146.8169483, Temperature: 31.3 } ];
            args.maps.layers[0].markerSettings[3].template = '<div id="marker1"><img class="markerTemplate" alt="weather rain" src="@Url.Content("~/Content/Maps/weather-rain.png")"/>' +
                '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[3].dataSource = [ { Name: 'Sydney', latitude: -33.868820, longitude: 151.209296, Temperature: 26.4 } ];
            args.maps.layers[0].markerSettings[4].template = '<div id="marker1"><img class="markerTemplate" alt="weather clear" src="@Url.Content("~/Content/Maps/weather-clear.png")"/>' +
                '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[4].dataSource = [ { Name: 'Alice Springs', latitude: -23.698042, longitude: 133.880747, Temperature: 36.4 }, ];
            args.maps.layers[0].markerSettings[5].template = '<div id="marker1"><img class="markerTemplate" alt="weather cloud" src="@Url.Content("~/Content/Maps/weather-clouds.png")"/>'
                + '<p>{{:Name}}:{{:Temperature}}°C</p></div>';
            args.maps.layers[0].markerSettings[5].dataSource = [ { Name: 'Brisbane', latitude: -27.469771, longitude: 153.025124, Temperature: 29.1 } ];
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample indicates the temperature of various cities of Australia in marker templates.
        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Marker template in ASP.NET MVC Maps control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to place a template as a marker in the map. Any custom HTML elements can be used as a marker. You can use the <code>palette</code> property in the <code>shapeSettings</code> to apply desired fill colors for the shapes.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Maps component features are segregated into individual feature-wise modules. To use a marker template, inject the <code>Marker</code> module using the <code>Maps.Inject(Marker)</code> method.
        </p>
    </div>
}


@section Title{
                    <title>ASP.NET MVC Maps Marker template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Marker template in ASP.NET MVC Maps Control</h1>
                }