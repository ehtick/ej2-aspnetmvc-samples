@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@section ControlsSection{
    <style>
        #control-container {
            padding: 0px !important;
        }

        #range > * {
            padding: 0px !important;
        }

        .slider-content-wrapper {
            width: 40%;
            margin: 0 auto;
            min-width: 185px;
        }

        .slider-userselect {
            -webkit-user-select: none;
            /* Safari 3.1+ */
            -moz-user-select: none;
            /* Firefox 2+ */
            -ms-user-select: none;
            /* IE 10+ */
            user-select: none;
            /* Standard syntax */
        }

        .slider-labeltext {
            text-align: -webkit-left;
            font-weight: 500;
            font-size: 13px;
            padding-bottom: 10px;
        }

        .slider_container {
            margin-top: 40px;
        }

        .e-bigger .slider-content-wrapper {
            width: 80%;
        }

        #height_slider .e-tab-handle::after {
            background-color: #f9920b;
        }

        #height_slider.e-control.e-slider .e-slider-track {
            height: 8px;
            top: calc(50% - 4px);
            border-radius: 0;
        }

        .highcontrast #height_slider.e-control.e-slider .e-slider-track {
            height: 10px;
            top: calc(50% - 5px);
            border-radius: 0;
        }

        .fabric .slider_container .e-slider-hover .e-slider-track, .fabric .slider_container .e-slider-container:active .e-slider-track,
        .fabric .slider_container .e-slider-container .e-slider .e-tab-track {
            background-color: #c8c8c8;
        }

        #gradient_slider.e-control.e-slider .e-range {
            height: 6px;
            top: calc(50% - 3px);
            border-radius: 5px;
            background: linear-gradient(to top left, #f9f9f9 25%, #f9920b 90%);
        }

        .fabric .slider_container .e-slider-hover .e-slider-track,
        .fabric .slider_container .e-slider-container:active .e-slider-track,
        .fabric .slider_container .e-slider-container .e-slider .e-tab-track {
            background-color: #c8c8c8;
        }

        #gradient_slider.e-control.e-slider .e-slider-track {
            height: 8px;
            top: calc(50% - 4px);
            border-radius: 5px;
        }

        .fabric input[type="checkbox"].zoomCheckbox, .fabric-dark input[type="checkbox"].zoomCheckbox {
            margin-top: 18px;
        }

        input[type="checkbox"].zoomCheckbox {
            margin-top: 15px;
        }

        #slideText {
            margin-top: 5px;
            width: 67px;
        }

        .bootstrap5 #slideText {
            width: 55px;
        }

        #sliderText {
            margin-top: -5px;
        }
    </style>
    <div class="col-md-9 control-section">
        <div>
            @Html.EJS().Maps("container").Load("onMapLoad").ZoomSettings(new Syncfusion.EJ2.Maps.MapsZoomSettings
           {
               Enable = true,
               MouseWheelZoom = true,
               PinchZooming = true
           }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>
   {
       new Syncfusion.EJ2.Maps.MapsLayer
       {
           ShapeData = ViewData["ShapeData"],
           DataSource = ViewData["DataSource"],
           ShapePropertyPath = "continent",
           ShapeDataPath = "continent",
           ShapeSettings = new MapsShapeSettings
           {
               ColorValuePath = "color"
           }
       }}).Render()
        </div>
    </div>
    <div class="col-md-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
			<tbody>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Zooming</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" checked="" id="zoom" style=" margin-left: 10px;">
					</td>
				</tr>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Panning</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" checked="" id="panning" style=" margin-left: 10px;">
					</td>
				</tr>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Mouse wheel zoom</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" checked="" id="mousewheel" style=" margin-left: 10px;">
					</td>
				</tr>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Pinch zoom</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" checked="" id="pinch" style=" margin-left: 10px;">
					</td>
				</tr>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Single click zoom</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" id="singletap" style=" margin-left: 10px;">
					</td>
				</tr>
				<tr style="height: 50px">
					<td style="width: 50%">
						<div style="margin-left: -10px;">Double click zoom</div>
					</td>
					<td>
						<input class="zoomCheckbox" type="checkbox" id="doubletap" style=" margin-left: 10px;">
					</td>
				</tr>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div id="sliderText" style="margin-left: -10px;">Animation duration </div>
                    </td>
                    <td>
                        <div id="range" style="width: 100%"></div>
                    </td>
                    <td>
                        <div id="slideText" style="text-align:center; padding: 0px; padding-left: 10px;">
                            <span id='dur'>500 ms</span>
                        </div>
                    </td>
                </tr>
			</tbody>
        </table>
    </div>

    <script type="text/javascript">
        var maps;
	var isLoad = false;
        function onMapLoad(args) {
            if (!maps) {
                args.maps.layers[0].animationDuration = 500;
            }
            maps = args.maps;
	    if (!isLoad) {
		isLoad = true;
                var theme = themeName ? themeName : 'Material';
                args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
                args.maps.zoomSettings.toolbarSettings.buttonSettings.toolbarItems = ['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'];
	    }
        }

        var sliderChange;
        var slider = new ej.inputs.Slider({
            value: 500,
            min: 0, max: 1000, step: 250,
            change: sliderChange
        }, '#range');
        slider.change = sliderChange = function (e) {
            maps.layers[0].animationDuration = e.value;
            maps.refresh();
            document.getElementById('dur').innerHTML = e.value.toString() + ' ms';
        };

        document.getElementById('mousewheel').onchange = function () {
            var element = (document.getElementById('mousewheel'));
            maps.zoomSettings.mouseWheelZoom = element.checked;
            maps.refresh();
        };
        document.getElementById('pinch').onchange = function () {
            var element = (document.getElementById('pinch'));
            maps.zoomSettings.pinchZooming = element.checked;
            maps.refresh();
        };
        document.getElementById('zoom').onchange = function () {
            var element = (document.getElementById('zoom'));
            maps.zoomSettings.enable = element.checked;
            maps.refresh();
        };
		document.getElementById('panning').onchange = function () {
			var element = (document.getElementById('panning'));
			maps.zoomSettings.enablePanning = element.checked;
			maps.refresh();
		};
        document.getElementById('doubletap').onchange = function () {
            var element = (document.getElementById('doubletap'));
            maps.zoomSettings.doubleClickZoom = element.checked;
            var ele1 = document.getElementById('singletap');
            if (element.checked) {
                ele1.disabled = true;
            }
            else {
                ele1.disabled = false;
            }
        };
        document.getElementById('singletap').onchange = function () {
            var element = (document.getElementById('singletap'));
            var ele1 = document.getElementById('doubletap');
            maps.zoomSettings.zoomOnClick = element.checked;
            if (element.checked) {
                ele1.disabled = true;
            }
            else {
                ele1.disabled = false;
            }
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample depicts the zooming and panning options in the maps. You can customize these options by changing the Zooming, Panning, Mouse wheel zoom, Pinch zoom, Single-click zoom, and Double-click zoom in the Properties panel.
        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Zooming & Panning in ASP.NET MVC Maps control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to zoom and pan the map. The support has been provided for zooming with the toolbar, rectangle zoom, pinch zoom, mouse wheel zoom, single-click, and double-click zoom. Panning can be enabled or disabled using
            the Panning option. When it is disabled, the map will switch to zooming mode.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Maps component features are segregated into individual feature-wise modules. To use the zooming feature, inject the <code>zoom</code> module using the <code>Maps.Inject(zoom)</code> method.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Maps Zooming & Panning Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Zooming & Panning in ASP.NET MVC Maps Control</h1>
                }
