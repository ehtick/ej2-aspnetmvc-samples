@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@{
    List<object> markerData = new List<object>();
    markerData.Add(new { latitude = 35.6379762, longitude = -97.4823761 });
    markerData.Add(new { latitude = 35.5676663, longitude = -97.5128031 });
    markerData.Add(new { latitude = 35.5412361, longitude = -97.601552 });
    markerData.Add(new { latitude = 35.5451471, longitude = -97.5661039 });
    markerData.Add(new { latitude = 35.5120376, longitude = -97.5918531 });
    markerData.Add(new { latitude = 35.5112516, longitude = -97.5843 });
    markerData.Add(new { latitude = 35.4737072, longitude = -97.5158072 });
    markerData.Add(new { latitude = 35.4575239, longitude = -97.6179457 });
    markerData.Add(new { latitude = 35.4362676, longitude = -97.5998354 });
    markerData.Add(new { latitude = 35.3954872, longitude = -97.5962305 });
    markerData.Add(new { latitude = 35.3492258, longitude = -97.5294113 });
    markerData.Add(new { latitude = 35.5260794, longitude = -98.7032318 });
    markerData.Add(new { latitude = 34.7827916, longitude = -98.3001709 });
    markerData.Add(new { latitude = 34.0793936, longitude = -98.5583496 });
    markerData.Add(new { latitude = 36.1434199, longitude = -97.0690155 });
    markerData.Add(new { latitude = 36.0170318, longitude = -96.11063 });
    markerData.Add(new { latitude = 36.1608845, longitude = -96.0205078 });
    markerData.Add(new { latitude = 36.1323292, longitude = -95.9624863 });
    markerData.Add(new { latitude = 36.1317746, longitude = -95.9046364 });
    markerData.Add(new { latitude = 36.1604341, longitude = -95.8885002 });

    List<object> markerData2 = new List<object>();
    markerData2.Add(new { latitude = 35.5112516, longitude = -97.5843, text = "10/18 ATMs" });

    List<object> markerData3 = new List<object>();
    markerData2.Add(new { latitude = 36.0808845, longitude = -96.0205078, text = "5/18 ATMs" });
}
@section ControlsSection{
    <style>
        #container {
            display: table;
            margin: 0 auto;
        }
    </style>
    <div class="control-section">
        <div id="outer" style="width:100%">
            <div style="width:500px;margin:0 auto;padding-bottom:10px">
                <div style="text-align:center;">
                    <div style="padding-left:30px;font-size:18px;font-weight:400;">ATM locations in Oklahoma, USA</div>
                </div>
            </div>
            @Html.EJS().Maps("container").Load("mapLoad").CenterPosition(new MapsCenterPosition { Latitude = 35.65, Longitude = -97.3 }).ZoomSettings(new Syncfusion.EJ2.Maps.MapsZoomSettings
   {
       Enable = false,
       ZoomFactor = 2.5
   }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>{
       new Syncfusion.EJ2.Maps.MapsLayer
       {
           ShapeData = ViewData["ShapeData"],
           ShapeSettings = new MapsShapeSettings
           {
               Fill = "#F5F5F5",
               Border = new MapsBorder{ Width = 1 , Color = "#EEDA97", Opacity = 1 },
           },
           MarkerSettings = new List<Syncfusion.EJ2.Maps.MapsMarker>
           {
               new Syncfusion.EJ2.Maps.MapsMarker
               {
                   Visible = true, Height = 20,Width = 20,Shape = Syncfusion.EJ2.Maps.MarkerType.Image,
                   Fill = "#000080", AnimationDuration = 0, DataSource = markerData
               },
               new Syncfusion.EJ2.Maps.MapsMarker
               {
                   AnimationDuration = 0,Visible = true,Shape = Syncfusion.EJ2.Maps.MarkerType.Circle,
                   Width = 130,Height = 130, Fill = "rgba(70,130,180,0.3)", DataSource = markerData2,
                   Border = new Syncfusion.EJ2.Maps.MapsBorder
                   {
                       Color = "transparent"
                   },
                   TooltipSettings = new MapsTooltipSettings{ Visible = true, ValuePath = "text" }
               },
               new Syncfusion.EJ2.Maps.MapsMarker
               {
                    AnimationDuration = 0,Visible = true,Shape = Syncfusion.EJ2.Maps.MarkerType.Circle,
                   Width = 130,Height = 130, Fill = "rgba(70,130,180,0.3)", DataSource = markerData3,
               },
               new Syncfusion.EJ2.Maps.MapsMarker
               {
                   Visible = true,Template = "<div style='color: black;'>{{:name}}</div>"
               }
           }
        }}).Render()
        </div>
        <div style="margin-left:75%">
            Source:
            <a href="https://www.google.co.in/maps/search/atm+in+oklahoma/" rel="nofollow" target="_blank" aria-label="google">www.google.co.in/maps</a>
        </div>
    </div>

    <script type="text/javascript">
        function mapLoad(sender) {
            var theme = themeName ? themeName : 'Material';
            sender.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
            sender.maps.layers[0].markerSettings[0].imageUrl = '@Url.Content("~/Content/Maps/ballon.png")';
            sender.maps.layers[0].markerSettings[3].dataSource = [
                            {
                                longitude: -101.9450281, latitude: 35.2018863, name: 'Amarillo'
                            },
                            {
                                longitude: -98.0971969, latitude: 35.5514624, name: 'El Reno'
                            },
                            {
                                longitude: -97.8432238, latitude: 35.5150073, name: 'Yukon'
                            },
                            {
                                longitude: -97.2557752, latitude: 35.4933852, name: 'Harrah'
                            },
                            {
                                longitude: -97.1019391, latitude: 35.3620257, name: 'Shawnee'
                            },
                            {
                                longitude: -97.072877, latitude: 35.6853011, name: 'Wellston'
                            },
                            {
                                longitude: -96.2093353, latitude: 36.133417, name: 'Lotsee'
                            },
                            {
                                longitude: -96.3077788, latitude: 36.1879088, name: 'Sand Springs'
                            },
                            {
                                longitude: -98.7075369, latitude: 35.931371, name: 'Oakwood'
                            },
                            {
                                longitude: -98.0003367, latitude: 35.0403272, name: 'Chickasha'
                            },
                            {
                                longitude: -97.1836494, latitude: 36.4595554, name: 'Red Rock'
                            },
                            {
                                longitude: -96.7148021, latitude: 35.4859752, name: 'Prague'
                            },
                            {
                                longitude: -97.9339651, latitude: 36.1022835, name: 'Hennessey'
                            },
                            {
                                longitude: -96.2595621, latitude: 35.2453183, name: 'Wetumka'
                            },
                            {
                                longitude: -97.4499583, latitude: 35.0304344, name: 'Purcell'
                            },
                            {
                                longitude: -96.1059044, latitude: 35.605942, name: 'Okmulgee'
                            },
                            {
                                longitude: -97.9684792, latitude: 35.8439429, name: 'Kingfisher'
                            },
                            {
                                longitude: -95.7691956, latitude: 34.9332303, name: 'McAlester'
                            },
                            {
                                longitude: -96.1289978, latitude: 34.3853794, name: 'Atoka'
                            },
                            {
                                longitude: -97.1191406, latitude: 34.5042932, name: 'Davis'
                            },
                            {
                                longitude: -98.3564758, latitude: 36.7542898, name: 'Cherokee'
                            },
                            {
                                longitude: -95.3695679, latitude: 35.7476268, name: 'Muskogee'
                            },
                            {
                                longitude: -95.582428, latitude: 35.2871057, name: 'Eufaula'
                            },
                            {
                                longitude: -96.9412994, latitude: 36.0446575, name: 'Mehan'
                            },
                            {
                                longitude: -99.0925598, latitude: 35.0299964, name: 'Hobart'
                            },
                            {
                                longitude: -98.4924316, latitude: 33.9137338, name: 'Wichita Falls'
                            },
                            {
                                longitude: -98.9675903, latitude: 35.5154609, name: 'Clinton'
                            },
                            {
                                longitude: -98.923645, latitude: 36.1478557, name: 'Seiling'
                            },
                            {
                                longitude: -99.2985535, latitude: 36.1500735, name: 'Vici'
                            },
                            {
                                longitude: -95.3173828, latitude: 36.3084855, name: 'Pryor'
                            },
                            {
                                longitude: -96.7524719, latitude: 34.9596836, name: 'Konawa'
                            }
            ];
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample depicts the ATM populated areas in Oklahoma by highlighting the regions.
        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Highlighted region in ASP.NET MVC Maps control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to highlight some specific region by rendering circles. Any custom HTML element can be used as a marker.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Maps component features are segregated into individual feature-wise modules. To use marker template, you need to inject <code>Marker</code> module using the <code>Maps.Inject(Marker)</code> method.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Maps Highlighted region Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Highlighted region in ASP.NET MVC Maps Control</h1>
                }