@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@section ControlsSection{

    <div class="popup" id="closepopup">
        <span id='closebutton'>x</span>
        <table style="margin-top:5px;width:auto">
            <tr>
                <td align="left" style="padding:0.3px">
                    <label id="winner" style="color:#666666;font-size:12px;font-family:Roboto;font-weight:700;"></label>
                </td>
            </tr>
            <tr style="border-top:1px solid #CCCCCC">
                <td align="left" style="padding:0.3px;padding-top:0.5em;">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;">State</label>
                </td>
                <td align="left" style="padding:0.3px;padding-top:0.5em;">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px">:</label>
                </td>
                <td align="left" style="padding:0.3px;padding-top:0.5em;">
                    <label id="state" style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px"></label>
                </td>
            </tr>
            <tr>
                <td align="left" style="padding:0.3px">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;white-space:nowrap">Trump</label>
                </td>
                <td align="left" style="padding:0.3px">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px">:</label>
                </td>
                <td align="left" style="padding:0.3px">
                    <label id="trumpvotes" style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px"></label>
                </td>
            </tr>
            <tr>
                <td align="left" style="padding:0.3px">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;white-space:nowrap">Clinton</label>
                </td>
                <td align="left" style="padding:0.3px">
                    <label style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px">:</label>
                </td>
                <td align="left" style="padding:0.3px">
                    <label id="clintonvotes" style="color:#575757;font-size:12px;font-family:Roboto;font-weight:400;margin-left:8px"></label>
                </td>
            </tr>
        </table>
    </div>
    <style type="text/css">
        .tip {
            border: 1px solid #4D4D4D;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
            border-radius: 7px;
            margin-right: 25px;
            min-width: 110px;
            padding-top: 9px;
            padding-right: 10px;
            padding-left: 10px;
            width: auto;
            height: auto;
            background: #4D4D4D;
        }

        .popup {
            border: 0.5px groove #CCCCCC;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
            left: 70%;
            top: 60%;
            border-radius: 2px;
            display: none;
            max-width: 220px;
            position: absolute;
            padding: 1em;
            background: #F4F4F4;
            z-index: 1000;
        }

        .close-btn {
            border: 2px solid #5B5B5B;
            margin-left: -9px;
            position: absolute;
            opacity: 0.8;
            background-color: #605F61;
            border-radius: 50%/50%;
            width: 20px;
            height: 19px;
            display: none;
            z-index: 1000;
        }

            .close-btn a {
                margin-left: 2px;
                font-weight: bold;
                color: white;
                text-decoration: none;
            }

        #closebutton {
            float: right;
            font-size: 16px;
            display: inline-block;
            padding: 2px 5px;
            cursor: pointer;
            color: black;
        }

        .firstLine td {
            border-bottom: 2px solid black;
        }

        #container {
            display: table;
            margin: 0 auto;
        }
    </style>

    <div class="control-section">
        <div id="outer" style="width:100%">
            @Html.EJS().Maps("container").Load("mapLoad").ItemSelection("itemSelection").TitleSettings(new Syncfusion.EJ2.Maps.MapsTitleSettings
   {
       Text = "USA Election Results - 2016",
       TextStyle = new MapsFont{ Size = "16px", Opacity = 1 }
   }).LegendSettings(new Syncfusion.EJ2.Maps.MapsLegendSettings
   {
       Visible = true,
       Mode = Syncfusion.EJ2.Maps.LegendMode.Interactive,
       Position = Syncfusion.EJ2.Maps.LegendPosition.Top,
       Width = "80%",
       TextStyle = new MapsFont{ FontWeight = "400", Size = "14px" }
   }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>
   {
       new Syncfusion.EJ2.Maps.MapsLayer
       {
           ShapeData = ViewData["ShapeData"],
           ShapePropertyPath = "name",
           ShapeDataPath = "State",
           DataSource =  ViewData["DataSource"],
           TooltipSettings = new MapsTooltipSettings
           {
               Visible = true, ValuePath = "State"
           },
           HighlightSettings = new MapsHighlightSettings{ Enable = true, Fill="#A3B0D0" },
           SelectionSettings = new MapsSelectionSettings{ Enable = true, Fill = "#4C515B", Opacity = 1 },

           ShapeSettings = new MapsShapeSettings
           {
               Fill = "#E5E5E5",
                ColorValuePath="Candidate",
               ColorMapping = (List<MapsColorMapping>)ViewData["ColorMapping"]
           }
       }}).Render()
            <div style="margin-left:75%">
                Source:
                <a href="https://en.wikipedia.org/wiki/United_States_presidential_election,_2016" rel="nofollow" target="_blank" aria-label="wikipedia">en.wikipedia.org</a>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        function mapLoad(args) {
            var theme = themeName ? themeName : 'Material';
            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');
        }

        function itemSelection(args) {
            if (args.shapeData !== ej.base.isNullOrUndefined) {
                var matched = navigator.userAgent;
                var browser = matched.toLowerCase();
                var isIE11 = !!navigator.userAgent.match(/Trident\/7\./);
                if (isIE11) {
                    browser = 'msie';
                }
                var object = args.data;
                var popup = document.getElementById('closepopup');
                var closebutton = document.getElementById('closebutton');
                var winner = document.getElementById('winner');
                var state = document.getElementById('state');
                var trumpvote = document.getElementById('trumpvotes');
                var clintonvote = document.getElementById('clintonvotes');
                popup.style.display = 'block';
                closebutton.style.display = 'block';
                closebutton.style.left = '206px';
                closebutton.style.top = '-15px';
                closebutton.onclick = function () {
                    var popup = document.getElementById('closepopup');
                    var closebutton = document.getElementById('closebutton');
                    popup.style.display = 'none';
                    closebutton.style.display = 'none';
                };
                if (browser !== 'mozilla') {
                    state.innerText = args.data.State;
                    winner.innerText = args.data.Candidate;
                    trumpvote.innerText = args.data.Trump + '%';
                    clintonvote.innerText = args.data.Clinton + '%';
                }
                else {
                    state.textContent = args.data.State;
                    winner.textContent = args.data.Candidate;
                    trumpvote.textContent = args.data.Trump + '%';
                    clintonvote.textContent = args.data.Clinton + '%';
                }
            }
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes USA president election results in the year 2016. Vote details of a state will be displayed in a popup on clicking a state. Placed interactive legend at the top of the map.
        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Selection & Highlight in ASP.NET MVC Maps control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to apply various styles for a shape in the map, when it is clicked or mouse hovered.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Maps component features are segregated into individual feature-wise modules. To use selection, inject the <code>Selection</code> module using the <code>Maps.Inject(Selection)</code> method, and use highlight by injecting the <code>Highlight</code> module.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Maps Selection & Highlight Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection & Highlight in ASP.NET MVC Maps Control</h1>
                }