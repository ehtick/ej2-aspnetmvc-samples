@using Syncfusion.EJ2
@using Syncfusion.EJ2.BlockEditor


@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div class="sample-container">
                <div class="default-section">
                    @Html.EJS().BlockEditor("api-blockeditor").Created("onCreated").Blocks((List<Block>)ViewData["BlockDataAPI"]).Focus("onFocus").Render()
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div id="property" title="Properties">
            <table id="property" title="Properties">
                <tbody>
                    <tr>
                        <td>
                            <div>ReadOnly </div>
                        </td>
                        <td>
                            <div style="padding-top: 0;padding-left: 0;">
                                @Html.EJS().CheckBox("readonly").Change("readOnlyChange").Checked(false).Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Enable Drag and Drop </div>
                        </td>
                        <td>
                            <div style="padding-top: 0;padding-left: 0;">
                                @Html.EJS().CheckBox("enableDragDrop").Change("EnableDragDropChange").Checked(true).Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="getJson" class="btn btn-default">Get JSON Data</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="getHtml" class="btn btn-default">Get HTML Data</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="getBlockCount" class="btn btn-default">Get Block Count</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="selectall" class="btn btn-default">Select All Blocks</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="focusIn" class="btn btn-default">Focus In</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="focusOut" class="btn btn-default">Focus Out</button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <div>
                                <button id="print" class="btn btn-default">Print</button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    @*custom code start*@
    <style>
        .blockeditor-api {
            height: 600px;
            width: 60vw;
            margin: 0 auto;
        }

        @@media only screen and (max-width: 750px) {
            .blockeditor-api {
                width: 100%;
            }
        }
    </style>
    @*custom code end*@
}

@section PreScripts {
    <script>
        var blockEditorObj;
        var focusedBlock;

        function onCreated() {
            blockEditorObj = ej.base.getInstance(document.getElementById('api-blockeditor'), ejs.blockeditor.BlockEditor);
        }

        function onFocus(args) {
            focusedBlock = args.blockId;
        }

        function readOnlyChange(args) {
            blockEditorObj.readOnly = args.checked;
        }

        function EnableDragDropChange(args) {
            blockEditorObj.enableDragAndDrop = args.checked;
        }

        document.getElementById('getJson').onclick = function () {
            var jsonData = blockEditorObj.getDataAsJson(focusedBlock);
            alert(JSON.stringify(jsonData, null, 2));
        };

        document.getElementById('getHtml').onclick = function () {
            var htmlData = blockEditorObj.getDataAsHtml();
            alert(htmlData);
        };

        document.getElementById('getBlockCount').onclick = function () {
            alert('Total blocks: ' + blockEditorObj.getBlockCount());
        };

        document.getElementById('selectall').onclick = function () {
            blockEditorObj.selectAllBlocks();
        };

        document.getElementById('print').onclick = function () {
            blockEditorObj.print();
        };

        document.getElementById('focusIn').onclick = function () {
            blockEditorObj.focusIn();
        };

        document.getElementById('focusOut').onclick = function () {
            blockEditorObj.focusOut();
        };
    </script>
}

@section Meta {
    <meta name="description" content="This example demonstrates the API's' in ASP.NET Core Block Editor control. Explore here for more details." />
}

@section ActionDescription {
    <div id="action-description">
        <p>This sample demonstrates the usage of API in Block Editor. Use the properties panel to change read-only mode, enable/disable drag and drop, enable HTML encode, get JSON data, get block count, select all blocks, and control focus.</p>
    </div>
}

@section Description {
    <div id="description">
        <p>In this demo, you can explore the API behaviors by:</p>
        <ul>
            <li>Click the <code>readOnly</code> checkbox to enable/disable editable and non-editable mode of the Block Editor.</li>
            <li>Click the <code>enableDragDrop</code> checkbox to enable/disable drag and drop functionality.</li>
            <li>Click the <code>getJsonData</code> button to display the focused block JSON data in an alert window.</li>
            <li>Click the <code>getHtmlData</code> button to display the editor content as HTML in an alert window.</li>
            <li>Click the <code>getBlockCount</code> button to display the total number of blocks in an alert window.</li>
            <li>Click the <code>selectAllBlocks</code> button to select all content in the editor.</li>
            <li>Click the <code>focusIn</code> button to focus the editor.</li>
            <li>Click the <code>focusOut</code> button to remove focus from the editor.</li>
            <li>Click the <code>print</code> button to preview the content before printing from the editor.</li>
        </ul>
    </div>
}
@section Title{
    <title>ASP.NET MVC BlockEditor API's Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of API's in ASP.NET MVC BlockEditor Control</h1>
}