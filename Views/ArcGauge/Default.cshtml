@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge

@section ControlsSection{
    <style>
        .titleText {
            font-family: inherit;
            margin-top: 7px;
            font-size: 22px;
        }        
        .tailwind3 div.titleText, .tailwind3-dark div.titleText {
            margin-top: 0px;
            font-size: 22px;
        }
        .material div.titleText, .material-dark div.titleText, .bootstrap-dark div.titleText,
        .bootstrap div.titleText, .bootstrap4 div.titleText, .fabric div.titleText,
        .fabric-dark div.titleText {
            margin-top: 14px;
        }
        .annotationText {
            font-family: inherit;
            font-size: 18px;
            font-family: inherit;
        }
    </style>
    <style type="text/css" media="screen and (max-width:420px)">
        .annotationText {
            font-size: 12px;
            font-family:inherit;
        }
        .titleText {
            margin-top: 7px;
            font-size: 15px;
        }
    </style>
    <div class="control-section" align="center">
        @Html.EJS().CircularGauge("container").Height("500px").Title("Female (% usage) on popular social network").TitleStyle(Ts => Ts.Size("18px").FontFamily("inherit").FontWeight("inherit")).Load("gaugeLoad").Axes(axes => axes
            .Radius("100%").StartAngle(0).EndAngle(270).Minimum(0).Maximum(100).LabelStyle(ls => ls.Position(Position.Inside).Font((CircularGaugeFont)ViewData["labelFont"]).Offset(-5))
            .Pointers(pt => pt.Radius("0%").Cap(cp => cp.Radius(0).Border(br => br.Width(0))))
            .LineStyle(lin => lin.Width(0))
            .MinorTicks(mi => mi.Width(0.0).Color("Transparent")).MajorTicks(mj => mj.Width(0.0).Color("Transparent"))
            .Annotations((List<CircularGaugeAnnotation>)ViewData["Annotations"])
            .Ranges((List<CircularGaugeRange>)ViewData["Ranges"]).Add()).Render()
    </div>
    <script type="text/javascript">
        function gaugeLoad(sender) {
            var selectedTheme = themeName ? themeName : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/-high/i, 'High').replace(/contrast/i, 'Contrast').replace(/5.3/i, '5');

            if (selectedTheme.indexOf("tailwind") != -1) {
                sender.gauge.axes[0].annotations[0].angle = 342;
                sender.gauge.axes[0].annotations[0].radius = "92%";
                sender.gauge.axes[0].annotations[1].angle = 337;
                sender.gauge.axes[0].annotations[1].radius = "80%";
                sender.gauge.axes[0].annotations[2].angle = 337;
                sender.gauge.axes[0].annotations[2].radius = "65%";
                sender.gauge.axes[0].annotations[3].angle = 326;
                sender.gauge.axes[0].annotations[3].radius = "55%";
                sender.gauge.axes[0].annotations[4].angle = 323;
                sender.gauge.axes[0].annotations[4].radius = "39%";
                sender.gauge.axes[0].annotations[5].angle = 192;
                sender.gauge.axes[0].annotations[5].radius = "91%";
                sender.gauge.axes[0].annotations[9].angle = 136;
                sender.gauge.axes[0].annotations[9].radius = "34%";
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows the arc gauge's default rendering. It also shows the most popular social media platforms and the percentage of female users.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC Arc Gauge control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render a default arc gauge. The arc gauge helps in the visualization of numerical values of scales in a semi-circular manner. You can use <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeAxis.html" aria-label="Axes">Axes<span class="sr-only">opens in a new tab</span></a>, <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeRange.html" aria-label="Ranges">Ranges<span class="sr-only">opens in a new tab</span></a> and <a target="_blank" href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.CircularGauge.CircularGaugeAnnotation.html" aria-label="Annotations">Annotations<span class="sr-only">opens in a new tab</span></a> oriented properties to customize the default appearance of the arc gauge.
        </p>
        <p>
            More information on the arc gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/circular-gauge/getting-started" aria-label="documentation section" >documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@section Title{
    <title>ASP.NET MVC Arc Gauge Default Functionalities Example - Syncfusion Demos </title>
}

@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC Arc Gauge Control</h1>
}
