@using Syncfusion.EJ2.Inputs
@using Syncfusion.EJ2
@section ControlsSection{
<div class="col-lg-8 control-section">
        <div class="content-wrapper">
            <div class="control-label">
                Numeric TextBox
            </div>
            @Html.EJS().NumericTextBox("range").Value(15).Min(10).Max(100).Render()
        </div>
    </div>
<div class="col-lg-4 property-section">
    <table id="property" title="Properties">
        <tr>
            <td>
                <div>Min Value </div>
            </td>
            <td>
                <div>
                    <input id="min" type="number" class="form-control" value="10" />
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>Max Value </div>
            </td>
            <td>
                <div>
                    <input id="max" type="number" class="form-control" value="100" />
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>Increment Step </div>
            </td>
            <td>
                <div>
                    <input id="step" type="number" max="100" min="0" class="form-control" value="1" />
                </div>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <div>
                    @Html.EJS().Button("buttonApply").CssClass("e-flat e-primary").Content("Apply").Render()
                </div>
            </td>
        </tr>
    </table>
</div>
    @*custom code start*@
    <style>
        #property {
            padding: 0px 10px 10px 0;
        }

    .content-wrapper {
        width: 48%;
        margin: 0 auto;
        min-width: 185px;
    }

    .e-float-input.e-numeric.e-input-group {
        margin-top: 40px;
    }

    #buttonApply {
        float: right;
        text-transform:uppercase;
    }

    .control-label {
        padding: 24px 0px 10px 0px;
        font-size: 12px;
    }

     .highcontrast #min,
    .highcontrast #max,
    .highcontrast #step {
        background-color: rgb(0, 0, 0);
        color: rgb(255, 255, 255);;
    }

    .material3-dark #min,
    .material3-dark #max,
    .material3-dark #step,
    .material-dark #min,
    .material-dark #max,
    .material-dark #step {
        background-color: rgba(0, 0, 0, 0);
        color: rgb(255, 255, 255);
    }

    .fabric-dark #min,
    .fabric-dark #max,
    .fabric-dark #step {
        background-color: rgb(32, 31, 31);
        color: rgb(218, 218, 218);
    }

    .bootstrap-dark #min,
    .bootstrap-dark #max,
    .bootstrap-dark #step {
        background-color: rgb(26, 26, 26);
        color: rgb(240, 240, 240);
    }

    .bootstrap5-dark #min,
    .bootstrap5-dark #max,
    .bootstrap5-dark #step {
        background-color: rgb(33, 37, 41);
        color: rgb(255, 255, 255);
    }

    .tailwind-dark #min,
    .tailwind-dark #max,
    .tailwind-dark #step,
    .tailwind3-dark #min,
    .tailwind3-dark #max,
    .tailwind3-dark #step {
        background-color: rgb(31, 41, 55);
        color: rgb(255, 255, 255);
    }

    .fluent-dark #min,
    .fluent-dark #max,
    .fluent-dark #step,
    .fluent2-dark #min,
    .fluent2-dark #max,
    .fluent2-dark #step,
    .fluent2-highcontrast #min,
    .fluent2-highcontrast #max,
    .fluent2-highcontrast #step {
        background-color: rgb(27, 26, 25);
        color: rgb(255, 255, 255);
    }
</style>
    @*custom code end*@
}
@section Scripts {
<script type="text/javascript">
    document.getElementById('buttonApply').onclick = function () {
        var numeric = document.getElementById("range").ej2_instances[0];
        var min = parseFloat(document.getElementById('min').value);
        var max = parseFloat(document.getElementById('max').value);
        var step = parseFloat(document.getElementById('step').value);
        numeric.min = min;
        numeric.max = max;
        numeric.step = isNaN(step) ? 1 : step;
    };
</script>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Range Validation in ASP.NET MVC Numeric Textbox control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the range validation functionalities of the Numeric TextBox. Change the min, max and step values and click on apply button to change the property values in Numeric TextBox.
        </p>
    </div>
}
@section Description{
   <div id="description">
    <p>
        The NumericTextBox has the options to restrict the input value between a specific range using the
        <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.NumericTextBox.html#Syncfusion_EJ2_Inputs_NumericTextBox_Min" target="_blank" aria-label="min">min<span class="sr-only">opens in a new tab</span></a>,
        <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.NumericTextBox.html#Syncfusion_EJ2_Inputs_NumericTextBox_Max" target="_blank" aria-label="max">max<span class="sr-only">opens in a new tab</span></a>, and
        <a href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Inputs.NumericTextBox.html#Syncfusion_EJ2_Inputs_NumericTextBox_StrictMode" target="_blank" aria-label="strictMode">strictMode<span class="sr-only">opens in a new tab</span></a> properties.
 </p>
    <ul>
        <li>
            When you enable the <b>strictMode</b> property, the value will automatically change within a range on passing
            the out-of-range values.
        </li>
        <li>
            When you disable the <b>strictMode</b> property, the NumericTextBox component allows the out-of-range value with the highlighted
            textbox to indicate the given value is wrong.
        </li>
    </ul>
    <p>
        In this demo, numeric textbox is restricted between 10 to 100 through the min and max properties. So you can enter only the value between
        this range.
    </p>
    <p>
        More information on the range validation configuration can be found in the
        <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/numerictextbox/getting-started-mvc.html#range-validation" target="_blank" aria-label="documentation section"> documentation section<span class="sr-only">opens in a new tab</span></a>.
    </p>
</div>

}





@section Title{
                    <title>ASP.NET MVC Numeric Textbox Range Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Range Validation in ASP.NET MVC Numeric Textbox Control</h1>
                }