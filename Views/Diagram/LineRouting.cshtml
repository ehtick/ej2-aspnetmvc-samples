@section ControlsSection {
    <div class="control-section">
        @(Html.EJS().Diagram("diagram").Width("100%").Height("600px").GetNodeDefaults("getNodeDefaults").Constraints(Syncfusion.EJ2.Diagrams.DiagramConstraints.Default | (Syncfusion.EJ2.Diagrams.DiagramConstraints.Bridging | Syncfusion.EJ2.Diagrams.DiagramConstraints.LineRouting)).SnapSettings(s => s.Constraints(Syncfusion.EJ2.Diagrams.SnapConstraints.None))
                    .GetConnectorDefaults("getConnectorDefaults").Nodes((List<Syncfusion.EJ2.Diagrams.DiagramNode>)ViewData["nodes"]).Connectors((List<Syncfusion.EJ2.Diagrams.DiagramConnector>)ViewData["connectors"]).Created("diagramCreated").Render())
    </div>

    <script>
        function getNodeDefaults(node) {
            node.height = 50;
            if (node.id === 'decision') {
                node.height = 70;
            }
            node.width = 120;
            node.style = { strokeColor: 'transparent' };
            return node;
        }

        function getConnectorDefaults(connector) {
            connector.type = 'Orthogonal';
            connector.style = { strokeColor: '#707070 ', strokeWidth: 1.25 };
            connector.targetDecorator = { style: { fill: '#707070 ', strokeColor: '#707070 ' } };
            return connector;
        }
        function diagramCreated() {
            var diagram = document.getElementById('diagram').ej2_instances[0];
            setTimeout(() => {
                diagram.fitToPage();
            }, 100);
        }

    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the connectors that are automatically re-routing or moving away if any shape found on the connectors path.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Line Routing in ASP.NET MVC Diagram control. Explore here for more details."/>
                }
@section Description{
    <p>
        This example shows how the connectors are automatically re-routing or moving away on dragging a shape near it. This can be achieved by the <code>Constraints</code> property of the diagram and connector.
    </p>
}

@section Title{
                    <title>ASP.NET MVC Diagram Line Routing Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Line Routing in ASP.NET MVC Diagram Control</h1>
                }