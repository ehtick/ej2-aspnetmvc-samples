@using Syncfusion.EJ2.Diagrams;
@section ControlsSection{
    <div class="control-section" style="padding:0px">
        <div style="text-align:center">
            @(Html.EJS().Diagram("diagram-container").Width("100%").Height("580px").Created("create").SnapSettings(s => s.Constraints(Syncfusion.EJ2.Diagrams.SnapConstraints.None))
                .Nodes((List<DiagramNode>)ViewData["nodes"]).Render()
            )
        </div>
    </div>
    <style>
        #diagram-container {
            display: block;
        }
    </style>
    <script>
        function create() {
            var diagram = document.getElementById("diagram-container").ej2_instances[0];
            setTimeout(() => {
                diagram.fitToPage();
            }, 100);
            diagram.tool = ej.diagrams.DiagramTools.ZoomPan;
            diagram.dataBind();
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes classifications of data science using Venn diagrams. Diagram nodes and annotations are used to define Venn diagrams. Read only mode is enabled in this example.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Venn Diagram in ASP.NET MVC Diagram control. Explore here for more details."/>
                }
@section Description{
    <p>
        This example shows how to create a Venn diagram using diagram control. In this example, zoom and pan options are enabled.
        The <code>tool</code> property of the diagram control allows you to enable/disable zoom and pan options.
    </p>
    <br>
}



@section Title{
                    <title>ASP.NET MVC Diagram Venn Diagram Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Venn Diagram in ASP.NET MVC Diagram Control</h1>
                }