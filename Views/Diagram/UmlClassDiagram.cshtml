@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Diagrams;
@using Syncfusion.EJ2.Navigations;
@section ControlsSection{
    <div class="control-section diagram-class-container">
        <div id="umlClassDiagram" style="width: 100%; height: 521px">
            <div class="sb-mobile-palette-bar">
                <div id="palette-icon" style="float: right;" role="button" class="diagram-activity-icons e-toggle-palette"></div>
            </div>
            <div id="palette-space" class="sb-mobile-palette">
                @(Html.EJS().SymbolPalette("symbolPalette").Palettes((List<SymbolPalettePalette>)ViewData["Palette"]).GetSymbolInfo("getSymbolInfo").ExpandMode(ExpandMode.Multiple).Width("100%").Height("700px")
                     .SymbolMargin(new SymbolPaletteMargin() { Left = 10, Right = 10, Top = 10, Bottom = 10 }).SymbolHeight(90).SymbolWidth(90)
                     .GetNodeDefaults("getSymbolDefaults").Render()
                  )
            </div>
            <div id="diagram-space" class="sb-mobile-diagram">
                @(Html.EJS().Diagram("diagram").Width("100%").Height("700px").GetNodeDefaults("getNodeDefaults").GetConnectorDefaults("getConnectorDefaults").Created("created").DragEnter("dragEnter").SetNodeTemplate("setNodeTemplate").Nodes((List<DiagramNode>)ViewData["nodes"])
                        .Connectors((List<DiagramConnector>)ViewData["connectors"]).Render()
                  )
            </div>
        </div>
    </div>


    <style>

        /* These styles are used for aligning palette and diagram */
        .diagram-class-container .sb-mobile-palette {
            width: 240px;
            float: left;
        }

        .diagram-class-container .sb-mobile-palette-bar {
            display: none;
        }

        .diagram-class-container .sb-mobile-diagram {
            width: calc(100% - 242px);
            float: left;
            border: 1px solid rgba(0, 0, 0, 0.12);
            border-left: none;
        }

        @@media (max-width: 550px) {

            .diagram-class-container .sb-mobile-palette {
                z-index: 19;
                position: absolute;
                display: none;
                transition: transform 300ms linear, visibility 0s linear 300ms;
                width: 39%;
                height: 100%;
            }

            .diagram-class-container .sb-mobile-palette-bar {
                display: block;
                width: 100%;
                background: #fafafa;
                padding: 10px 10px;
                border: 0.5px solid #e0e0e0;
                min-height: 40px;
            }

            .diagram-class-container .sb-mobile-diagram {
                width: 100%;
                float: left;
                left: 0px;
            }

            .diagram-class-container #palette-icon {
                font-size: 20px;
            }
        }

        .diagram-class-container .sb-mobile-palette-open {
            position: absolute;
            display: block;
            right: 15px;
        }
        @@font-face {
            font-family: 'diagram-activity-icons';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmdC1P4gAAAcgAAAAwaGVhZBJhohMAAADQAAAANmhoZWEIVQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAYAAAAAAHAAAAABm1heHABDgAUAAABCAAAACBuYW1lm+wy9gAAAfgAAAK1cG9zdLnsYngAAASwAAAAMAABAAAEAAAAAFwEAAAAAAAD+AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAAgNcenF8PPPUACwQAAAAAANelrs4AAAAA16WuzgAAAAAD+AN6AAAACAACAAAAAAAAAAEAAAACAAgAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAGAAAAAIAAAAAA/gDegACAAcAACUhCQEhATUhAQQC9P6G/YoBMQFF/YqGAjf+hgH0QwAAAAAAEgDeAAEAAAAAAAAAAQAAAAEAAAAAAAEAEwABAAEAAAAAAAIABwAUAAEAAAAAAAMAEwAbAAEAAAAAAAQAEwAuAAEAAAAAAAUACwBBAAEAAAAAAAYAEwBMAAEAAAAAAAoALABfAAEAAAAAAAsAEgCLAAMAAQQJAAAAAgCdAAMAAQQJAAEAJgCfAAMAAQQJAAIADgDFAAMAAQQJAAMAJgDTAAMAAQQJAAQAJgD5AAMAAQQJAAUAFgEfAAMAAQQJAAYAJgE1AAMAAQQJAAoAWAFbAAMAAQQJAAsAJAGzIERpYWdyYW1fU2hhcGVzX0ZPTlRSZWd1bGFyRGlhZ3JhbV9TaGFwZXNfRk9OVERpYWdyYW1fU2hhcGVzX0ZPTlRWZXJzaW9uIDEuMERpYWdyYW1fU2hhcGVzX0ZPTlRGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAUgBlAGcAdQBsAGEAcgBEAGkAYQBnAHIAYQBtAF8AUwBoAGEAcABlAHMAXwBGAE8ATgBUAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAVgBlAHIAcwBpAG8AbgAgADEALgAwAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAdQBzAGkAbgBnACAAUwB5AG4AYwBmAHUAcwBpAG8AbgAgAE0AZQB0AHIAbwAgAFMAdAB1AGQAaQBvAHcAdwB3AC4AcwB5AG4AYwBmAHUAcwBpAG8AbgAuAGMAbwBtAAAAAAIAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgECAQMABlNoYXBlcwAA) format('truetype');
            font-weight: normal;
            font-style: normal;
        }
        .diagram-activity-icons {
            font-family: 'diagram-activity-icons';
            speak: none;
            font-size: 16px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .diagram-activity-icons.e-toggle-palette::before {
            content: "\e700"
        }

        .material #umlClassDiagram #palette-space .e-accordion {
            border: none;
        }

        .material #umlClassDiagram #palette-space {
            border: 1px solid rgba(0, 0, 0, 0.12);
        }

        .bootstrap #umlClassDiagram .sb-mobile-diagram {
            height: calc(100% - 17px);
            margin-top: 5px;
            border-radius: 4px;
            border-left: 1px solid rgba(0, 0, 0, 0.12);
        }

        .fabric #umlClassDiagram .sb-mobile-diagram {
            border-left: 1px solid rgba(0, 0, 0, 0.12);
        }
    </style>
    <script>
        //Set node default properties.
        function getNodeDefaults(obj, diagram) {
            obj.style = { fill: '#26A0DA', strokeColor: 'white' };
            return obj;
        }

        //Set connector default properties.
        function getConnectorDefaults(connector, diagram) {
            return connector;
        }

        //Set an annotation style at runtime.
        function setNodeTemplate(node) {
            if (node.annotations.length > 0) {
                for (var i = 0; i < node.annotations.length; i++) {
                    node.annotations[i].style.color = 'white';
                }
            }
        }

        function dragEnter(args) {
            if (args.element instanceof ej.diagrams.Connector) {
                args.element.targetPoint.x += 100;
                args.element.targetPoint.y += 20;
            }
        }
        function created() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            setTimeout(() => {
                diagram.fitToPage();
            }, 100);
        }

        function getSymbolDefaults(symbol, diagram) {
            symbol.width = 100; symbol.height = 100;
        }

        function getSymbolInfo(symbol) {
            return { fit: true, description: { text: symbol.id, }, tooltip: symbol.addInfo ? symbol.addInfo.tooltip : symbol.id };
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample represents the hospital management system using diagram's built-in UML class diagram shapes.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the UML Class Diagram in ASP.NET MVC Diagram control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            This example shows how to create class shapes using diagram <code>UMLClass</code> shapes. The <code>type</code> property of the
            <code>shape</code> can be used to create <code>UMLClass</code> nodes. The <code>shape</code> property of the shape allows you to create UML
            Class shapes.
        </p>
        <br />
    </div>
}


@section Title{
    <title>ASP.NET MVC Diagram UML Class Diagram Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of UML Class Diagram in ASP.NET MVC Diagram Control</h1>
}
