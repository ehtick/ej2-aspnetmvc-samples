@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Diagrams;
@using Syncfusion.EJ2.DropDowns;
@using Syncfusion.EJ2.Navigations;
@section ControlsSection{
    <div class="control-section diagram-scrolling-container">
        <div style="width: 100%;">

            <div class="sb-mobile-palette-bar">
                <div id="palette-icon" style="float: right;" role="button" class="diagram-scrolling-icons e-toggle-palette"></div>
            </div>
            <div id="palette-space" class="sb-mobile-palette" style="width:20%;float:left">
                @(Html.EJS().SymbolPalette("symbolPalette").Palettes((List<SymbolPalettePalette>)ViewData["palettes"]).GetSymbolInfo("getSymbolInfo").ExpandMode(ExpandMode.Single).Width("100%").Height("700px")
                    .SymbolMargin(new SymbolPaletteMargin() { Left = 15, Right = 15, Top = 15, Bottom = 15 }).SymbolHeight(60).SymbolWidth(60)
                    .GetNodeDefaults("getSymbolNodes").Render()
                )
            </div>
            <div id="diagram-space" class="sb-mobile-diagram" style="width:59%;float:left">
                @(Html.EJS().Diagram("diagram").Width("100%").Height("700px").RulerSettings(r => r.ShowRulers(true)).Created("diagramCreated").ScrollSettings(s => s.ScrollLimit(Syncfusion.EJ2.Diagrams.ScrollLimit.Infinity)).PageSettings(pe => pe.Width(1500).Height(1500))
         .GetNodeDefaults("getNodeDefaults").GetConnectorDefaults("getConnectorDefaults").Render()
                )
            </div>
            <div id="properties" style="width:20%;float:right">
                <div class="property-panel-header">
                    Properties
                </div>
                <div class="row db-prop-row">

                    <div class="col-xs-5 db-col-right db-prop-text-style" style="padding-top: 14px">
                        <span class="db-prop-text-style db-spacing-text">Scroll Limit</span>
                    </div>
                    <div class="col-xs-7 db-col-left" style="padding-top: 10px;padding-right: 0px;">
                        <div class="db-text-input">
                            @Html.EJS().DropDownList("scrollLimit").Index(0).Change("valueChange").DataSource(
                            (IEnumerable<object>)ViewData["data"]).Change("valueChange").Fields(new DropDownListFieldSettings { Text = "text", Value = "value" }).Render()
                        </div>
                    </div>
                </div>
                <div id="scrollableDiv">
                    <div class="property-panel-header">
                        Scrollable Area
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6" style="padding-right: 15px;width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span class="texstyle" style="display: block;">X</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("scrollAreaX").Placeholder("10").Value("10").Change("scrollAreaXChange").Render()
                            </div>
                        </div>
                    </div>

                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6" style="padding-right: 15px;width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span class="texstyle" style="width: fit-content;">Y</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("scrollAreaY").Placeholder("10").Value("10").Change("scrollAreaYChange").Render()
                            </div>
                        </div>
                    </div>

                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-left" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span class="texstyle">Width</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("widthTextBox").Placeholder("1500").Value("1500").Change("widthTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-right" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span class="texstyle">Height</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px">
                                @Html.EJS().TextBox("heightTextBox").Placeholder("1500").Value("1500").Change("heightTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                </div>
                <div style="padding-top:5px;margin-top: 20px;">
                    <div style="float:left">Enable AutoScroll</div>
                    <div style="float: left;margin-left: 10px;">
                        @Html.EJS().CheckBox("checked").Checked(true).Change("onChange").Render()
                    </div>
                </div>
                <div id="autoScrollDiv" style="margin-top: 30px">
                    <div class="property-panel-header">
                        AutoScroll border
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-left" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span>Left</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("leftTextBox").Placeholder("30").Value("30").Change("leftTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-right" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span>Top</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("topTextBox").Placeholder("30").Value("30").Change("topTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-left" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span>Right</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("rightTextBox").Placeholder("30").Value("30").Change("rightTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="padding-top: 15px;">
                        <div class="col-xs-6 db-col-right" style="width: 150px;">
                            <div style="width:40%;float:left;margin-top: 5px;">
                                <span>Bottom</span>
                            </div>
                            <div style="width:60%;float:right;padding-left: 20px;">
                                @Html.EJS().TextBox("bottomTextBox").Placeholder("30").Value("30").Change("bottomTextBoxChange").Render()
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <style>
       
        /* style yo align the text in property panel*/
        .texstyle {
            display: table;
            padding-right: 10px;
            padding-left: 0px;
            width: 50%;
            padding-top: 5px;
            float: left;
            position: relative;
            min-height: 1px;
        }

        .text {
            text-align: center;
        }

        .e-basic::before {
            content: "\e726";
        }

        .e-flow::before {
            content: "\e724";
        }

        .e-connector::before {
            content: "\e725";
        }
        /* style to align the proerty panel*/
        .db-text {
            float: left;
            width: 20px;
            text-align: center;
            height: auto;
            margin-top: 4px;
            color: #8C8C8C;
        }

        .db-text-input {
            width: calc(100% - 25px);
            padding: 2px 2px 0px 0px;
        }

            .db-text-input input {
                width: 100%;
                height: 100%;
                border: none;
            }

        .disabledbutton {
            pointer-events: none;
            opacity: 0.4;
        }

        #container {
            display: block;
        }

        #symbolPalette {
            display: block;
        }
    </style>
    <style>
        @@font-face {
            font-family: 'diagram-scrolling-icons';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmdC1P4gAAAcgAAAAwaGVhZBJhohMAAADQAAAANmhoZWEIVQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAYAAAAAAHAAAAABm1heHABDgAUAAABCAAAACBuYW1lm+wy9gAAAfgAAAK1cG9zdLnsYngAAASwAAAAMAABAAAEAAAAAFwEAAAAAAAD+AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAAgNcenF8PPPUACwQAAAAAANelrs4AAAAA16WuzgAAAAAD+AN6AAAACAACAAAAAAAAAAEAAAACAAgAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAGAAAAAIAAAAAA/gDegACAAcAACUhCQEhATUhAQQC9P6G/YoBMQFF/YqGAjf+hgH0QwAAAAAAEgDeAAEAAAAAAAAAAQAAAAEAAAAAAAEAEwABAAEAAAAAAAIABwAUAAEAAAAAAAMAEwAbAAEAAAAAAAQAEwAuAAEAAAAAAAUACwBBAAEAAAAAAAYAEwBMAAEAAAAAAAoALABfAAEAAAAAAAsAEgCLAAMAAQQJAAAAAgCdAAMAAQQJAAEAJgCfAAMAAQQJAAIADgDFAAMAAQQJAAMAJgDTAAMAAQQJAAQAJgD5AAMAAQQJAAUAFgEfAAMAAQQJAAYAJgE1AAMAAQQJAAoAWAFbAAMAAQQJAAsAJAGzIERpYWdyYW1fU2hhcGVzX0ZPTlRSZWd1bGFyRGlhZ3JhbV9TaGFwZXNfRk9OVERpYWdyYW1fU2hhcGVzX0ZPTlRWZXJzaW9uIDEuMERpYWdyYW1fU2hhcGVzX0ZPTlRGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAUgBlAGcAdQBsAGEAcgBEAGkAYQBnAHIAYQBtAF8AUwBoAGEAcABlAHMAXwBGAE8ATgBUAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAVgBlAHIAcwBpAG8AbgAgADEALgAwAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAdQBzAGkAbgBnACAAUwB5AG4AYwBmAHUAcwBpAG8AbgAgAE0AZQB0AHIAbwAgAFMAdAB1AGQAaQBvAHcAdwB3AC4AcwB5AG4AYwBmAHUAcwBpAG8AbgAuAGMAbwBtAAAAAAIAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgECAQMABlNoYXBlcwAA) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        .diagram-scrolling-icons {
            font-family: 'diagram-scrolling-icons';
            speak: none;
            font-size: 16px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        @@font-face {
            font-family: 'Bootstrap5 Diagram Builder';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        .diagram-scrolling-container .sb-mobile-palette {
            width: 240px;
            height: 100%;
            float: left;
        }

        .diagram-scrolling-container .sb-mobile-palette-bar {
            display: none;
        }

        .diagram-scrolling-container .sb-mobile-diagram {
            width: calc(100% - 242px);
            height: 100%;
            float: left;
        }

        @@media (max-width: 550px) {

            .diagram-scrolling-container .sb-mobile-palette {
                z-index: 19;
                position: absolute;
                display: none;
                transition: transform 300ms linear, visibility 0s linear 300ms;
                width: 39%;
                height: 100%;
            }

            .diagram-scrolling-container .sb-mobile-palette-bar {
                display: block;
                width: 100%;
                background: #fafafa;
                padding: 10px 10px;
                border: 0.5px solid #e0e0e0;
                min-height: 40px;
            }

            .diagram-scrolling-container .sb-mobile-diagram {
                width: 100%;
                height: 100%;
                float: left;
                left: 0px;
            }

            .diagram-scrolling-container #palette-icon {
                font-size: 20px;
            }
        }

        .diagram-scrolling-icons.e-toggle-palette::before {
            content: "\e700"
        }
    </style>
    <script>

        function getSymbolNodes(symbol) {
            var obj = symbol;
            if (obj.id === 'terminator' || obj.id === 'process') {
                obj.width = 80;
                obj.height = 40;
            }
            else if (obj.id === 'decision' || obj.id === 'document' || obj.id === 'preDefinedProcess' ||
                obj.id === 'paperTap' || obj.id === 'directData' || obj.id === 'multiDocument' || obj.id === 'data') {
                obj.width = 50;
                obj.height = 40;
            }
            else {
                obj.width = 50;
                obj.height = 50;
            }
            obj.style.strokeColor = '#757575';
        }


        function getSymbolInfo(symbol) {
            return { fit: true };
        }
        function getNodeDefaults(obj, diagram) {
            if (obj.width === undefined) {
                obj.width = 145;
            } else {
                var ratio = 100 / obj.width;
                obj.width = 100;
                obj.height *= ratio;
            }
            obj.style = { fill: '#357BD2', strokeColor: 'white' };
            return obj;
        }

        function getConnectorDefaults(obj, diagram) {
            if (obj.id === 'connector9') {
                obj.segments = [{ direction: 'Top', length: 120, type: 'Orthogonal' }];
            }
            if (obj.id === 'connector10') {
                obj.segments = [{ direction: 'Right', length: 100, type: 'Orthogonal' }];
            }

            if (obj.id.indexOf('connector') !== -1) {
                obj.type = 'Orthogonal';
                obj.targetDecorator = { shape: 'Arrow', width: 10, height: 10 };
            }
        }
        function valueChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            var element = document.getElementById('scrollableDiv');
            element.className = args.value === "Limited" ? "" : "disabledbutton";
            diagram.scrollSettings.scrollLimit = args.value;
        }
        function diagramCreated() {
            var element2 = document.getElementById('scrollableDiv');
            element2.className = "disabledbutton";
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.canAutoScroll = true;
            diagram.scrollSettings.autoScrollBorder = { left: 10, right: 10, top: 10, bottom: 10 };
            diagram.scrollSettings.scrollableArea = new ej.diagrams.Rect(0, 0, 1500, 1500);
            addEvents();
        }

        function addEvents() {
            var isMobile = window.matchMedia('(max-width:550px)').matches;
            if (isMobile) {
                var paletteIcon = document.getElementById('palette-icon');
                if (paletteIcon) {
                    paletteIcon.addEventListener('click', openPalette, false);
                }
            }
        }

        function scrollAreaXChange() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.scrollableArea.x = Number(args.value);
        }
        function scrollAreaYChange() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.scrollableArea.y = Number(args.value);
        }
        
        function widthTextBoxChange() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.scrollableArea.width = Number(args.value);
        }
        function heightTextBoxChange() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.scrollableArea.height = Number(args.value);
        }
        function onChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            var element4 = document.getElementById('autoScrollDiv');
            if (args.checked) {
                element4.className = '';
                diagram.scrollSettings.canAutoScroll = true;
            } else {
                element4.className = 'disabledbutton';
                diagram.scrollSettings.canAutoScroll = false;
            }
        }

        function leftTextBoxChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.autoScrollBorder.left = Number(args.value);
        }
        function topTextBoxChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.autoScrollBorder.top = Number(args.value);
        }
        function rightTextBoxChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.autoScrollBorder.right = Number(args.value);
        }
        function bottomTextBoxChange(args) {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.scrollSettings.autoScrollBorder.bottom = Number(args.value);
        }
    </script>

}
@section ActionDescription{
    <p>
        This example illustrates how to scroll a diagram using vertical and horizontal scrollbars. The scroll limit property helps limit the scrolling area.
    </p>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Connectors in ASP.NET MVC Diagram control. Explore here for more details." />
}
@section Description{
    <p>
        The scroll limit allows you to define the scrollable region of the Diagram while scrolling the page with a mouse.
    </p>
    <p>
        The scrollSettings <code>scrollLimit</code> property allows you to define the scrollable region of a Diagram. You may scroll inside the designated region if the scrollLimit is set to <code>limited</code>. When the scrollLimit is set to <code>Diagram</code>, you can scroll within the Diagram content. When the scrollLimit is set to <code>Infinity</code>, it allows infinite scrolling.
    </p>
    <p>
        The scrollSettings <code>autoScrollBorder</code> property is used to specify the distance from the edge of a control at which auto-scrolling should occur.
    </p>
    <br>
}



@section Title{
    <title>ASP.NET MVC Diagram Connectors Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Connectors in ASP.NET MVC Diagram Control</h1>
}




