@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This demo for Essential JS2 Heatmap shows switching the rendering mode of the heatmap cells between SVG and canvas rendering logics" />
}
@section ControlsSection{
    <div>
        <div class="col-md-8 control-section">
            <div class="content-wrapper">
                <div id="container" style="width:92%">
                    @Html.EJS().HeatMap("container").TitleSettings(ts => ts.Text("Net Migration Rate of Northern Europe From 1965 to 2015").TextStyle(ViewData["textStyle"])).XAxis(
                         xAxis =>
                         {
                             xAxis.LabelRotation(-90)
                             .LabelIntersectAction(Syncfusion.EJ2.HeatMap.LabelIntersectAction.None)
                             .Labels(ViewData["xLabels"]);
                         }).YAxis(yaxis => yaxis.Labels(ViewData["yLabels"])).LegendSettings(ls =>
                         ls.Position(Syncfusion.EJ2.HeatMap.LegendPosition.Bottom).Width("200px")).RenderingMode(Syncfusion.EJ2.HeatMap.DrawType.SVG).PaletteSettings(ps => ps.Palette(palette =>
                         {
                             palette.Color("#C06C84").Add();
                             palette.Color("#355C7D").Add();
                         })).CellSettings(cs =>
                         cs.Border(ViewData["border"]).ShowLabel(false).Format("{value} %")).Load("load").DataSource(ViewData["dataSource"]).Render()

                </div>
            </div>
        </div>

        <div class="col-md-4 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <tbody>
                    <tr style="height: 50px">
                        <td style="width: 60%">
                            <div>Rendering Mode:</div>
                        </td>
                        <td style="width: 40%;">
                            <div class="row">
                                <input id="svg" type="radio">
                            </div>
                            <div class="row">
                                <input id="canvas" type="radio">
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
        };
        var svgRadioButton = new ej.buttons.RadioButton({
            label: 'SVG', name: 'renderingmode',
            change: function () { valueXChange(); }, value: 'SVG', checked: true
        });
        svgRadioButton.appendTo('#svg');

        var canvasradioButton = new ej.buttons.RadioButton({
            label: 'Canvas', name: 'renderingmode',
            change: function () { valueXChange(); }, value: 'Canvas'
        });
        canvasradioButton.appendTo('#canvas');

        function valueXChange() {
            var heatMap = document.getElementById('container').ej2_instances[0];
            heatMap.renderingMode = svgRadioButton.checked ? 'SVG' : 'Canvas';
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the net migration rate for the northern European countries over the years. The data label is disabled in this sample, the tooltip displays the data point values.  In property panel, the options are available to change the rendering mode between Canvas and SVG means of radio button.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to change the rendering mode between <code>Canvas </code> and <code>SVG </code> types in Heatmap. You can change the rendering mode by using the <code>renderingMode </code> property.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
    <p style="font-weight: 500">Injecting Module</p>
    <p>
        Heatmap component features are segregated into individual feature-wise modules. To use a tooltip, inject the <code>Tooltip </code> module using the <code>Heatmap.Inject(Tooltip) </code> method, and use a legend by injecting the <code>Legend </code> module using the <code>Heatmap.Inject(Legend) </code> method.
    </p>
}
