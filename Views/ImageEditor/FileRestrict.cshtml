@{
    List<object> items = new List<object>();
    items.Add(new
    {
        text = "MB"
    });
    items.Add(new
    {
        text = "KB"
    });
}
@section ControlsSection{
   <div class="col-lg-12 control-section">
       <div class="ie-file-restrict">
            <div class="e-img-editor-dropdown-container">
                <label>Size As</label><br />
                @Html.EJS().DropDownButton("dropdownbtn").Content("KB").Items(@items).Select("onSelectSizeUnit").BeforeItemRender("beforeItemRender").Render()
            </div>
            <div class="e-img-editor-numeric-textbox-container">
                <label>Minimum Size</label>
                <br />
                @Html.EJS().NumericTextBox("minFileSize").Value(1).Min(1).Width("150px").Change("updateMinFileSize").Render()
            </div>
            <div class="e-img-editor-numeric-textbox-container">
                <label>Maximum Size</label>
                <br />
                @Html.EJS().NumericTextBox("maxFileSize").Value(100).Min(1).Width("150px").Change("updateMaxFileSize").Render()
            </div>
            <div class="e-img-editor-dropdown-container">
                <label>Allowed Extensions</label><br />
                @Html.EJS().MultiSelect("allowedExtensions").DataSource("fileExtensionsList").Fields(f => f.Text("Name").Value("Value")).Mode(Syncfusion.EJ2.DropDowns.VisualMode.CheckBox).ShowSelectAll(true).Value(new string[] { "jpeg", "jpg", "png", "svg", "webp", "bmp" }).Change("updateAllowedExtensions").Width("180px").Render()
            </div>
        </div>
        <div class="e-img-editor-sample">
            @Html.EJS().ImageEditor("image-editor").UploadSettings(us => us.MinFileSize(1 * 1024).MaxFileSize(100 * 1024).AllowedExtensions(".jpeg, .jpg, .png, .svg, .webp, .bmp")).Render()
        </div>
   </div>

   <script>
       var fileExtensionsList = [
            { Name: "JPEG", Value: "jpeg" },
            { Name: "JPG", Value: "jpg" },
            { Name: "PNG", Value: "png" },
            { Name: "SVG", Value: "svg" },
            { Name: "WebP", Value: "webp" },
            { Name: "BMP", Value: "bmp" }
        ];

        var uploadSettings = {
            minFileSize: 1,
            maxFileSize: 100,
            allowedExtensions: [".jpeg", ".jpg", ".png", ".svg", ".webp", ".bmp"]
        };

        function updateMinFileSize(args) {
            if (args && args.value >= 0) {
                uploadSettings.minFileSize = args.value;
                updateUploadSettings();
            }
        }

        function updateMaxFileSize(args) {
            if (args && args.value >= uploadSettings.minFileSize) {
                uploadSettings.maxFileSize = args.value;
                updateUploadSettings();
            }
        }

        function updateAllowedExtensions(args) {
            if (Array.isArray(args.value) && args.value.length > 0) {
                uploadSettings.allowedExtensions = args.value;
            } else {
                uploadSettings.allowedExtensions = ".jpeg, .jpg, .png, .svg, .webp, .bmp";
            }
            updateUploadSettings();
        }

        function updateUploadSettings() {
            var imgEditor = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
            imgEditor.uploadSettings = {
                minFileSize: convertToBytes(uploadSettings.minFileSize),
                maxFileSize: convertToBytes(uploadSettings.maxFileSize),
                allowedExtensions: uploadSettings.allowedExtensions.join(", ")
            };
            imgEditor.dataBind();
        }

        function convertToBytes(value) {
            return value * (uploadSettings.fileSizeUnit === "MB" ? 1024 * 1024 : 1024);
        }

        function onSelectSizeUnit(args) {
            uploadSettings.fileSizeUnit = args.item.text;
            var drpDownbtn = ej.base.getComponent(document.getElementById('dropdownbtn'), 'dropdown-btn');
            drpDownbtn.content = uploadSettings.fileSizeUnit;
            drpDownbtn.dataBind();
            updateUploadSettings();
        }

        function beforeItemRender(args) {
            if (args.item.text === uploadSettings.fileSizeUnit) {
                args.element.classList.add('e-selected');
            }
        }

       function onScroll() {
            if (document.getElementById('image-editor_sliderWrapper')) {
                var slider = ej.base.getComponent(document.getElementById('image-editor_sliderWrapper'), 'slider');
                slider.refreshTooltip(slider.tooltipTarget);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
        var imageEditorEle = document.getElementById('image-editor');
            if (imageEditorEle) {
                var imageEditorObj = ej.base.getComponent(imageEditorEle, 'image-editor');
                if (imageEditorObj) {
                    imageEditorObj.refresh();
                }
            }
        });
    </script>
}


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the file restriction feature in the Image Editor component, which allows customization of file extensions, minimum and maximum file sizes, and drag-and-drop functionality.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            This sample highlights the enhanced configuration capabilities of the Image Editor component through the <b>UploadSettings</b> property. The following features are included:
        </p>
        <ul>
            <li><b>File Extensions</b>: Use a multi-select dropdown with checkboxes to dynamically choose the allowed file extensions. Supported values include <code>jpeg</code>, <code>jpg</code>, <code>png</code>, <code>svg</code>, <code>webp</code>, and <code>bmp</code>.</li>
            <li><b>File Size</b>: Two numeric textboxes are provided at the top of the page to set the minimum and maximum file sizes (in bytes). These values dynamically update the <code>uploadSettings</code> property.</li>
            <li><b>Dynamic Updates</b>: Changes made to the numeric textboxes or the dropdown options immediately reflect in the component's <code>uploadSettings</code>.</li>
            <li><b>Upload Settings</b>: Predefined settings include:
                <ul>
                    <li><b>Allowed Extensions</b>: <code>.jpeg</code>, <code>.png</code>, <code>.svg</code>, <code>.webp</code>, <code>.bmp</code></li>
                    <li><b>Minimum File Size</b>: 1 KB</li>
                    <li><b>Maximum File Size</b>: 100 KB</li>
                </ul>
            </li>
        </ul>
        <p>
            More information about ImageEditor can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/image-editor/getting-started"  aria-label="documentation section" > documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="Image Editor"/>
}

@*custom code start*@
<style>
    .ie-file-restrict {
        text-align: center;
        margin-bottom: 30px;
    }

    .e-img-editor-numeric-textbox-container,
    .e-img-editor-dropdown-container {
        display: inline-block;
        margin-right: 30px;
        text-align: left;
    }

    .image-editor {
        margin: 0 auto;
    }

    .e-img-editor-sample {
        height: 80vh;
        width: 100%;
    }

    .control-wrapper {
        height: 100%;
    }
    .e-img-editor-dropdown-container #dropdownbtn {
        font-weight: 400;
    }


    @@media only screen and (max-width: 700px) {
        .e-img-editor-sample {
            height: 75vh;
            width: 100%;
        }

        .e-img-editor-dropdown-container,
        .e-img-editor-numeric-textbox-container {
            display: block;
            margin-right: 0;
            margin-bottom: 20px;
            text-align: center;
        }
    }
</style>
@*custom code end*@

@section Title{
    <title>ASP.NET MVC ImageEditor File Restriction Example - Syncfusion Demos </title> 
}
@section Header{
    <h1 class='sb-sample-text'>Example of File Restriction in ASP.NET MVC ImageEditor Control</h1>
}
