@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="control_wrapper">
            <div class="tabs-wrap">
                <div class="wrap">
                    @Html.EJS().TimePicker("timepicker").ItemRender("itemRanderHandler").Value(ViewData["value"]).Render()
                </div>
            </div>
        </div>
    </div>
}

<script>
    //initial time variable declaration
    var startTime;

    //utilizing ItemEventArgs to access the beforeItemRender event argument
    function itemRanderHandler(args) {
        // inner element declaration for text
        var span = document.createElement('span');
        if (args.value.getHours() === 0 && args.value.getMinutes() === 0 && args.value.getSeconds() === 0) {
            //assign the initial value to the variable
            startTime = args.value;
        }
        //get the minutes details
        var minutes = (+args.value - +startTime) / 60000;
        //get the hours details
        var hours = parseInt('' + (minutes / 60), 10);
        var mins = (minutes % 60) / 6;
        //displayed text formation for each LI element.
        var minText;
        if (minutes === 0 || minutes === 30) {
            minText = minutes + ' mins';
        } else {
            minText = (mins > 0) ? ('.' + mins) : '';
        }
        span.innerHTML = ' (' + ((hours > 0) ? (hours + minText + ' hrs') : ('' + minText)) + ')';

        //disable the specific time from the selection
        if ((minutes / 60) % 3 === 0) {
            //disable the time values by addeding the e-disabled class.
            args.element.classList.add('e-disabled');
        }

        //append the custom SPAN element into LI element
        args.element.appendChild(span);
    }
</script>
    @*custom code start*@

<style>
    .control_wrapper {
        display: block;
        margin: 0 auto;
        max-width: 300px;
        padding: 5% 0;
    }

    .tabs-wrap {
        padding: 0 0px 10px;
    }

    .e-bigger .control-section {
        margin-top: 60px;
    }

    .e-custom-style.e-timepicker.e-popup li span {
        color: #b7b1b1;
    }
    body.bootstrap4 .e-custom-style.e-timepicker.e-popup li span {
        color: #6c757d;
    }

    body.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-disabled span {
        color: #adb5bd;
    }
    .highcontrast .e-custom-style.e-timepicker.e-popup li.e-hover span:hover,
    .highcontrast .e-custom-style.e-timepicker.e-popup li.e-active.e-hover span {
        color: #fff;
    }
    body.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-hover span:hover,
    body.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-active.e-hover span {
        color: #6c757d;
    }
    .highcontrast .e-custom-style.e-timepicker.e-popup li.e-active span {
        color: #000;
    }
    body.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-active span {
        color: #fff;
    }
    .e-custom-style.e-timepicker.e-popup li.e-disabled span {
        height: 25px;
        width: 25px;
        font-size: 15px;
    }
</style>
    @*custom code end*@



@section ActionDescription{
    <div id="action-description">
        <p>
           The following sample demonstrates the popup list element in specific time duration. Click/Touch the TimePicker popup icon to select the desired value.
        </p>
    </div>

}
@section Description{
    <div id="description">
        <p>
            The Formatting sample illustrates, how to format, disable or append the any HTML Element to the specific list item in a TimePicker
            component by using <code>itemRender</code> event. Also, the time interval value is displayed in list items and the time value
            <code>"12:00 AM"</code> , <code>"3:00 AM"</code>, <code>"6:00 AM"</code>, <code>"9:00 AM"</code>, <code>"12:00 PM"</code>,
            <code>"3:00 PM"</code>, <code>"6:00 PM"</code> and <code>"9:00 PM"</code> is disabled by adding the <code>e-disabled</code> class.
        </p>
        <p>
            More information about the TimePicker and it's configuration can be found in the
            <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/timepicker/getting-started-mvc/" target="_blank" aria-label="documentation section"> documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>

}

@section Meta{
                    <meta name="description" content="This example demonstrates the Time Duration in ASP.NET MVC TimePicker control. Explore here for more details."/>
                }

@section Title{
                    <title>ASP.NET MVC TimePicker Time Duration Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Time Duration in ASP.NET MVC TimePicker Control</h1>
                }