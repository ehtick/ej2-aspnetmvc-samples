@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.DropDowns
@section ControlsSection{
    <div class="control-section">
        <div class="control-wrapper">
            @Html.EJS().RichTextEditor("default").QuickToolbarSettings(e => { e.Table((object)ViewData["Table"]); e.Text((object)ViewData["Text"]); e.ShowOnRightClick(true); }).ToolbarSettings(e => e.Items((object)ViewData["Tools"])).FileManagerSettings(e => { e.Enable(true); e.Path("/Pictures/Food"); e.AjaxSettings((object)ViewData["AjaxSettings"]); }).ShowCharCount(true).Created("created").Value((string)ViewData["RTEValue"]).EnableXhtml(true).InsertImageSettings((Syncfusion.EJ2.RichTextEditor.RichTextEditorImageSettings)ViewData["InsertImageSettings"]).ImportWord((Syncfusion.EJ2.RichTextEditor.RichTextEditorImportWord)ViewData["ImportWord"]).ExportWord((Syncfusion.EJ2.RichTextEditor.RichTextEditorExportWord)ViewData["ExportWord"]).ExportPdf((Syncfusion.EJ2.RichTextEditor.RichTextEditorExportPdf)ViewData["ExportPdf"]).SlashMenuSettings((Syncfusion.EJ2.RichTextEditor.RichTextEditorSlashMenuSettings)ViewData["SlashMenuSettings"]).ActionBegin("actionBeginHandler").ActionComplete("actionCompleteHandler").EnableTabKey(true).Render()
            @Html.EJS().Mention("mention").Target("#default_rte-edit-view").Created("MentionCreated").SortOrder(SortOrder.Ascending).ItemTemplate("<div class=\"editor-mention-item-template\"><div class=\"em-header\"><div class=\"em-avatar\" style=\"background-color: ${BgColor}; color: ${Color}\"><div class=\"em-initial\">${Initial}</div></div></div><div class=\"em-content\"><div class=\"em-name\">${Name}</div><div class=\"em-email\">${Email}</div></div></div>").NoRecordsTemplate("No item related to the search").DisplayTemplate("<a href=mailto:${Name} title=${Email}> @${Name}</a>").PopupWidth("250px").PopupHeight("200px").DataSource((IEnumerable<EmailDatas>)ViewData["EmailData"]).Fields(new MentionFieldSettings { Text = "Name" }).Render()
        </div>
    </div>
    <link href="~/Content/RichTextEditor/codemirror.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/css/css.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/htmlmixed/htmlmixed.js" type="text/javascript"></script>

    <style>
        .e-rte-code-mirror-enabled .rte-code-mirror {
            display: block !important;
            /* To show the custom source code view. */
        }

        .e-rte-code-mirror-enabled .e-rte-content {
            display: none !important;
            /* To hide the editor area when custom source code enabled. */
        }

        /** Mention template styles **/
        .editor-mention-item-template {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: row;
            align-items: center;
        }

        .em-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .em-avatar {
            width: 32px;
            height: 32px;
            text-align: center;
            border-radius: 50%;
            font-size: 12px;
            font-weight: 500;
            text-indent: 0px;
            line-height: 13px;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .em-name {
            color: rgb(16, 24, 40);
            font-size: 14px;
            font-weight: 400;
            line-height: 14px;
            margin-bottom: 5px;
        }

        .em-email {
            color: gray;
            font-size: 12px;
            font-weight: 400;
            line-height: 14px;
        }

        #default_rte-edit-view_options li {
            padding: 10px !important;
            height: 60px;
        }

        body[class*="-dark"] .em-name {
            color: #fff !important;
        }

        /** custom source code styles **/
        body[class*="-dark"] .rte-code-mirror .cm-tag {
            color: #00ff00;
        }

        body[class*="-dark"] .rte-code-mirror .cm-string {
            color: blue;
        }

        body[class*="-dark"] .rte-code-mirror .cm-attribute {
            color: #f00;
        }

        body[class*="-dark"] .rte-code-mirror .CodeMirror-gutters,
        body[class*="-dark"] .rte-code-mirror .CodeMirror {
            background-color: transparent;
            color: #fff;
        }

        .sb-header {
            z-index: 100;
        }

        .sb-content.e-view.hide-header {
            top: 0 !important;
        }

        .sb-header.e-view.hide-header {
            display: none;
        }
    </style>
    <script type="text/javascript">
        var rteObj, myCodeMirror, mentionObj;
        function created() {
            rteObj = this;
        }
        function MentionCreated() {
            mentionObj = this;
        }
        function mirrorConversion(e) {
            const id = rteObj.getID() + 'mirror-view';
            const rteContainer = rteObj.element.querySelector('.e-rte-container');
            let mirrorView = rteObj.element.querySelector('#' + id);
            if (e.targetItem === 'Preview') {
                rteObj.value = myCodeMirror.getValue();
                rteObj.dataBind();
                rteContainer.classList.remove('e-rte-code-mirror-enabled');
                rteObj.focusIn();
            } else {
                rteContainer.classList.add('e-rte-code-mirror-enabled');
                rteContainer.classList.remove('e-source-code-enabled');
                let editorValue = rteObj.element.querySelector('.e-rte-srctextarea').value;
                if (!mirrorView) {
                    mirrorView = ej.base.createElement('div', { className: 'rte-code-mirror', id: id, styles: 'display: none;' });
                    rteContainer.appendChild(mirrorView);
                    renderCodeMirror(mirrorView, editorValue === null ? '' : editorValue);
                }
                else {
                    myCodeMirror.setValue(editorValue === null ? '' : editorValue);
                }
                myCodeMirror.focus();
            }
        }
        function renderCodeMirror(mirrorView, content) {
            myCodeMirror = CodeMirror(mirrorView, {
                value: content,
                lineNumbers: true,
                mode: 'text/html',
                lineWrapping: true,
            });
        }
        function handleFullScreen(e) {
            var sbCntEle = document.querySelector('.sb-content.e-view');
            var sbHdrEle = document.querySelector('.sb-header.e-view');
            var leftBar;
            var transformElement;
            if (ej.base.Browser.isDevice) {
                leftBar = document.querySelector('#right-sidebar');
                transformElement = document.querySelector('.sample-browser.e-view.e-content-animation');
            }
            else {
                leftBar = document.querySelector('.sb-left-pane');
                transformElement = document.querySelector('#right-pane');
            }
            if (e.targetItem === 'Maximize') {
                if (ej.base.Browser.isDevice && ej.base.Browser.isIos) {
                    ej.base.addClass([sbCntEle, sbHdrEle], ['hide-header']);
                }
                ej.base.addClass([leftBar], ['e-close']);
                ej.base.removeClass([leftBar], ['e-open']);
                if (!ej.base.Browser.isDevice) {
                    transformElement.style.marginLeft = '0px';
                }

                transformElement.style.transform = 'inherit';
                transformElement.style.zIndex = 1001;
            }
            else if (e.targetItem === 'Minimize') {
                if (ej.base.Browser.isDevice && ej.base.Browser.isIos) {
                    ej.base.removeClass([sbCntEle, sbHdrEle], ['hide-header']);
                }
                ej.base.removeClass([leftBar], ['e-close']);
                if (!ej.base.Browser.isDevice) {
                    ej.base.addClass([leftBar], ['e-open']);
                }
                transformElement.style.transform = 'translateX(0px)';
                transformElement.style.zIndex = "";
            }
        }
        function actionBeginHandler(e) {
            if (e.requestType === 'EnterAction' && mentionObj.element.classList.contains('e-popup-open')) {
                e.cancel = true;
            }
            if (e.requestType === 'Maximize' || e.requestType === 'Minimize') {
                handleFullScreen(e);
            }
        }
        function actionCompleteHandler(e) {
            if (e.targetItem && (e.targetItem === 'SourceCode' || e.targetItem === 'Preview')) {
                mirrorConversion(e);
            }
        }
    </script>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Overview in ASP.NET MVC Rich Text Editor control. Explore here for more details." />
}

@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the full features of Rich Text Editor that includes all the tools and functionalities.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>This sample used <code>Code mirror</code> plugins that helps to highlight the HTML content. When changes are made in code view, the same will be reflected in preview mode. </p>
        <p>The quick toolbar provides a convenient way to customize Image, Video, Audio, Table, and Link elements. Simply right-click on the desired element, utilizing the <code>ShowOnRightClick</code> property, and the quick toolbar will appear, providing an easy way for customization.</p>
        <p>The editor's toolbar includes tools for formatting content. The toolbar consists of:</p>
        <ul>
            <li><code>Lists</code> - NumberFormat list and BulletFormat list types.</li>
            <li><code>Links</code> - A hyperlink can be inserted into the editor for quick access to related information.</li>
            <li><code>Image</code> - Inserts and manages images.</li>
            <li><code>Table</code> - Inserts and manages Tables.</li>
            <li><code>Alignment</code> - Aligns the content with left, center, and right margins.</li>
            <li><code>Undo/Redo</code> - Allows undo/redo operations.</li>
            <li><code>Indent/ Outdent</code> - Increases/decreases the indent level of the content.</li>
            <li><code>Font</code> - Able to do styling on text like font family, size, fore color, and background color.</li>
            <li><code>Lower / Upper case</code> – Changes the casing of the selected text.</li>
            <li><code>Subscript / Superscript</code> - Makes the selected text as subscript (lower)/superscript(upper).</li>
            <li><code>FullScreen</code> - Stretches the editor to the maximum width and height of the browser window.</li>
            <li><code>Format</code> – Formats the sentence in different ways such as heading level, quotation, and code snippet.</li>
            <li><code>Styles</code> – Allows you to apply inline styles to the selected content like bold, italic, and more.</li>
            <li><code>Insert Emoticon</code> - Inserts the emoticon to the editor</li>
            <li><code>Audio</code> - Inserts and manages audios.</li>
            <li><code>Video</code> - Inserts and manages videos.</li>
            <li><code>Format Painter</code> - The Format Painter feature allows you to copy the formats and apply them to content without formatting thus saving time to reformat the content.</li>
            <li><code>Slash Menu</code> - The Slash Menu feature lets users apply formats, open dialogs by typing "/" in the editor.</li>
            <li><code>Import / Export</code> - The Import/Export feature enables users to import content from Word documents into the editor and export the editor's content into Word and PDF files.</li>
            <li><code>Inline Code</code> - Formats selected text as inline code, highlighting code snippets within the text.</li>
            <li><code>Code Block</code> - The Code Block feature allows you to insert and display blocks of code with preserved formatting and syntax highlighting, making it ideal for sharing code snippets clearly and accurately.</li>
            <li><code>Horizontal Line</code> - A horizontal line can be inserted into the editor to visually separate sections of content.</li>
            <li><code>Checklist</code> - Creates interactive lists with checkable items that users can mark as complete or incomplete.</li>
        </ul>
    </div>
}


@section Title{
    <title>ASP.NET MVC Rich Text Editor Overview Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Overview in ASP.NET MVC Rich Text Editor Control</h1>
}