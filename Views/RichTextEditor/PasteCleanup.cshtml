@using Syncfusion.EJ2
@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2.DropDowns
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="content-wrapper" id="all-option-sample">
            @Html.EJS().RichTextEditor("pasteCleanUp").ContentTemplate(@<text>
                <h4>Paste Cleanup in Rich Text Editor<br></h4><p>The Rich Text Editor automatically <strong>cleans up formatted content</strong> when you paste from external sources like Word, Google Docs, or web pages.</p><p><b>Paste Cleanup properties:</b></p><ul>
                    <li>
                        <strong>Prompt </strong>- specifies whether to enable the prompt when pasting in Rich Text Editor
                    </li>
                    <li>
                        <strong>Plain Text </strong>- specifies whether to paste as plain text or not in Rich Text Editor.
                    </li>
                    <li>
                        <strong>Keep Format</strong>- specifies whether to keep or remove the format when pasting in Rich Text Editor.
                    </li>
                    <li>
                        <strong>Denied Tags</strong> - specifies the tags to restrict when pasting in Rich Text Editor.
                    </li>
                    <li>
                        <strong>Denied Attributes</strong> - specifies the attributes to restrict when pasting in Rich Text Editor.
                    </li>
                    <li>
                        <strong>Allowed Style Properties</strong> - specifies the allowed style properties when pasting in Rich Text Editor.
                    </li>
                </ul><p><span><strong>Try It Out!</strong></span></p><p>Copy content from a web page or document and paste it here. The editor will display a prompt and allow you to input your options.</p>
            </text>).Created("created").PasteCleanupSettings(p => p.Prompt(true)).Render()
        </div>
    </div>

    <div class="col-lg-4 property-section" id="all-option-table">
        <div>
            <table id="property" title="Properties">
                <tbody>
                    <tr>
                        <td>
                            <div>Format Option </div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().DropDownList("format").PopupHeight("200px").Index(0).DataSource(
                    (IEnumerable<FormatOption>)ViewData["Data"]).Change("formatChange").Fields(new DropDownListFieldSettings { Text = "Format", Value = "Id" }).Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Denied Tags </div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().TextBox("deniedTags").Change("deniedTagsChange").Placeholder("'img[!href]'").Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Denied Attributes </div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().TextBox("deniedAttributes").Change("deniedAttrsChange").Placeholder("'id', 'title'").Render()
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Allowed Style Properties </div>
                        </td>
                        <td>
                            <div>
                                @Html.EJS().TextBox("allowedStyleProperties").Change("allowedStyleChange").Placeholder("'href', 'style'").Render()
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Paste from MS Word in ASP.NET MVC Rich Text Editor control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>This example demonstrates the paste cleanup feature of the Rich Text Editor control. Copy your content from MS Word or other website, and paste it within the editor to cleanup.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>The Rich Text Editor allows to paste the HTML content from MS Word or other websites. The editor cleanup the pasted HTML content by considering the following items.</p>
        <ul>
            <li>The unformatted HTML element (MOS XML format) content to standard HTML elements.</li>
            <li>The MS Office prefixed style properties is converted to proper CSS style properties.</li>
            <li>The unwanted tags, CSS styles, and comments are removed from the copied content.</li>
        </ul>
        <p>The following settings are available to cleanup the content in pasteCleanup settings property:</p>
        <ul>
            <li>Select any option in <code>Format Option</code> drop down list for the paste content.
                <ul>
                    <li>Select the <code>Prompt</code> option to invoke prompt dialog with paste options on pasting the content in editor.</li>
                    <li>Select the <code>Plain Text</code> option to paste the content as plain text.</li>
                    <li>Select the <code>Keep Format</code> option to keep the same format in the copied content.</li>
                    <li>Select the <code>Clean Format</code> option to remove the style format in the copied content.</li>
                </ul>
            </li>
            <li>Fill the <code>denied tags</code> text box to ignore the tags when pasting HTML content. For example:
                <ul>
                    <li><code>['a[!href]']</code> - paste the content by filtering anchor tags that donâ€™t have the 'href' attribute.</li>
                    <li><code>['a[href, target]']</code> - paste the content by filtering anchor tags that have the 'href' and 'target' attributes.</li>
                </ul>
            </li>
            <li>Fill the <code>denied attributes</code> to paste the content by filtering out these attributes from the content. For example:
                <ul>
                   <li><code>['id', 'title']</code> - This will remove the attributes 'id' and 'title' from all tags.</li>
                </ul>
            </li>
            <li>Fill the <code>allowed style properties</code> to paste the content by accepting these style attributes and removing other attributes. For example:
                <ul>
                   <li><code>['color', 'margin']</code> - This will allow only the style properties 'color' and 'margin' in each pasted element.</li>
                </ul>
            </li>
        </ul>
    </div>
}

<script>
    var rteObj;
    function created() {
        rteObj = this;
    }
    function formatChange() {
        if (format.value === 'Prompt') {
            rteObj.pasteCleanupSettings.prompt = true;
        } else if (format.value === 'Plain Text') {
            rteObj.pasteCleanupSettings.prompt = false;
            rteObj.pasteCleanupSettings.plainText = true;
        } else if (format.value === 'Keep Format') {
            rteObj.pasteCleanupSettings.prompt = false;
            rteObj.pasteCleanupSettings.plainText = false;
            rteObj.pasteCleanupSettings.keepFormat = true;
        } else if (format.value === 'Clean Format') {
            rteObj.pasteCleanupSettings.prompt = false;
            rteObj.pasteCleanupSettings.plainText = false;
            rteObj.pasteCleanupSettings.keepFormat = false;
        }
   }

    function deniedTagsChange(args) {
        onPasteCleanupSettingsChange(deniedTags.value, 'deniedTags');     
    }

    function deniedAttrsChange(args) {
        onPasteCleanupSettingsChange(deniedAttributes.value, 'deniedAttrs');
    }

    function allowedStyleChange(args) {
        onPasteCleanupSettingsChange(allowedStyleProperties.value, 'allowedStyleProps');
    }
    function onPasteCleanupSettingsChange(value, settingsProperty) {
        if (value) {
            var arrayValue = value.split(',').map(function (item) {
                return item.trim().replace(/^['"]|['"]$/g, '');
            });
            rteObj.pasteCleanupSettings[settingsProperty] = arrayValue.filter(function (prop) {
                return prop !== '';
            });
        }
    }
</script>

@section Title{
                    <title>ASP.NET MVC Rich Text Editor Paste from MS Word Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Paste from MS Word in ASP.NET MVC Rich Text Editor Control</h1>
                }