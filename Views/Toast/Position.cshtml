@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Notifications;
@using Syncfusion.EJ2.DropDowns;
@using Syncfusion.EJ2.Buttons;
@section ControlsSection{
    <div class="col-lg-12 control-section toast-pos-section">
        <div class="control_wrapper" id="toast_pos_target">
            @Html.EJS().Toast("toast_position").Title("Matt sent you a friend request").ContentTemplate(@<div>You have a friend request yet to accept.</div>).Icon("e-laura").Position(p => p.X("Right").Y("Bottom")).TimeOut(5000).Width(350).Close("onclose").BeforeOpen("onBeforeOpen").Created("onCreate").Render()
            <div id="toast_pos_property">
                <table style="width: 100%">
                    <tbody>
                        <tr>
                            <td>
                                <div style="padding:25px 0 0 0;">
                                    @Html.EJS().RadioButton("dropdownRadio").Label("Position").Name("toastPos").Value("Position").Change("checkboxChange2").Checked(true).Render()
                                </div>
                            </td>
                            <td>
                                <div style="padding:25px 0 0 0;">
                                    @Html.EJS().RadioButton("customRedio").Label("Custom").Name("toastPos").Value("Custom").Change("checkboxChange3").Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td id="dropdownChoose" colspan="2">
                                <div id="dropdown" style="padding-top:25px;">
                                    @Html.EJS().DropDownList("position").Placeholder("Select a position").PopupHeight("200px").Index(5).DataSource(
(IEnumerable<Position>)ViewData["Data"]).Change("valueChange").Fields(new DropDownListFieldSettings { Text = "Value", Value = "Value" }).Render()
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" id="customChoose" style="display: none">
                                <form id="formId" class="form-horizontal">
                                    <div class="e-row">
                                        <div class="e-float-input">
                                            <input class="e-input" id="xPos" name="Digits" value="50" digits="true" data-digits-message="Please enter digits only." required="">
                                            <span class="e-float-line"></span>
                                            <label class="e-float-text" for="Digits">X Position</label>
                                        </div>
                                    </div>
                                    <div class="e-row">
                                        <div class="e-float-input">
                                            <input class="e-input" id="yPos" name="Digits" value="50" digits="true" data-digits-message="Please enter digits only." required="">
                                            <span class="e-float-line"></span>
                                            <label class="e-float-text" for="Digits">Y Position</label>
                                        </div>
                                    </div>
                                </form>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div style="padding:25px 0 0 0;">
                                    @Html.EJS().RadioButton("radio1").Label("Target").Name("toast").Value("Target").Change("checkboxChange").Render()
                                </div>
                            </td>
                            <td>
                                <div style="padding:25px 0 0 0;">
                                    @Html.EJS().RadioButton("radio2").Label("Global").Name("toast").Value("Global").Checked(true).Change("checkboxChange1").Render()
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div id="toast_btn" style="padding-top: 25px">
                    @Html.EJS().Button("show_Toast").CssClass("e-btn e-control e-show-toast").Content("Show Toasts").Render()
                    @Html.EJS().Button("hideTosat").CssClass("e-btn e-control").Content("Hide All").Render()
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var toastObj;
        function toastShow(timeOutDelay) {
            setTimeout(function () {
                toastObj.show();
            }, timeOutDelay);
        }

        var btnEle = document.getElementById('show_Toast');
        var hideBtn = document.getElementById('hideTosat');
        btnEle.onclick = function () {
            if (customFlag) {
                setcustomPosValue();
            }
            toastObj.show();
        };

        document.getElementById('hideTosat').onclick = function () {
            toastObj.hide('All');
        };

        document.onclick = function (e) {
            if (e.target !== btnEle && toastObj.target === document.body) {
                toastObj.hide('All');
            }
        };

        function onCreate() {
            toastObj = this;
            setTimeout(() => {
                toastObj.show({ target: document.body });
            }, 500);
        }

        function onclose(e) {
            if (e.toastContainer.childElementCount === 0) {
                hideBtn.style.display = 'none';
            }
        }

        function onBeforeOpen() {
            hideBtn.style.display = 'inline-block';
        }
        var customFlag = false;

        function checkboxChange(e) {
            if (this.checked) {
                toastObj.hide('All');
                toastObj.target = '#toast_pos_target';
                toastShow(1000);
            }
        }

        function checkboxChange1(e) {
            if (this.checked) {
                toastObj.hide('All');
                toastObj.target = document.body;
                toastShow(1000);
            }
        }

        function checkboxChange2(e) {
            var listObj = document.getElementById('position').ej2_instances[0];
            if (this.checked) {
                toastObj.hide('All');
                document.getElementById('dropdownChoose').style.display = 'table-cell';
                document.getElementById('customChoose').style.display = 'none';
                setToastPosValue(listObj.value.toString()); customFlag = false; toastShow(1000);
            }
        }

        function checkboxChange3(e) {
            if (this.checked) {
                toastObj.hide('All');
                document.getElementById('dropdownChoose').style.display = 'none';
                document.getElementById('customChoose').style.display = 'table-cell';
                setcustomPosValue(); customFlag = true; toastShow(1000);
            }
        }

        //Setting Toast Custom Position
        function setcustomPosValue() {
            var initialWid = toastObj.width.toString();
            toastObj.width = initialWid;
            toastObj.position.X = parseInt((document.getElementById('xPos')).value, 10);
            toastObj.position.Y = parseInt((document.getElementById('yPos')).value, 10);
        }

        //Setting Toast Position
        function setToastPosValue(value) {
            toastObj.width = 350;
            switch (value) {
                case 'Top Left':
                    toastObj.position.X = 'Left'; toastObj.position.Y = 'Top'; break;
                case 'Top Right':
                    toastObj.position.X = 'Right'; toastObj.position.Y = 'Top'; break;
                case 'Top Center':
                    toastObj.position.X = 'Center'; toastObj.position.Y = 'Top'; break;
                case 'Top Full Width':
                    toastObj.width = '100%'; toastObj.position.X = 'Center'; toastObj.position.Y = 'Top'; break;
                case 'Bottom Left':
                    toastObj.position.X = 'Left'; toastObj.position.Y = 'Bottom'; break;
                case 'Bottom Right':
                    toastObj.position.X = 'Right'; toastObj.position.Y = 'Bottom'; break;
                case 'Bottom Center':
                    toastObj.position.X = 'Center'; toastObj.position.Y = 'Bottom'; break;
                case 'Bottom Full Width':
                    toastObj.width = '100%'; toastObj.position.X = 'Center'; toastObj.position.Y = 'Bottom'; break;
            }
        }

        function valueChange(e) {
            toastObj.hide('All');
            setToastPosValue(e.value.toString());
            toastShow(1000);
        }
    </script>
    <style>
        /* custom code start */
        .toast-pos-section #toast_pos_property {
            height: 500px;
            border: none;
            margin: auto;
        }
        /* custom code end */

        #toast_pos_property td {
            width: 50%;
        }

        .e-toast-icon.e-laura.e-icons {
            border-radius: 50%;
            background-image: url('./../Content/Toast/resource/laura.png');
            background-repeat: no-repeat;
            background-size: cover;
            height: 50px !important;
            width: 68px !important;
            background-size: 50px 50px;
            margin: 0;
        }


        @@media (min-width: 740px) {
            #toast_pos_property {
                width: 450px;
            }
        }

        .bootstrap5 .e-toast-icon.e-laura.e-icons,
        .bootstrap5-dark .e-toast-icon.e-laura.e-icons {
            margin-top: 13px;
            margin-right: 14px;
        }

        .bootstrap5 .e-toast-container .e-toast .e-toast-icon,
        .bootstrap5-dark .e-toast-container .e-toast .e-toast-icon {
            position: relative;
        }

        .bootstrap5 .e-toast-container .e-toast .e-toast-message,
        .bootstrap5-dark .e-toast-container .e-toast .e-toast-message {
            padding-left: 10px;
        }

        .bootstrap5 .e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child,
        .bootstrap5-dark .e-toast-container .e-toast.e-toast-header-icon .e-toast-message .e-toast-title:first-child {
            padding-left: 12px;
        }
    </style>
}

@section ActionDescription{


    <div id="action-description">
        <p>This sample demonstrates the different positioning of the Toast based on the target given.</p>
    </div>



}
@section Description{


    <div id="description">
        <p>Based on the use case toast can take the body element or any specific element as target. In this sample, with help of custom inputs toast can be positioned based on the target.</p>
        <ul>
            <li>
                Toast can be positioned in the 8 pre-defined places.
            </li>
            <li>
                Custom option will enable to give X and Y values to align the toast based on the given inputs.
            </li>
        </ul>
        <p>
            More information about Toast can be found in this
            <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/toast/getting-started/" target="_blank" aria-label="documentation section"> documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>


}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Positions in ASP.NET MVC Toast control. Explore here for more details."/>
                }

@*custom code end*@

@section Title{
                    <title>ASP.NET MVC Toast Positions Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Positions in ASP.NET MVC Toast Control</h1>
                }