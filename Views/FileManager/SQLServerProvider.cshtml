@using Syncfusion.EJ2
@using Syncfusion.EJ2.FileManager
@using EJ2MVCSampleBrowser.Models

@{
    string[] items = new string[] { "NewFolder", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
    string[] file = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
}

@section ControlsSection{
    <div class="control-section">
        <div class="sample-container">
            <!-- File Manager sample with SQL service -->
            @Html.EJS().FileManager("filemanager").AjaxSettings(
              new Syncfusion.EJ2.FileManager.FileManagerAjaxSettings
              {
                  Url = "https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Fileoperations",
                  DownloadUrl = "https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Download",
                  UploadUrl = "https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Upload",
                  GetImageUrl = "https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/GetImage"
              }).ToolbarSettings(new Syncfusion.EJ2.FileManager.FileManagerToolbarSettings()
              {
                  Items = items
              }).ContextMenuSettings(new Syncfusion.EJ2.FileManager.FileManagerContextMenuSettings()
              {
                  File = file,
                  Layout = layout
              }).Render()
        </div>
    </div>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates how to utilize the <a target="_blank" href="https://github.com/SyncfusionExamples/sql-server-database-aspcore-file-provider" aria-label="SQL server file system provider">SQL server file system provider<span class="sr-only">opens in a new tab</span></a> with File Manager component. To run the service, configure the SQL server database connection using the <code>SetSQLConnection</code> method to set the <i><b>connection name</b></i>, <i><b>table name</b></i> and <i><b>rootId</b></i> of the SQL table.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>The File Manager component is used to explore a file system through a web application, similar to the Windows Explorer for Windows. It supports all the basic file operations such as create, rename, delete, and more.</p>

        <p>
            <b>Note: </b>File Managerâ€™s upload functionality is restricted in the online demos for security reasons. If you need to test upload functionality, please install
            <a target="_blank" href="https://www.syncfusion.com/downloads" aria-label="downloads">Syncfusion Essential Studio<sup>&reg;</sup> <span class="sr-only">opens in a new tab</span></a>on your machine and run the demo.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the SQL Database Provider in ASP.NET MVC File Manager control. Explore here for more details." />
}
@section Title{
    <title>ASP.NET MVC File Manager SQL Database Provider Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of SQL Database Provider in ASP.NET MVC File Manager Control</h1>
}