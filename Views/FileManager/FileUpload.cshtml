@using Syncfusion.EJ2
@using Syncfusion.EJ2.FileManager
@using Syncfusion.EJ2.Inputs
@using Syncfusion.EJ2.Buttons
@using Syncfusion.EJ2.Popups
@using EJ2MVCSampleBrowser.Models
@{
    string[] items = new string[] { "NewFolder", "Upload", "Cut", "Copy", "Delete", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
    string[] file = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
}
@section ControlsSection{
    <div class="control-section">
        <div class="sample-container">
            <!-- File Manager real time use case sample -->
            <div id='container' class="fileupload">
                @Html.EJS().Uploader("UploadFile").Render()
                @Html.EJS().Button("openBtn").Content("File Browser").Render()
            </div>
            <div id='target' class="control-section">
                @*Dialog*@
                @Html.EJS().Dialog("dialog").AnimationSettings(new DialogAnimationSettings() { Effect = DialogEffect.None }).Created("onDialogLoad").Close("dialogClose").Open("dialogOpen").Header("Select a file").Visible(false).ShowCloseIcon(true).Width("850px").Target("#target").ContentTemplate(@<div class='dialogContent'>
                    @Html.EJS().FileManager("filemanager").AjaxSettings(new Syncfusion.EJ2.FileManager.FileManagerAjaxSettings  {
                   Url = "FileOperations",
                   DownloadUrl = "Download",
                   UploadUrl = "Upload",
                   GetImageUrl = "GetImage"
               }).ToolbarSettings(new Syncfusion.EJ2.FileManager.FileManagerToolbarSettings() { Items = items }).ContextMenuSettings(new Syncfusion.EJ2.FileManager.FileManagerContextMenuSettings() {
                   File = file
               }).FileOpen("onFileOpen").Render()</div>).Render()
            </div>
        </div>
    </div>
    
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the real-time use case of File Manager in a web application. <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/dialog/getting-started" target="_blank" aria-label="dialog">Dialog<span class="sr-only">opens in a new tab</span></a> and <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/uploader/getting-started" target="_blank" aria-label="uploader">Uploader<span class="sr-only">opens in a new tab</span></a> components are integrated with the File Manager. Click the browse button in the uploader element to open the File Manager inside the <code>Dialog</code> component.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>The <b>File Manager</b> component is used to explore a file system through a web application, similar to the Windows Explorer for Windows. It supports all the basic file operations such as create, rename, delete, cut, copy, paste, upload, download, and more.</p>

        <p>
            <b>Note: </b>File Manager's upload functionality is restricted in the online demos for security reasons. If you need to test upload functionality, please install
            <a target="_blank" href="https://www.syncfusion.com/downloads" aria-label="downloads">Syncfusion Essential Studio<sup>&reg;</sup> <span class="sr-only">opens in a new tab</span></a>on your machine and run the demo.
        </p>
    </div>
}
@section PreScripts {
    <script>
        function onDialogLoad() {
            document.getElementById("openBtn").addEventListener('click', function () {
                var dialogObj = document.getElementById('dialog').ej2_instances[0];
                dialogObj.show();
                var filemanagerObj = document.getElementById('filemanager').ej2_instances[0];
                filemanagerObj.path = "/";
                filemanagerObj.selectedItems = [];
                filemanagerObj.refresh();
            });
        }
        // Uploader will be hidden, if Dialog is opened
        function dialogOpen() {
            document.getElementById('container').style.display = 'none';
        }
        // Uploader will be shown, if Dialog is closed
        function dialogClose() {           
            document.getElementById('container').style.display = 'block';
        }
        // File Manager's fileOpen event function
        function onFileOpen(args) {
            var file = args.fileDetails;
            if (file.isFile) {
                args.cancel = true;
                if (file.size <= 0 ) { file.size = 10000; }
                var uploadObject = document.getElementById('UploadFile').ej2_instances[0];
                var dialogObj = document.getElementById('dialog').ej2_instances[0];
                uploadObject.files = [{name: file.name, size: file.size, type: file.type }];
                dialogObj.hide();
            }
        }
    </script>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the File Upload in ASP.NET MVC File Manager control. Explore here for more details."/>
                }

<style>
    .fileupload {
        max-width: 500px;
        margin: auto;
    }

    #openBtn {
        position: absolute;
        top: 28px;
        left: 43%;
    }

    .tailwind #openBtn,
    .tailwind-dark #openBtn {
        top: 28px;
    }

    .bootstrap #openBtn,
    .bootstrap-dark #openBtn {
        top: 30px;
    }

    .bootstrap5 #openBtn,
    .bootstrap5-dark #openBtn {
        top: 26px;
    }

    #target {
        height: 550px;
    }
    #dialog {
        top: 20px !important;
        max-height: 500px !important;
    }
    .fileupload .e-file-drop, .fileupload .e-css.e-btn {
        display: none;
    }

    .fluent2 .fileupload .e-file-select-wrap {
        padding: 20px 0 20px 20px;
    }
</style>

@section Title{
                    <title>ASP.NET MVC File Manager File Upload Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of File Upload in ASP.NET MVC File Manager Control</h1>
                }
