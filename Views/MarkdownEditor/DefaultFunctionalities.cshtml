@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@section ControlsSection{
    <div class="control-section">
        <div class="control-wrapper">
            @Html.EJS().RichTextEditor("defaultMarkDown").Value((string)ViewData["Value"]).Height("250px").Placeholder("Enter your text here...").EditorMode(Syncfusion.EJ2.RichTextEditor.EditorMode.Markdown).Created("created").ToolbarSettings(e => e.Items((object)ViewData["Items"])).Render()
        </div>
    </div>
    <style>
        .e-richtexteditor textarea.e-content {
            float: left;
        }

        .e-richtexteditor .e-rte-content {
            overflow: hidden;
        }

        .e-icon-btn.e-active .e-md-preview::before {
            content: '\e350';
        }

        .e-icon-btn .e-md-preview::before {
            content: '\e345';
        }
       .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {
         content: '\e790';
        }

        .bootstrap4 .e-icon-btn .e-md-preview::before {
         content: '\e787';
        }

        .fluent .e-icon-btn.e-active .e-md-preview::before,
        .fluent-dark .e-icon-btn.e-active .e-md-preview::before,
        .fluent2 .e-icon-btn.e-active .e-md-preview::before,
        .fluent2-dark .e-icon-btn.e-active .e-md-preview::before,
        .fluent2-highcontrast .e-icon-btn.e-active .e-md-preview::before,
        .tailwind .e-icon-btn.e-active .e-md-preview::before,
        .tailwind-dark .e-icon-btn.e-active .e-md-preview::before,
        .tailwind3 .e-icon-btn.e-active .e-md-preview::before,
        .tailwind3-dark .e-icon-btn.e-active .e-md-preview::before,
        .bootstrap5 .e-icon-btn.e-active .e-md-preview::before,
        .bootstrap5-dark .e-icon-btn.e-active .e-md-preview::before,
        .bootstrap5\.3 .e-icon-btn.e-active .e-md-preview::before,
        .bootstrap5\.3-dark .e-icon-btn.e-active .e-md-preview::before,
        .material3 .e-icon-btn.e-active .e-md-preview::before,
        .material3-dark .e-icon-btn.e-active .e-md-preview::before {
            content: '\e80e';
        }

        .tailwind .e-icon-btn .e-md-preview::before,
        .tailwind-dark .e-icon-btn .e-md-preview::before,
        .tailwind3 .e-icon-btn .e-md-preview::before,
        .tailwind3-dark .e-icon-btn .e-md-preview::before,
        .bootstrap5 .e-icon-btn .e-md-preview::before,
        .bootstrap5-dark .e-icon-btn .e-md-preview::before,
        .bootstrap5\.3 .e-icon-btn .e-md-preview::before,
        .bootstrap5\.3-dark .e-icon-btn .e-md-preview::before,
        .fluent .e-icon-btn .e-md-preview::before,
        .fluent-dark .e-icon-btn .e-md-preview::before,
        .fluent2 .e-icon-btn .e-md-preview::before,
        .fluent2-dark .e-icon-btn .e-md-preview::before,
        .fluent2-highcontrast .e-icon-btn .e-md-preview::before,
        .material3 .e-icon-btn .e-md-preview::before,
        .material3-dark .e-icon-btn .e-md-preview::before {
            content: '\e7de';
        }

    </style>


}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Overview in ASP.NET MVC Rich Text Editor control. Explore here for more details."/>
                }

@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates markdown editing in the Rich Text Editor with complete features.
        </p>
    </div>
}
@section Description{
<div id="description">
    <p>The Rich Text Editor supports markdown editing when the <code>editorMode</code> is set to mode property of the Rich Text Editor.</p>
    <p>The editor’s toolbar contains commands to format the markdown content. The toolbar consists of:</p>
    <ul>
        <li><code>Lists</code> - Ordered and unordered list types.</li>
        <li><code>Links</code> - A hyperlink can be inserted into the editor for quick access to related information.</li>
        <li><code>Image</code> - Inserts and manages images.</li>
        <li><code>Alignment</code> - Aligns the content with left, center, and right margins.</li>
        <li><code>Format</code> – Formats the sentence in different ways such as heading level, quotation, and code snippet</li>
        <li><code>Styles</code> – Allows you to apply inline styles to the selected content like bold, italic, and more.</li>
        <li><code>Tables</code> – Allows you to insert a table with header.</li>
    </ul>

    <p>The third-party library <code>Marked</code> is used in this sample to convert markdown into HTML content.</p>
</div>
}

<script>
    var rteObj, textArea, mdsource;
    function created() { 
        rteObj = this;
        textArea = rteObj.contentModule.getEditPanel();
        textArea.addEventListener('keyup', function (e) {
            markdownConversion();
        });
        setTimeout(function () {
            mdsource = document.getElementById('preview-code');
            tooltipObj = new ej.popups.Tooltip({
                content: "Preview",
                target: "#preview-code"
            });
            tooltipObj.appendTo("#preview-code");
            mdsource.addEventListener('click', function (e) {
                fullPreview();
                if (e.currentTarget.classList.contains('e-active')) {
                    rteObj.disableToolbarItem(['Bold', 'Italic', 'StrikeThrough', 'OrderedList',
                        'UnorderedList', 'CreateTable', 'CreateLink', 'Image', 'Formats', 'Blockquote', 'Undo', 'Redo', 'SuperScript', 'SubScript']);
                }
                else {
                    rteObj.enableToolbarItem(['Bold', 'Italic', 'StrikeThrough', 'OrderedList',
                        'UnorderedList', 'CreateTable', 'CreateLink', 'Image', 'Formats', 'Blockquote', 'Undo', 'Redo', 'SuperScript', 'SubScript']);
                }
            });
        },500)
    }
    loadExternalFile();
    function loadExternalFile() {
        var script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.19/marked.js';
        document.getElementsByTagName('head')[0].appendChild(script);
    }
    function fullPreview() {
        var id = rteObj.getID() + 'html-preview';
        var htmlPreview = rteObj.element.querySelector('#' + id);
        var panel = rteObj.contentModule.getPanel();
        var editPanel = rteObj.contentModule.getEditPanel();
        var previewTextArea = rteObj.element.querySelector('.e-rte-content');
        if (mdsource.classList.contains('e-active')) {
            mdsource.classList.remove('e-active');
            panel.style.display = 'block';
            if (editPanel && editPanel.value === '') {
                if (htmlPreview && htmlPreview.getAttribute('data-markdown')) {
                    editPanel.value = htmlPreview.getAttribute('data-markdown');
                }
            }
            if (htmlPreview) {
                htmlPreview.style.display = 'none';
            }
            tooltipObj.content = "Preview";
        }
        else {
            mdsource.classList.add('e-active');
            var markdownContent = editPanel ? editPanel.value : '';
            if (!htmlPreview) {
                htmlPreview = ej.base.createElement('div', { className: 'e-content e-pre-source' });
                htmlPreview.id = id;
                panel.parentNode.appendChild(htmlPreview);
                previewTextArea.style.overflow = 'auto';
            }
            if(previewTextArea.style.overflow === 'hidden') {
                previewTextArea.style.overflow = 'auto';
            }
            panel.style.display = 'none';
            htmlPreview.style.display = 'block';
            var panelStyles = window.getComputedStyle(panel);
            if (markdownContent) {
                htmlPreview.innerHTML = marked(markdownContent);
                htmlPreview.style.fontFamily = panelStyles.fontFamily;
                htmlPreview.style.fontSize = panelStyles.fontSize;
            }
            tooltipObj.content = "Codeview";
        }
    }
    function markdownConversion() {
        if (mdsource.classList.contains('e-active')) {
            var id = rteObj.getID() + 'html-view';
            var htmlPreview = rteObj.element.querySelector('#' + id);
            htmlPreview.innerHTML = marked(rteObj.contentModule.getEditPanel().value);
        }
    }
</script>
@section Title{
                    <title>ASP.NET MVC Rich Text Editor Overview Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Overview in ASP.NET MVC Rich Text Editor Control</h1>
                }