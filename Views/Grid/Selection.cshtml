@using Syncfusion.EJ2

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                @Html.EJS().Grid("Selection").DataSource((IEnumerable<object>)ViewData["dataSource"]).AllowSelection().RowSelecting("selectingEvent").CellSelecting("selectingEvent").Columns(col =>
       {
           col.Field("EmployeeID").HeaderText("Employee ID").Width("150").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).IsPrimaryKey(true).Add();
           col.Field("FirstName").HeaderText("Name").Width("125").Add();
           col.Field("Title").HeaderText("Title").Width("180").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
           col.Field("HireDate").HeaderText("Hire Date").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Format("yMd").Add();

       }).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).SelectionSettings(select => select.Type(Syncfusion.EJ2.Grids.SelectionType.Multiple)).Render()
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">

        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td class="left-side">Selection Type</td>
                <td style="padding-bottom:10px">
                    @Html.EJS().DropDownList("SelectionType").DataSource((IEnumerable<object>)ViewData["type"]).Value("Multiple").Change("selectionChange").Render()
                </td>
            </tr>
            <tr>
                <td class="left-side">Selection Mode</td>
                <td>
                    @Html.EJS().DropDownList("SelectionMode").DataSource((IEnumerable<object>)ViewData["mode"]).Value("Row").Change("modeChange").Render()
                </td>
            </tr>
            <tr>
                <td>
                    <div style="padding-left: 0px">Enable Column Selection</div>
                </td>
                <td>
                    <div>
                        @Html.EJS().CheckBox("checked").Change("setColumnSelection").Checked(false).Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <script>
        function modeChange(args) {
            var grid = document.getElementById("Selection").ej2_instances[0];
            grid.selectionSettings.mode = this.value;
        }

        function selectionChange(args) {
            var grid = document.getElementById("Selection").ej2_instances[0];
            grid.selectionSettings.type = this.value;
        }

        function selectingEvent(e) {
            var grid = document.getElementById("Selection").ej2_instances[0];
            if (grid.selectionSettings.allowColumnSelection) {
                e.cancel = true;
            }
        }
        function setColumnSelection(e) {
            var grid = document.getElementById("Selection").ej2_instances[0];
            var dropDownMode = document.getElementById("SelectionMode").ej2_instances[0];
            grid.clearSelection();
            if (e.checked) {
                grid.selectionSettings.allowColumnSelection = true;
                dropDownMode.enabled = false;
            } else {
                grid.selectionSettings.allowColumnSelection = false;
                dropDownMode.enabled = true;
            }
        }
    </script>

}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the selection feature in Grid, which allows you to select row or cell or column through simple mouse down or keyboard interaction.
            You can change type and mode from the properties panel.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Selection in ASP.NET MVC Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            Selection provides an interactive support to highlight the row or cell or column that you select.
            Selection can be done through a simple
            Mouse down or Keyboard interaction. To enable selection, set <code>
                AllowSelection
            </code> as true.
        </p>
        <p>
            Grid supports two types of selection which can be set using
            <code>SelectionSettings->Type</code> property. They are,
        </p>
        <ul>
            <li><code>Single</code> - Enabled by default. Allows the user to select single row/cell/column at a time.</li>
            <li><code>Multiple</code> - Allows the user to select more than one row/cell/column at a time.</li>
        </ul>
        <p>
            Also, supports three modes of selection which can be set using
            <code>SelectionSettings->Mode</code> property. They are,
        </p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables the row selection in Grid.</li>
            <li><code>Cell</code> - Enables the cell selection in Grid.</li>
            <li>
                <code>Both</code> - Enables both the row and cell selection in Grid.
                Clicking any cell will select the both row and cell simultaneously.
            </li>
        </ul>
        <p>
            To perform the column selection, enable the <code>
                <a target="_blank" class="code"
                   href="https://ej2.syncfusion.com/javascript/documentation/api/grid/selectionSettings/#allowcolumnselection" aria-label="selectionSettings">
                    selectionSettings->allowColumnSelection
                <span class="sr-only">opens in a new tab</span></a>
            </code> property.
        </p>
        <p>
            To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells/columns.
            To select range of rows/cells/columns, hold <strong>SHIFT</strong> key and click the rows/cells/columns.
        </p>
        <p>
            While using the Grid in a touch device environment, there is an option for multi-selection
            through a single tap on the row and it will show a popup with the multi-selection symbol.
            Tap the icon to enable multi-selection in a single tap.
        </p>
        <p>
            In this demo, select the selection type and selection mode from the properties panel to do the selection.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Data Grid Default Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Selection in ASP.NET MVC Data Grid Control</h1>
                }
