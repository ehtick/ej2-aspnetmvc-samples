@using Syncfusion.EJ2


@section ControlsSection{
<div class="control-section">
    <div class="col-lg-6">
        @Html.EJS().Grid("RowDragDrop").DataSource((IEnumerable<object>)ViewData["dataSource"]).AllowSelection().AllowRowDragAndDrop(true).Columns(col =>
{
    col.Field("OrderID").Type("number").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).IsPrimaryKey(true).ValidationRules(new { required = true, number = true }).Add();
    col.Field("CustomerID").Type("string").HeaderText("Customer Name").Width("150").ShowInColumnChooser(false).ValidationRules(new { required = true, minLength = 5 }).Add();
    col.Field("OrderDate").Type("date").HeaderText("Order Date").Width("130").Format("yMd").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).EditType("datepickeredit").Add();

}).AllowPaging().AllowSorting().AllowFiltering().RowDragStart("rowDragStart").FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).SelectionSettings(select=>select.Type( Syncfusion.EJ2.Grids.SelectionType.Multiple)).PageSettings(page => page.PageCount(1).PageSize(10)).RowDropSettings(new Syncfusion.EJ2.Grids.GridRowDropSettings() { TargetID = "DestGrid" }).Render()
    </div>
    <div class="col-lg-6">
        @Html.EJS().Grid("DestGrid").AllowSelection().AllowRowDragAndDrop(true).Columns(col =>
{
    col.Field("OrderID").Type("number").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).IsPrimaryKey(true).ValidationRules(new { required = true, number = true }).Add();
    col.Field("CustomerID").Type("string").HeaderText("Customer Name").Width("150").ShowInColumnChooser(false).ValidationRules(new { required = true, minLength = 5 }).Add();
    col.Field("OrderDate").Type("date").HeaderText("Order Date").Width("130").Format("yMd").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).EditType("datepickeredit").Add();

}).AllowPaging().AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).SelectionSettings(select=>select.Type( Syncfusion.EJ2.Grids.SelectionType.Multiple)).PageSettings(page => page.PageCount(1).PageSize(5)).RowDropSettings(new Syncfusion.EJ2.Grids.GridRowDropSettings() { TargetID = "RowDragDrop" }).Render()
    </div>
</div>
    <script type="text/javascript">
        function rowDragStart() {
            var destGrid = document.getElementById("DestGrid").ej2_instances[0];
            if (destGrid.isEdit) {
                if (destGrid.editModule.formObj.validate()) {
                    destGrid.endEdit();
                } else {
                    destGrid.closeEdit();
                }
            }
        }
    </script>
    }
@section ActionDescription{
	<div id="action-description">
		 <p>This sample demonstrates the Grid component with the row drag and drop feature. Drag and drop rows between Grids
            to move rows.
        </p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Row Drag and Drop in ASP.NET MVC Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		    <p>Grid rows can be dragged and dropped to another Grid or custom controlled by enabling
				<code>AllowRowDragAndDrop</code> Grid property. The target control on which the Grid rows has to be dropped can be set by
				using <code>RowDropSettings->TargetID</code>.</p>
			<p>The Selection feature should be enabled to select the rows. Multiple rows can be selected by simply clicking and
				dragging inside the Grid.</p>
			<p>In this demo, we have demonstrated how to drag and drop the rows between Grids. Row drag and drop feature is enabled
				in both the Grids. To drag and drop rows between Grids select rows, drag and drop them in the adjacent Grid.
			</p>
    </div>
}


@section Title{
                    <title>ASP.NET MVC Data Grid Row Drag and Drop Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Row Drag and Drop in ASP.NET MVC Data Grid Control</h1>
                }
