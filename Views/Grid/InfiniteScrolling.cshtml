@using Syncfusion.EJ2

@section ControlsSection{

    <style>
            .image { position: absolute; background-repeat: no-repeat; 
             background-image: url('/scripts/Images/Employees/spinner.gif'); 
             background-position: center; width: 16px; height: 28px; }

    .e-bigger .image {
        height: 36px;
    }

    #popup {
        position: absolute;
        background-color: transparent;
        display: none;
        z-index: 100;
    }
        .div-button {
            margin: 5px 5px 5px 0;
        }
    </style>
    <div class="control-section">
     
        <div class="row">
            <table>
                <tr>
                    <td style="padding:15px" colspan='2'>
                        <span>
             @Html.EJS().Button("generate").CssClass("e-info").Content("Load 100K Data").Render()
      <span id="popup">
                                <span id="gif" class="image"></span>
                            </span>
                        </span>
                        
                    </td>
                </tr>
            </table>
           
        </div>


        <div>
            @Html.EJS().Grid("VirtualGrid").EnableInfiniteScrolling().EnableColumnVirtualization().DataBound("hide").Height("400").Columns(col =>
   {

       col.Field("SNo").HeaderText("S.No").IsPrimaryKey(true).Width("140").Add();
       col.Field("Field1").HeaderText("PlayerName").Width("140").Add();
       col.Field("Field2").HeaderText("Year").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field3").HeaderText("Sports").Width("160").Add();
       col.Field("Field4").HeaderText("Country").Width("160").Add();
       col.Field("Field5").HeaderText("LGID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field6").HeaderText("GP").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field7").HeaderText("GS").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field8").HeaderText("Minutes").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field9").HeaderText("Points").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field10").HeaderText("oRebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field11").HeaderText("dRebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field12").HeaderText("Rebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field13").HeaderText("Assists").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field14").HeaderText("Steals").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field15").HeaderText("Blocks").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field16").HeaderText("Turnovers").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field17").HeaderText("PF").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field18").HeaderText("fgAttempted").Width("150").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field19").HeaderText("fgMade").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field20").HeaderText("ftAttempted").Width("150").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field21").HeaderText("ftMade").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field22").HeaderText("ThreeAttempted").Width("150").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field23").HeaderText("ThreeMade").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field24").HeaderText("PostGP").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field25").HeaderText("PostGS").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field26").HeaderText("PostMinutes").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field27").HeaderText("PostPoints").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field28").HeaderText("PostoRebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field29").HeaderText("PostdRebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field30").HeaderText("PostRebounds").Width("130").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
   }).PageSettings(page => page.PageSize(50)).Render()
        </div>

    </div>

    <script>

        var virtualData = [], date1 = null, date2 = null, flag = true;
        var names = ['hardire', 'abramjo01', 'aubucch01', 'Hook', 'Rumpelstiltskin', 'Belle', 'Emma', 'Regina', 'Aurora', 'Elsa',
            'Anna', 'Snow White', 'Prince Charming', 'Cora', 'Zelena', 'August', 'Mulan', 'Graham', 'Discord', 'Will', 'Robin Hood',
            'Jiminy Cricket', 'Henry', 'Neal', 'Red', 'Aaran', 'Aaren', 'Aarez', 'Aarman', 'Aaron', 'Aaron-James', 'Aarron', 'Aaryan', 'Aaryn',
            'Aayan', 'Aazaan', 'Abaan', 'Abbas', 'Abdallah', 'Abdalroof', 'Abdihakim', 'Abdirahman', 'Abdisalam', 'Abdul', 'Abdul-Aziz',
            'Abdulbasir', 'Abdulkadir', 'Abdulkarem', 'Abdulkhader', 'Abdullah', 'Abdul-Majeed', 'Abdulmalik', 'Abdul-Rehman', 'Abdur',
            'Abdurraheem', 'Abdur-Rahman', 'Abdur-Rehmaan', 'Abel', 'Abhinav', 'Abhisumant', 'Abid', 'Abir', 'Abraham', 'Abu', 'Abubakar',
            'Ace', 'Adain', 'Adam', 'Adam-James', 'Addison', 'Addisson', 'Adegbola', 'Adegbolahan', 'Aden', 'Adenn', 'Adie', 'Adil', 'Aditya',
            'Adnan', 'Adrian', 'Adrien', 'Aedan', 'Aedin', 'Aedyn', 'Aeron', 'Afonso', 'Ahmad', 'Ahmed', 'Ahmed-Aziz', 'Ahoua', 'Ahtasham',
            'Aiadan', 'Aidan', 'Aiden', 'Aiden-Jack', 'Aiden-Vee'];
        var sport = ['Cricket', 'Football', 'Tennis', 'Golf', 'Chess', 'Dodgeball', 'Racket', 'Archery', 'Climbing', 'Hunting', 'Carrom', 'Tag', 'Novuss',
            'Subbuteo', 'Baseball', 'Madden NFL', 'Shuffleboard', 'Badminton', 'Hockey', 'Volleyball', 'Table Tennis', 'Golf', 'Cycling', 'Running', 'Walking', 'Wireball',
            'Town ball', 'Tee ball', 'Stool ball', 'Stick ball'];
        var country = ['India', 'Australia', 'Ballesteros', 'Belgium', 'Brazil', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'Britain',
            'Argentina', 'Jamaica', 'Kenya', 'Morocco', 'Ireland', 'Norway', 'Philippines', 'Portugal', 'Romania', 'Russia', 'Scotland', 'Scottish', 'Serbia', 'Spain',
            'Sweden', 'Switzerland', 'Netherlands', 'UK', 'Ukraine', 'US', 'Wales', 'West Indies', 'China', 'Hong Kong', 'Italy', 'Philippines', 'Turkey', 'Botswana',
            'Sri Lanka', 'Algeria', 'Bangladesh', 'Egypt', 'Malaysia'];

        document.getElementById("generate").addEventListener('click', function() {

            var grid = document.getElementById("VirtualGrid").ej2_instances[0]
            if (!virtualData.length) {
                show();
                dataSource();
                grid.dataSource = virtualData;
            } else {
                flag = true;
                show();
                grid.refresh();
            }

        })
        function show() {
            document.getElementById('popup').style.display = 'inline-block';
        }
        function hide(args) {
            if (flag) {
                flag = false;
            }
            document.getElementById('popup').style.display = 'none';
        }
        function dataSource() {
            for (var i = 0; i < 100000; i++) {
                virtualData.push({
                    'SNo': i + 1,
                    'Field1': names[Math.floor(Math.random() * names.length)],
                    'Field2': 1967 + (i % 10),
                    'Field3': sport[Math.floor(Math.random() * sport.length)],
                    'Field4': country[Math.floor(Math.random() * country.length)],
                    'Field5': Math.floor(Math.random() * 2000),
                    'Field6': Math.floor(Math.random() * 1000),
                    'Field7': Math.floor(Math.random() * 100),
                    'Field8': Math.floor(Math.random() * 10),
                    'Field9': Math.floor(Math.random() * 10),
                    'Field10': Math.floor(Math.random() * 100),
                    'Field11': Math.floor(Math.random() * 100),
                    'Field12': Math.floor(Math.random() * 1000),
                    'Field13': Math.floor(Math.random() * 10),
                    'Field14': Math.floor(Math.random() * 10),
                    'Field15': Math.floor(Math.random() * 1000),
                    'Field16': Math.floor(Math.random() * 200),
                    'Field17': Math.floor(Math.random() * 300),
                    'Field18': Math.floor(Math.random() * 400),
                    'Field19': Math.floor(Math.random() * 500),
                    'Field20': Math.floor(Math.random() * 700),
                    'Field21': Math.floor(Math.random() * 800),
                    'Field22': Math.floor(Math.random() * 1000),
                    'Field23': Math.floor(Math.random() * 2000),
                    'Field24': Math.floor(Math.random() * 150),
                    'Field25': Math.floor(Math.random() * 1000),
                    'Field26': Math.floor(Math.random() * 100),
                    'Field27': Math.floor(Math.random() * 400),
                    'Field28': Math.floor(Math.random() * 600),
                    'Field29': Math.floor(Math.random() * 500),
                    'Field30': Math.floor(Math.random() * 300),
                });
            }
        }

    </script>
}

@section Scripts{
    <script type="text/javascript">
        show();
        hide();
    </script>
}


@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the Grid component with the infinite scrolling feature. You can use the scrollbar or navigation keys or the mouse wheel to perform the infinite scroll action.
    </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Infinite Scrolling in ASP.NET MVC Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
     <p>
            The Grid Infinite scrolling feature enables the loading of data using the lazy loading concept, where buffer data is loaded only when the scrollbar reaches the end of the scroller. 
            To enable Infinite scrolling, set the <code><a target="_blank" className="code"
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_EnableInfiniteScrolling" aria-label="enableInfiniteScrolling">
            enableInfiniteScrolling <span class="sr-only">opens in a new tab</span></a></code> property to true. Additionally, you can efficiently display a multiple columns without performance degradation using the clumn virtualization feature. 
            Enable column virtualization by setting the <code><a target="_blank" className="code"
            href="https://help.syncfusion.com/cr/aspnetmvc-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_EnableColumnVirtualization" aria-label="enableColumnVirtualization">
            enableColumnVirtualization<span class="sr-only">opens in a new tab</span></a></code> property to true.
        </p>

        <p>
            Note: The <code>height</code> property must be defined when enabling <code>enableInfiniteScrolling</code>.
        </p>
         <p>
            More information on the infinite scrolling can be found in this
            <a target="_blank" 
            href="https://ej2.syncfusion.com/react/documentation/grid/scrolling/infinite-scrolling" aria-label="documentation section" >
            documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET MVC Data Grid Infinite Scrolling Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Infinite Scrolling in ASP.NET MVC Data Grid Control</h1>
                }