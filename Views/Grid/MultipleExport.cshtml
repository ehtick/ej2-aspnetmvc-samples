

@using Syncfusion.EJ2
@{
    ViewData["Title"] = "MultipleExport";
    string[] exportGrids = { "MasterGrid", "DetailGrid" };
}
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                <div>
                    <p class="e-mastertext">Master Grid</p>
                    @Html.EJS().Grid("MasterGrid").DataSource((IEnumerable<object>)ViewData["CustomerDataSource"]).ToolbarClick("toolbarClick").SelectedRowIndex(1).Columns(col =>
                {
                    col.Field("CustomerID").HeaderText("Customer ID").Width(150).Add();
                    col.Field("CompanyName").HeaderText("Company Name").Width(150).Add();
                    col.Field("Address").HeaderText("Address").Width(150).Add();
                    col.Field("Country").HeaderText("Country").Width(150).Add();

                }).RowSelected("selected").AllowPdfExport().AllowExcelExport(true).ExportGrids(exportGrids).ToolbarClick("toolbarClick").Toolbar(new List<string>() { "ExcelExport", "PdfExport" }).Render()
                </div>
                <p><div class='e-statustext'> Showing orders of Customer ID:  <b id="key"></b></div></p>
                <div>
                    @Html.EJS().Grid("DetailGrid").DataSource((IEnumerable<object>)ViewData["dataSource1"]).AllowSelection(false).AllowPdfExport(true).AllowExcelExport(true).Columns(col =>
                                {
                                    col.Field("OrderID").HeaderText("Order ID").Width(150).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                    col.Field("Freight").HeaderText("Freight").Width(150).Format("C2").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
                                    col.Field("ShipName").HeaderText("Ship Name").Width(150).Add();
                                    col.Field("ShipCountry").HeaderText("Ship Country").Width(150).Add();

                                }).Render()
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td style="padding-top: 10px">
                    @Html.EJS().CheckBox("checkbox").Checked(true).LabelPosition(Syncfusion.EJ2.Buttons.LabelPosition.Before).Label("Export grids in same sheet").Render()
                </td>
            </tr>
        </table>
    </div>

    <script>
                    function selected(args) {
            var selectedRecord = args.data;
                        var data = @Html.Raw(Json.Encode(ViewData["datasource"]));
                        var CustomerID = args.data.CustomerID;
                        var detaildata = new ej.data.DataManager(data).executeLocal(new ej.data.Query().where("CustomerID", "equal", CustomerID, false).take(10));
            var grid = document.getElementById("DetailGrid").ej2_instances[0];
                        document.getElementById('key').innerHTML = selectedRecord.CustomerID;
            grid.dataSource = new ej.data.DataManager(detaildata.slice(0, 5)).dataSource.json;
        }

            var newSheetExcelProperties = {
                multipleExport: { type: 'NewSheet' }
            };
            var sameSheetPdfProperties = {
                multipleExport: { type: "AppendToPage", blankSpace: 10 }
            };
            function toolbarClick(args) {
                var mastergrid = document.getElementById("MasterGrid").ej2_instances[0];
                if (document.getElementById("checkbox").ej2_instances[0].checked) {
                    if (args.item.id === 'MasterGrid_excelexport') {
                        mastergrid.excelExport({}, true);
                    }
                    if (args.item.id === 'MasterGrid_pdfexport') {
                        mastergrid.pdfExport(sameSheetPdfProperties, true);
                    }
                }
                else {
                    if (args.item.id === 'MasterGrid_excelexport') {
                        mastergrid.excelExport(newSheetExcelProperties, true);
                    }
                    if (args.item.id === 'MasterGrid_pdfexport') {
                        mastergrid.pdfExport({}, true);
                    }
                }
            }




    </script>
}
@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates the client-side exporting of mutliple grids, which allows you to export the data of
        multiple grids in the same or different pages to Excel and PDF formats.
    </p>
</div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Multiple Grids Exporting in ASP.NET MVC Data Grid control. Explore here for more details." />
}


@section Description{
<div id='description'>
    <p>Data Grids support client-side exporting which allows you to export data to Excel and PDF formats.</p>
    <p>Multiple grids can be exported by providing their <code>IDs</code> in the <code>exportGrids</code> property.</p>
    <p>In this demo, Excel and PDF exports are enabled in both grids by setting the <code>allowExcelExport</code> and 
        <code>allowPdfExport</code> properties to true. In the master grid, the grid IDs are listed in the 
        <code>exportGrids</code> property which can be exported to Excel and PDF formats by clicking the toolbar buttons.
    </p>
    <p>The ExcelExport and PdfExport items are defined in the toolbar of the Grid. Actions are defined in
        the <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#toolbarclick" aria-label="">toolbarClick<span class="sr-only">opens in a new tab</span></a></code> event
        to export Grid data using <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#excelexport" aria-label="excelExport">excelExport<span class="sr-only">opens in a new tab</span></a></code> 
        and <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#pdfexport" aria-label="pdfExport">pdfExport<span class="sr-only">opens in a new tab</span></a></code> methods.
    </p>
    <p>By default, in this demo grids are exported on the same page. They can be exported in separate pages by
        unchecking the checkbox. This can be achieved by setting the multipleExport <code>type</code> of 
        <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/excelExportProperties/" aria-label="ExcelExportProperties">ExcelExportProperties<span class="sr-only">opens in a new tab</span></a></code> 
        and <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/pdfExportProperties/" aria-label="PdfExportProperties">PdfExportProperties.<span class="sr-only">opens in a new tab</span></a></code>
    </p>

    <p>
        More information on the exporting configuration can be found in this <a target="_blank"
        href="https://ej2.syncfusion.com/aspnetmvc/documentation/grid/excel-export/excel-exporting" aria-label="Excel-export">Excel-export<span class="sr-only">opens in a new tab</span></a> 
        and <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/grid/pdf-export/pdf-export" aria-label="PDF-export">PDF-export<span class="sr-only">opens in a new tab</span></a> documentation sections.
    </p>
</div>
}
@section Title{
    <title>ASP.NET MVC Data Grid Multiple Exporting Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Multiple Exporting in ASP.NET MVC Data Grid Control</h1>
}
<style>
    .e-statustext,
    .e-mastertext {
        font-size: 15px;
        padding: 1em;
        font-family: Roboto;
        opacity: 0.87;
    }
</style>