@using Syncfusion.EJ2


@section ControlsSection{
    <div class="control-section">
    @Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewData["StackedHeaderData"]).Columns(col =>
{
    col.Field("CustomerID").HeaderText("Customer ID").Width("160").MinWidth("115").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).IsPrimaryKey(true).ShowInColumnChooser(false).ValidationRules(new { required = true, number = true }).Add();
    col.Field("CustomerName").HeaderText("Name").Width("150").MinWidth("120").Add();
    col.HeaderText("Order Details").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Columns(new List<Syncfusion.EJ2.Grids.GridColumn>() {
        new Syncfusion.EJ2.Grids.GridColumn { Field = "OrderID", Width = "90", HeaderText = "ID", MinWidth="90", TextAlign=Syncfusion.EJ2.Grids.TextAlign.Right},
        new Syncfusion.EJ2.Grids.GridColumn { Field = "OrderDate", Width = "110", TextAlign=Syncfusion.EJ2.Grids.TextAlign.Right, Format="yMd", HeaderText = "Date", MinWidth="105", EditType="datepickeredit" } }).Add();
    col.HeaderText("Shipping Details").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Columns(new List<Syncfusion.EJ2.Grids.GridColumn>() {
        new Syncfusion.EJ2.Grids.GridColumn { Field = "ShipCountry", Width = "150",  HeaderText = "Country", MinWidth="120", EditType="dropdownedit", Template= "#locationTemplate", ValidationRules = new { required = true } },
        new Syncfusion.EJ2.Grids.GridColumn { Field = "Freight", Width = "130", HeaderText = "Charges", EditType = "numericedit", TextAlign=Syncfusion.EJ2.Grids.TextAlign.Right, MinWidth="115", Format="C2", ValidationRules = new { required = true, number = true }}}).Add();
    col.HeaderText("Delivery Details").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Columns(new List<Syncfusion.EJ2.Grids.GridColumn>() {
        new Syncfusion.EJ2.Grids.GridColumn { Field = "Status", Width = "150", HeaderText = "Status", EditType="dropdownedit", MinWidth="120", ValidationRules = new { required = true }, TextAlign=Syncfusion.EJ2.Grids.TextAlign.Center},
        new Syncfusion.EJ2.Grids.GridColumn { Field = "Feedback", Width = "130",  HeaderText = "Feedback", AllowResizing = false, MinWidth="115", EditType = "numericedit", TextAlign=Syncfusion.EJ2.Grids.TextAlign.Center, Template= "#feedbackTemplate", ValidationRules = new { required = true, min = 0, max = 5 } }}).Add();
}).AllowPaging().PageSettings(new Syncfusion.EJ2.Grids.GridPageSettings() { PageCount = 5 }).AllowSorting().AllowMultiSorting().AllowFiltering().EnableHover(false).ClipMode(Syncfusion.EJ2.Grids.ClipMode.EllipsisWithTooltip).ShowColumnChooser(true).FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true);
}).ColumnChooserSettings(new Syncfusion.EJ2.Grids.GridColumnChooserSettings { Template= "#column-chooser-template", HeaderTemplate = "#ccHeadertemplate", FooterTemplate = "#ccFootertemplate", RenderCustomColumnChooser = "renderCustomColumnChooser" }).QueryCellInfo("queryCellInfo").Created("onCreated").Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "ColumnChooser" }).AllowResizing().Render()
</div>

    <script id='ccHeadertemplate' type="text/x-template">
        <div>
            <span class="e-icons e-columns" id="column-chooser-icon"></span> 
            <span id="column-chooser-text">Column Options</span>
        </div>
    </script>

    <script type="text/x-template" id="column-chooser-template">                
        <div id="tree-view-list" ></div>
    </script>

    <script id='ccFootertemplate' type="text/x-template">
        <div id="columnChooserFooter">
            <button id="submitButton">Apply</button>
            <button id="abortButton">Close</button>
        </div>
    </script>

    <template>
        <input class="feedback" />
    </template>
    <script type="text/x-jsrender" id="feedbackTemplate">
        ${feedbackDetail(data)}
    </script>

    <script id="locationTemplate" type="text/x-template">
        <div class="image">
            <img src="@Url.Content("~/Content/grid/Map.png")" class="e-image" alt=""/> &nbsp
            <span>${ShipCountry}</span>
        </div>
    </script>

    
    <script type="text/javascript">
        var treeObj;
        var treeData = []; 
        function renderCustomColumnChooser(targetLHTMLElement, columns) {  
            var grid = document.getElementById("Grid").ej2_instances[0];
            var parentNodes = [
                { id: 1, name: 'Order Details', hasChild: true, expanded: true },
                { id: 2, name: 'Shipping Details', hasChild: true, expanded: true },
                { id: 3, name: 'Delivery Status', hasChild: true, expanded: true },
            ];
            if (columns && columns.length) {
                treeData = columns.map(function(column) {
                    var parentId;
                    switch (column.field) {
                        case 'OrderID':
                        case 'OrderDate':
                            parentId = 1;
                            break;
                        case 'ShipCountry':
                        case 'Freight':
                            parentId = 2;
                            break;
                        case 'Status':
                        case 'Feedback':
                            parentId = 3;
                            break;
                    }
                    return {
                        id: column.uid,
                        name: column.headerText,
                        pid: parentId,
                        isChecked: column.visible
                    };
                });
                var uniquePids = [];
                treeData.forEach(function(item) {
                    if (uniquePids.indexOf(item.pid) === -1) {
                        uniquePids.push(item.pid);
                    }
                });
                var filteredParents = parentNodes.filter(function(parent) {
                    return uniquePids.indexOf(parent.id) !== -1;
                });
                treeData = treeData.concat(filteredParents);
            } else {
            treeData = [];
            }
            treeObj = new  ej.navigations.TreeView({
                fields: { dataSource: treeData, id: 'id', parentID: 'pid', text: 'name', hasChildren: 'hasChild' },
                showCheckBox: true,        
                nodeClicked: nodeCheck,
                keyPress: nodeCheck,
                enableRtl: grid.enableRtl ? true : false,
                cssClass: "no-border"
            });
            if (columns && columns.length) {
                treeObj.appendTo(targetLHTMLElement);
            } else {
                var noRecordDiv = document.createElement('div');
                noRecordDiv.innerHTML = 'No Matches Found';
                noRecordDiv.className = 'no-record-text';
                targetLHTMLElement.appendChild(noRecordDiv);
            }
        }

        window.feedbackDetail = function (e) {
            var temp = document.getElementsByTagName('template')[0];
            var cloneTemplate = temp.content.cloneNode(true);
            var feedbackElement = cloneTemplate.querySelector('.feedback');
            var rating = new ej.inputs.Rating({
            value: e.Feedback,
            readOnly: true,
            cssClass: 'custom-rating',
            });
            rating.appendTo(feedbackElement);
            return feedbackElement.ej2_instances[0].wrapper.outerHTML;
        };

        function nodeCheck(args) {
            var checkedNode = [args.node];
            if (args.event.target.classList.contains('e-fullrow') || args.event.key == "Enter") {
            var getNodeDetails = treeObj.getNode(args.node);
                if (getNodeDetails.isChecked == 'true') {
                    treeObj.uncheckAll(checkedNode);
                } else {
                    treeObj.checkAll(checkedNode);
                }
            }
        }

        function queryCellInfo(args) {
            if (args.column.field === 'Status') {
                if (args.data[args.column.field] === 'Delivered') {
                    args.cell.classList.remove('e-inprogress');
                    args.cell.classList.add('e-delivered');
                } else {
                    args.cell.classList.remove('e-delivered');
                    args.cell.classList.add('e-inprogress');
                }
            }
        }

        function onCreated() {
            var submitButton = new ej.buttons.Button();
            submitButton.appendTo('#submitButton');
            if (document.getElementById('submitButton')) {
                document.getElementById('submitButton').onclick = function () {
                    columnChooserSubmit();
                };
            }
            
            var abortButton = new ej.buttons.Button();
            abortButton.appendTo('#abortButton');
            if (document.getElementById('abortButton')) {
                document.getElementById('abortButton').onclick = function () {
                    var grid = document.getElementById("Grid").ej2_instances[0];
                    grid.columnChooserModule.hideDialog();
                };
            }
        }
        onCreated();

        function columnChooserSubmit() {
            var checkedElements = [];
            var uncheckedElements = [];
            var grid = document.getElementById("Grid").ej2_instances[0];
            var showColumns = grid.getVisibleColumns().filter(function (column) { return (column.showInColumnChooser === true); });
            showColumns = showColumns.map(function (col) { return col.headerText; });
            var treeItems = document.querySelectorAll('.e-list-item');
            treeItems.forEach(function (item) {
                var itemDetails = treeObj.getNode(item);
                if (!itemDetails.hasChildren) {
                    if (item.getAttribute('aria-checked') === 'true') {
                    checkedElements.push(itemDetails.text);
                } else {
                    uncheckedElements.push(itemDetails.text);
                }
                }
            });
            showColumns = showColumns.filter(function (col) { 
                return !uncheckedElements.includes(col); 
            });
            checkedElements.forEach(function (item) {
                if (!showColumns.includes(item)) {
                    showColumns.push(item);
                }
            });
            var columnsToUpdate = { visibleColumns: showColumns, hiddenColumns: uncheckedElements };
            grid.columnChooserModule.changeColumnVisibility(columnsToUpdate);
        }
    </script>
    <style>
        #column-chooser-icon, #column-chooser-text {
        position: relative;
        }

        #column-chooser-icon {
            top: 3px;
        }

        #column-chooser-text {
        left: 5px;
        }

        .e-rtl #column-chooser-icon {
        top: 3px;
        right: 5px;
        }
        
        .e-rtl #column-chooser-text {
            left: 0;
        }
        
        .no-record-text {
            padding: 5px;
        }

        .custom-rating.e-rating-container .e-rating-item-container,
            .e-bigger
            .custom-rating.e-rating-container
            .e-rating-item-container
            .e-rating-icon,
            .e-bigger.custom-rating.e-rating-container
            .e-rating-item-container
            .e-rating-icon {
            font-size: 11px;
        }

        .custom-rating.e-rating-container
            .e-rating-item-container
            .e-rating-icon {
            -webkit-text-fill-color: lightgrey;
            -webkit-text-stroke: 1px lightgrey;
        }

        .custom-rating.e-rating-container
            .e-rating-item-container.e-rating-selected
            .e-rating-icon {
            background: linear-gradient(
            to right,
            #ffa600 var(--rating-value),
            #ffa600 var(--rating-value)
            );
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            -webkit-text-stroke: 1px #ffa600;
        }

        .e-image {
            height: 13px;
            width: 14px;
        }

        .fluent .e-grid .e-rowcell.e-delivered,
        .fluent2 .e-grid .e-rowcell.e-delivered,
        .bootstrap5 .e-grid .e-rowcell.e-delivered,
        .bootstrap5\.3 .e-grid .e-rowcell.e-delivered,
        .tailwind3 .e-grid .e-rowcell.e-delivered,
        .tailwind .e-grid .e-rowcell.e-delivered,
        .material .e-grid .e-rowcell.e-delivered,
        .fabric .e-grid .e-rowcell.e-delivered,
        .bootstrap4 .e-grid .e-rowcell.e-delivered,
        .bootstrap .e-grid .e-rowcell.e-delivered,
        .highcontrast .e-grid .e-rowcell.e-delivered,
        .fluent
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .material
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-grid .e-rowcell.e-delivered,
        .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #dfffe2;
            color: #00a653;
        }

        .fluent-dark .e-grid .e-rowcell.e-delivered,
        .fluent2-dark .e-grid .e-rowcell.e-delivered,
        .fluent2-highcontrast .e-grid .e-rowcell.e-delivered,
        .bootstrap5-dark .e-grid .e-rowcell.e-delivered,
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-delivered,
        .highcontrast .e-grid .e-rowcell.e-delivered,
        .tailwind3-dark .e-grid .e-rowcell.e-delivered,
        .tailwind-dark .e-grid .e-rowcell.e-delivered,
        .material-dark .e-grid .e-rowcell.e-delivered,
        .fabric-dark .e-grid .e-rowcell.e-delivered,
        .bootstrap-dark .e-grid .e-rowcell.e-delivered,
        .fluent-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-highcontrast
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #315c35;
            color: #38ff9c;
        }

        .material3-dark .e-grid .e-rowcell.e-delivered,
        .material3-dark
            .e-grid
            .e-rowcell.e-delivered:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #143e17;
            color: #8eda94;
        }

        .fluent .e-grid .e-rowcell.e-inprogress,
        .fluent2 .e-grid .e-rowcell.e-inprogress,
        .bootstrap5 .e-grid .e-rowcell.e-inprogress,
        .bootstrap5\.3 .e-grid .e-rowcell.e-inprogress,
        .tailwind3 .e-grid .e-rowcell.e-inprogress,
        .tailwind .e-grid .e-rowcell.e-inprogress,
        .material .e-grid .e-rowcell.e-inprogress,
        .fabric .e-grid .e-rowcell.e-inprogress,
        .bootstrap4 .e-grid .e-rowcell.e-inprogress,
        .bootstrap .e-grid .e-rowcell.e-inprogress,
        .highcontrast .e-grid .e-rowcell.e-inprogress,
        .fluent
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .material
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-grid .e-rowcell.e-inprogress,
        .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #ffebe9;
            color: #ff3740;
        }

        .fluent-dark .e-grid .e-rowcell.e-inprogress,
        .fluent2-dark .e-grid .e-rowcell.e-inprogress,
        .fluent2-highcontrast .e-grid .e-rowcell.e-inprogress,
        .bootstrap5-dark .e-grid .e-rowcell.e-inprogress,
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-inprogress,
        .highcontrast .e-grid .e-rowcell.e-inprogress,
        .tailwind3-dark .e-grid .e-rowcell.e-inprogress,
        .tailwind-dark .e-grid .e-rowcell.e-inprogress,
        .material-dark .e-grid .e-rowcell.e-inprogress,
        .fabric-dark .e-grid .e-rowcell.e-inprogress,
        .bootstrap-dark .e-grid .e-rowcell.e-inprogress,
        .fluent-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-highcontrast
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #55241e;
            color: #ff9ca0;
        }

        .material3-dark .e-grid .e-rowcell.e-inprogress,
        .material3-dark
            .e-grid
            .e-rowcell.e-inprogress:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #3a1618;
            color: #ff7b81;
        }

        .no-border {
            border: none !important;
        }
    </style>
}

@section ActionDescription{
	<div id="action-description">
		<p>This example showcases the Syncfusion EJ2 Grid component which features stacked headers, column resizing, and a customizable column chooser template.</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Header in ASP.NET MVC Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		<p>The Grid allows grouping columns to display multiple levels of headers using the  <code>Columns->Columns</code> property.
		</p>
        <p>In this demo, the columns are grouped as follows:</p>
        <ul>
            <li><b>Order Details</b>: ID and Date</li>
            <li><b>Shipping Details</b>: Country and Charges </li>
            <li><b>Delivery Status</b>: Status and Feedback</li>
        </ul>
        <br/>
        <p><b>Column Resizing:</b></p>
        <p>
            Columns can be resized by clicking and dragging the right edges of the column header. To enable this feature, set 
            <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/cref_files/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Grids.Grid~AllowResizing.html" aria-label="allowResizing">
                    AllowResizing
                <span class="sr-only">opens in a new tab</span></a>
            </code>  to true. To disable resizing for specific columns, set <code> columns->allowResizing </code> to false.
        </p>
        <br/>
        <p><b>Column Chooser Templates:</b></p>
        <p>The column chooser template is used to customize layout and manage column visibility.</p>
        <p>Key properties: </p>
        <ul>
            <li>
                <code>ColumnChooserSettings->HeaderTemplate </code> :- Defines the header template.                   
            </li>
            <li>
                <code>ColumnChooserSettings->Template </code> :- Defines the content template.
            </li>
            <li>
                <code>ColumnChooserSettings->FooterTemplate </code> :- Defines the footer template.
            </li>
            <li>
                <code>ColumnChooserSettings->EnableSearching </code> :- Enables or disables search functionality.
            </li>
        </ul>
        <p>In this demo, the <code> showInColumnChooser </code> of the <b>Customer ID</b> column is set to false, preventing it from being displayed in the column chooser popup.</p>
        <br/>	
    </div>
}

@section Title{
                    <title>ASP.NET MVC Data Grid Stacked Header Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stacked Header in ASP.NET MVC Data Grid Control</h1>
                }
