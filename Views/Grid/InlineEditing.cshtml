@{
    ViewData["Title"] = "InlineEditing";
}

@using Syncfusion.EJ2
@section ControlsSection{
    <div class="col-lg-9 control-section">
        @Html.EJS().Grid("InlineEditing").DataSource((IEnumerable<object>)ViewData["dataSource"]).Columns(col =>
   {

       col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("140").ValidationRules(new { required = true, number = true }).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("CustomerID").HeaderText("Customer Name").Width("150").ValidationRules(new { required = true, minLength = 5 }).Add();
       col.Field("Freight").HeaderText("Freight").Width("140").EditType("numericedit").ValidationRules(new { required = true, min = 0 }).Format("C2").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("OrderDate").HeaderText("Order Date").EditType("datetimepickeredit").Width("150").Format(new { type = "datetime", format = "M/d/y hh:mm a" }).Add();
       col.Field("ShipCountry").HeaderText("Ship Country").Width("150").EditType("dropdownedit").Add();
       col.Field("Verified").HeaderText("Verified").EditType("booleanedit").DisplayAsCheckBox(true).Type("boolean").Width("150").Add();

   }).CssClass("e-css").ActionBegin("actionBegin").AllowPaging().PageSettings(page => page.PageCount(2)).AllowSorting().AllowFiltering().FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); }).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).ShowAddNewRow(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()
    </div>


    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr>
                <td style="width: 40%">
                    <div style="padding-top: 7px">Add New Row Position</div>
                </td>
                <td style="width: 60%;padding-right: 10px">
                    <div id='typeddl'>
                @Html.EJS().DropDownList("AddNewRowPosition").DataSource((IEnumerable<object>)ViewData["ddData"]).Value("Top").Change("rowPositionChange").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>



    <style>
        #typeddl {
            min-width: 100px;
        }
    </style>
    <script>
        function rowPositionChange(args) {
            var grid = document.getElementById("InlineEditing").ej2_instances[0];
            grid.editSettings.newRowPosition = this.value;
            grid.refresh();
        }
        function actionBegin(args) {
            var grid = document.getElementById("InlineEditing").ej2_instances[0];
            if (args.requestType === 'save') {
                if (grid.pageSettings.currentPage !== 1 && grid.editSettings.newRowPosition === 'Top') {
                    args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - grid.pageSettings.pageSize;
                } else if (grid.editSettings.newRowPosition === 'Bottom') {
                    args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - 1;
                }
            }
        }
    </Script >
}
@section ActionDescription{
	<div id="action-description">
		 <p>In this demo, you can edit the currently selected record by changing the state of the corresponding record to edit. You can carry out the following CRUD operations:</p>
         <ul>
                <li><code>Add</code> -  To add a new record, click the add toolbar button. </li>
                <li><code>Edit</code> - To edit record, double click a cell. </li>
                <li><code>Delete</code> - To delete a record, click the toolbar delete button after selecting a row. </li>
                <li><code>Update</code> and <code>Cancel</code> - Save or discard changes by clicking the toolbar update and cancel button respectively.</li>
            </ul>
        <p>By default, a new row will be added at the top of the grid. You can change it by setting <code>editSettings.newRowPosition</code> as <code>Bottom</code></p>
        </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Inline Editing in ASP.NET MVC Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">		   
   <p> Grid supports CRUD operations. This CRUD operations can be configured using
    <code><a target="_blank" className="code" href="https://ej2.syncfusion.com/aspnetmvc/documentation/api/grid/editSettings/" aria-label="editSettings">
    editSettings<span class="sr-only">opens in a new tab</span></a></code>. It also has the following modes to manipulate the datasource.
    </p>
    <ul>
        <li><code>Normal</code></li>
        <li><code>Dialog</code></li>
        <li><code>Batch</code></li>
    </ul>
    <p>
        In the normal edit mode, when you start editing the currently selected record is changed to edit state. You can edit any row by double clicking it or clicking the toolbarâ€™s
        <code>Edit</code> button. You can change the row values and save edited data to the data source.
    </p>
    <p>
        In order to add a new record easily, the grid content always displays a blank "add new row".
        You can enable this feature by setting the <code>showAddNewRow</code> property of <code>editSettings</code> to true.
    </p>
    <p>
            More information on the inline editing can be found in this 
            <a target="_blank"
              href="https://ej2.syncfusion.com/aspnetmvc/documentation/grid/editing/in-line-editing" aria-label="documentation section">
              documentation section<span class="sr-only">opens in a new tab</span></a>.
          </p>
	</div>
}
@section Title{
                    <title>ASP.NET MVC Data Grid Inline Editing Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inline Editing in ASP.NET MVC Data Grid Control</h1>
                }
