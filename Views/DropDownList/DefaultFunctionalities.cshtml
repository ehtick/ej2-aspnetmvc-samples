@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns
@using EJ2MVCSampleBrowser.Models
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div id="default" style='padding-top:75px;'>

                @Html.EJS().DropDownList("games").Placeholder("Select a game").PopupHeight("220px").Index(2).DataSource(
                    (IEnumerable<GameList>)ViewData["data"]).Change("valueChange").Fields(new DropDownListFieldSettings { Text = "Game", Value = "Id" }).Render()
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%; margin:10px">
            <tr>
                <td class="left-side">Value</td>
                <td>:<span id='value' class="right-side"></span></td>
            </tr>
            <tr>
                <td class="left-side">Text</td>
                <td>:<span id='text' class="right-side"></span></td>
            </tr>
        </table>
    </div>


    @*custom code start*@

    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 300px;
        }

        .property-section .right-side {
            padding-left: 10px;
        }

        .property-section .left-side {
            padding: 5px;
            width: 25%
        }
    </style>
    @*custom code end*@
    <script type="text/javascript">
        function valueChange() {
            var listObj = document.getElementById('games').ej2_instances[0];
            var value = document.getElementById('value');
            var text = document.getElementById('text');
            // update the text and value property values in property panel based on selected item in DropDownList
            value.innerHTML = listObj.value;
            text.innerHTML = listObj.text;
        }
    </script>
}
@section Scripts{
    <script type="text/javascript">
        valueChange();

    </script>

}
@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC Dropdown List control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the default functionalities of the DropDownList in ASP.NET MVC application. Click the DropDownList element and select an item from the <code>options</code> list.
            The selected item's <code>value</code> and <code>text</code> property values will be shown the in property panel.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The <code>DropDownList</code> component contains a list of predefined values from that the user can choose a single
            value.
        </p>
        <p>
            The default sample illustrates the use of DropDownList that allows the end-users to select an item from the <code>options</code> list. The selected item's <code>value</code> and <code>text</code> property values will be displayed in the property
            panel.
        </p>
        <p>
            More information on the DropDownList instantiation can be found in the
            <a href="https://ej2.syncfusion.com/aspnetmvc/documentation/drop-down-list/getting-started-mvc/" target="_blank" aria-label="documentation section"> documentation section<span class="sr-only">opens in a new tab</span></a>.
        </p>
    </div>
}



@section Title{
                    <title>ASP.NET MVC Dropdown List Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC Dropdown List Control</h1>
                }